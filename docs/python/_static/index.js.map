{"version":3,"sources":["webpack://algorithmx-jupyter/webpack/bootstrap","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/index.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/layout.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/rectangle.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/shortestpaths.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/linklengths.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/descent.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/vpsc.ts","webpack://algorithmx-jupyter/./src/version.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/powergraph.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/rbtree.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/pqueue.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/geom.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/handledisconnected.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/gridrouter.ts","webpack://algorithmx-jupyter/./src/index.ts","webpack://algorithmx-jupyter/./src/widget.ts","webpack://algorithmx-jupyter/external \"@jupyter-widgets/base\"","webpack://algorithmx-jupyter/./src/buttons.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/adaptor.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/d3adaptor.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/d3v3adaptor.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/d3v4adaptor.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/layout3d.ts","webpack://algorithmx-jupyter/./node_modules/webcola/WebCola/src/batch.ts","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/namespaces.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/namespace.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/creator.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selector.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selectorAll.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/matcher.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/sparse.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/enter.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/constant.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/data.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/sort.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/attr.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/window.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/style.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/classed.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/text.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/html.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/raise.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/lower.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/insert.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/remove.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/clone.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/on.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/dispatch.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/index.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/select.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/selectAll.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/filter.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/exit.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/merge.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/order.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/call.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/nodes.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/node.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/size.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/empty.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/each.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/property.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/append.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selection/datum.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/select.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/local.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/sourceEvent.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/point.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/mouse.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/touch.js","webpack://algorithmx-jupyter/./node_modules/d3-dispatch/src/dispatch.js","webpack://algorithmx-jupyter/./node_modules/d3-timer/src/timer.js","webpack://algorithmx-jupyter/./node_modules/d3-timer/src/timeout.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/schedule.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/interrupt.js","webpack://algorithmx-jupyter/./node_modules/d3-color/src/define.js","webpack://algorithmx-jupyter/./node_modules/d3-color/src/color.js","webpack://algorithmx-jupyter/./node_modules/d3-color/src/math.js","webpack://algorithmx-jupyter/./node_modules/d3-color/src/lab.js","webpack://algorithmx-jupyter/./node_modules/d3-color/src/cubehelix.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/basis.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/constant.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/color.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/rgb.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/basisClosed.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/number.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/string.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/transform/parse.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/transform/index.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/zoom.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/hsl.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/hcl.js","webpack://algorithmx-jupyter/./node_modules/d3-interpolate/src/cubehelix.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/tween.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/interpolate.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/remove.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/selection.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/text.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/index.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/linear.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/quad.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/cubic.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/select.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/selectAll.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/filter.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/merge.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/transition.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/on.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/attr.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/attrTween.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/style.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/styleTween.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/delay.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/duration.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/transition/ease.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/poly.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/sin.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/exp.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/circle.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/bounce.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/back.js","webpack://algorithmx-jupyter/./node_modules/d3-ease/src/elastic.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/selection/transition.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/selection/index.js","webpack://algorithmx-jupyter/./node_modules/d3-transition/src/selection/interrupt.js","webpack://algorithmx-jupyter/./node_modules/d3-drag/src/noevent.js","webpack://algorithmx-jupyter/./node_modules/d3-drag/src/nodrag.js","webpack://algorithmx-jupyter/./node_modules/d3-drag/src/constant.js","webpack://algorithmx-jupyter/./node_modules/d3-drag/src/event.js","webpack://algorithmx-jupyter/./node_modules/d3-drag/src/drag.js","webpack://algorithmx-jupyter/./node_modules/d3-path/src/path.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/constant.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/math.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/arc.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/linear.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/point.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/line.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/area.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/descending.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/identity.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/pie.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/radial.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/lineRadial.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/areaRadial.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/pointRadial.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/array.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/link/index.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/circle.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/cross.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/diamond.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/star.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/square.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/triangle.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol/wye.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/symbol.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/noop.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/basis.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/basisClosed.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/basisOpen.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/bundle.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/cardinal.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/catmullRom.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/linearClosed.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/monotone.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/natural.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/curve/step.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/offset/none.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/order/none.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/stack.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/offset/expand.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/offset/diverging.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/offset/silhouette.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/offset/wiggle.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/order/ascending.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/order/descending.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/order/insideOut.js","webpack://algorithmx-jupyter/./node_modules/d3-shape/src/order/reverse.js","webpack://algorithmx-jupyter/./node_modules/d3-zoom/src/constant.js","webpack://algorithmx-jupyter/./node_modules/d3-zoom/src/event.js","webpack://algorithmx-jupyter/./node_modules/d3-zoom/src/transform.js","webpack://algorithmx-jupyter/./node_modules/d3-zoom/src/noevent.js","webpack://algorithmx-jupyter/./node_modules/d3-zoom/src/zoom.js","webpack://algorithmx-jupyter/./node_modules/algorithmx/dist/algorithmx.es.js","webpack://algorithmx-jupyter/./node_modules/d3-selection/src/selectAll.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__export","EventType","powergraph","linklengths_1","descent_1","rectangle_1","shortestpaths_1","geom_1","handledisconnected_1","isGroup","g","leaves","groups","Layout","_this","this","_canvasSize","_linkDistance","_defaultNodeSize","_linkLengthCalculator","_linkType","_avoidOverlaps","_handleDisconnected","_running","_nodes","_groups","_rootGroup","_links","_constraints","_distanceMatrix","_descent","_directedLinkConstraints","_threshold","_visibilityGraph","_groupCompactness","event","linkAccessor","getSourceIndex","getTargetIndex","setLength","setLinkLength","getType","on","e","listener","trigger","type","kick","tick","_alpha","end","alpha","stress","_lastStress","length","locks","clear","fixed","px","py","x","y","add","s1","rungeKutta","updateNodePositions","nodes","v","forEach","Math","max","source","target","Array","padding","parent","gi","filter","powerGraphGroups","f","getGroups","avoidOverlaps","arguments","handleDisconnected","flowLayout","axis","minSeparation","getMinSeparation","links","constraints","distanceMatrix","size","defaultNodeSize","groupCompactness","linkDistance","linkType","convergenceThreshold","start","getLinkLength","link","getLinkType","symmetricDiffLinkLengths","idealLength","w","jaccardLinkLengths","initialUnconstrainedIterations","initialUserConstraintIterations","initialAllConstraintsIterations","gridSnapIterations","keepRunning","distances","N","h","G","ao","index","Calculator","DistanceMatrix","Descent","createSquareMatrix","u","weight","D","j","strength","idealDistance","addAttraction","curConstraints","concat","generateDirectedEdgeConstraints","threshold","initialLayout","project","Projection","projectFunctions","run","separateOverlappingComponents","snapStrength","snapGridSize","width","numGridSnapNodes","scaleSnapByMaxH","G0","resume","iterations","edges","map","vs","push","gg","height","x_1","y_1","graphs","separateGraphs","applyPacking","bounds","setXCentre","setYCentre","stop","prepareEdgeRouting","nodeMargin","TangentVisibilityGraph","inflate","vertices","routeEdge","edge","ah","draw","lineData","vg2","P","V","E","port1","port2","addPoint","addEdgeIfVisible","shortestPath","id","PathFromNodeToNode","route","makeEdgeBetween","innerBounds","sourceIntersection","arrowStart","q","rayIntersection","makeEdgeTo","linkId","dragStart","storeOffset","dragOrigin","stopNode","origin","_dragGroupOffsetX","_dragGroupOffsetY","cx","cy","drag","position","dragEnd","mouseOver","mouseOut","vpsc_1","rbtree_1","computeGroupBounds","reduce","union","Rectangle","empty","X","Y","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","overlapX","ux","vx","overlapY","uy","vy","dx","dy","min","lineIntersections","x1","y1","x2","y2","sides","intersections","lineIntersection","ints","x3","y3","x4","y4","dx12","dx34","dy12","dy34","denominator","dx31","dy31","a","b","pad","si","ti","sqrt","al","targetIntersection","Node","pos","prev","makeRBTree","next","Event","isOpen","compareEvents","RBTree","xRect","getCentre","getOpen","getClose","getSize","makeRect","open","close","center","findNeighbours","scanline","forward","reverse","it","findIter","uovervX","insert","yRect","generateGroupConstraints","root","minSep","isContained","gn","ln","childConstraints","ccs","rs","minVar","desiredPosition","maxVar","variable","cs","generateConstraints","cOut","cIn","left","right","gapAdjustment","gap","vars","rect","console","assert","events","sort","remove","makeConstraint","sep","Constraint","visitNeighbours","mkcon","iterator","generateXConstraints","generateYConstraints","generateXGroupConstraints","generateYGroupConstraints","removeOverlaps","Variable","solver","Solver","solve","IndexedVariable","_super","__extends","rootGroup","variables","createConstraints","w2","h2","stiffness","createSeparation","equality","makeFeasible","dim","offsets","node","nextPos","createAlignment","xConstraints","yConstraints","slice","offset","isSep","setupVariablesAndBounds","x0","y0","desired","getDesired","fixedWeight","ix","iy","xProject","xmin","xmax","p2","yProject","ymin","ymax","updateNodeBounds","updateGroupBounds","starting","setStartingPositions","setDesiredPositions","pqueue_1","Neighbour","distance","neighbours","QueueEntry","es","getLength","dijkstraNeighbours","DistancesFromNode","PathFromNodeToNodeWithPrevCost","prevCost","PriorityQueue","qu","visitedFrom","pop","neighbour","viduid","cc","path","dest","MAX_VALUE","reduceKey","unionCount","keys","intersectionCount","computeLinkLengths","la","addNeighbours","getNeighbours","stronglyConnectedComponents","numVertices","stack","components","strongConnect","lowlink","onStack","_i","_a","out","component","edges_1","v_1","nodes_1","ui","vi","Locks","isEmpty","apply","random","PseudoRandom","k","H","Hd","ia","ib","xtmp","minD","M","offsetDir","getNextBetween","computeDerivatives","d2","Huu","maxH","maxDisplaces","sd2","rd","isFinite","D2","gs","l3","hs","log","numNodes","xiu","abs","dotProd","rightMultiply","computeStepSize","numerator","reduceStress","takeDescentStep","computeStress","copy","stepAndProject","stepSize","mApply","matrixApply","computeNextPosition","beta","converged","mid","disp","nMinus1","rl","zeroDistance","seed","range","getNext","PositionStats","scale","AB","AD","A2","addVariable","ai","bi","wi","getPosn","active","unsatisfiable","slack","dfdv","block","ps","posn","ff","Block","updateWeightedPosition","compute_lm","postAction","_dfdv","lm","populateSplitBlock","traverse","visit","acc","findMinLM","findMinLMBetween","lv","rv","findPath","to","endFound","isActiveDirectedPathBetween","split","createSplitBlock","startVar","splitBetween","vl","vr","bs","constraint","lb","rb","mergeAcross","dist","cost","sum","Blocks","list","blockInd","last","swapBlock","merge","updateBlockPositions","inactive","LAGRANGIAN_TOLERANCE","nb","mostViolated","minSlack","deletePoint","ZERO_UPPERBOUND","satisfy","lastcost","removeOverlapInOneDimension","spans","lowerBound","upperBound","desiredCenter","leftMost","rightMost","leftMostSize","rightMostSize","vLower","vUpper","newCenters","pkg","version","PowerEdge","Configuration","roots","initModulesFromGroup","ModuleSet","Module","R","outgoing","incoming","group","moduleSet","child","definition","prop","LinkSets","inInt","intersection","outInt","children","update","forAll","ms","linktype","nls","count","rootMerges","merges","ctr","i_","nEdges","greedyMerge","getGroupHierarchy","retargetedEdges","toGroups","isLeaf","gid","isIsland","isPredefined","allEdges","getEdges","edgetype","table","other","result","contains","sets","forAllModules","lt","powerEdges","TreeBase","data","res","_root","iter","_comparator","_cursor","_ancestors","get_child","find","_bound","cmp","Iterator","each","cb","reach","cur","tree","_tree","_minNode","save","_maxNode","red","dir","set_child","val","comparator","ret","head","undefined","gp","ggp","is_red","dir2","single_rotate","double_rotate","found","sr","sibling","gpc","PairingHeap","elem","subheaps","toString","selector","str","needComma","subheap","isHeap","lessThan","every","obj","heap2","removeMin","mergePairs","firstPair","remaining","decreaseKey","newValue","setHeapNode","newHeap","pairingNode","top","args","arg","heapNode","newKey","Point","LineSegment","PolyPoint","isLeft","P0","P1","P2","above","vj","below","Rtangent_PointPolyC","dnC","floor","Ltangent_PointPolyC","tangent_PolyPolyC","W","t1","t2","cmp1","cmp2","ix1","ix2","done","RLtangent_PolyPolyC","ConvexHull","S","minmax","maxmin","maxmax","bot","clockwiseRadialSweep","atan2","LRtangent_PolyPolyC","LLtangent_PolyPolyC","RRtangent_PolyPolyC","BiTangent","BiTangents","TVGPoint","VisibilityVertex","polyid","polyvertid","vv","VisibilityEdge","g0","pj","Pi","Pj","tangents","i1","i2","intersectsPolys","Vclosed","poly","rtan","ltan","intersects","int","bt","v1","v2","v3","w1","w3","v1v2w2","v2w1w2","v2w2w3","w1w2v2","w2v1v2","w2v2v3","ll","rr","lr","isAnyPInQ","isPointInsidePoly","polysOverlap","packingOptions","PADDING","GOLDEN_SECTION","FLOAT_EPSILON","MAX_INERATIONS","node_size","desired_ratio","init_x","init_y","svg_width","svg_height","real_width","real_height","min_width","global_bottom","line","step","max_width","put_rect","space_left","bottom","graph","min_x","min_y","max_x","max_y","array","calculate_bb","curr_best_f","curr_best","get_entire_width","iterationCounter","f_x1","f_x2","flag","df","corner","put_nodes_to_right_positions","marks","ways","clusters","n1","n2","explore_node","is_new","adjacent","NodeWrapper","leaf","Vert","LongestCommonSubsequence","mf","findMatch","tr","mr","reversed","match","getSequence","GridRouter","originalnodes","accessor","groupPadding","getBounds","getChildren","cols","getGridLines","rows","ports","backToFront","getDepth","colMids","midPoints","rowMids","rowx","rowX","coly","colY","hlines","vlines","lines","verts","li","intersect","isHoriz","delta","avg","columns","ls","overlapping","toUpperCase","col","splice","indexOf","depth","mids","findLineage","lineage","findAncestorPathBetween","aa","ba","commonAncestor","lineages","siblingObstacles","lineageLookup","obstacles","getSegmentSets","routes","vsegments","ei","edgeid","sdx","vsegmentsets","segmentset","segments","nudgeSegs","leftOf","s2","e1","e2","lind","rind","nudgeSegments","ss","openCount","routeEdges","nudgeGap","routePaths","order","orderEdges","makeSegments","unreverseEdges","segment","angleBetween2Lines","line1","line2","angle1","angle2","diff","PI","getOrder","pairs","edgeOrder","lcs","copyPoint","isStraight","obstacleLookup","passableEdges","pathPoints","getRoutePath","cornerradius","arrowwidth","arrowheight","routepath","arrowpath","angle","arrowtip","arrowcorner1","arrowcorner2","base_1","version_1","buttonUtils","__importStar","algorithmx","AlgorithmxModel","DOMWidgetModel","[object Object]","assign","super","defaults","_model_name","_model_module","_model_module_version","_view_name","_view_module","_view_module_version","show_buttons","serializers","AlgorithmxView","DOMWidgetView","client","canvas","eventIndex","stopped","eventStr","JSON","parse","dispatch","model","playEvents","newEvents","immediateCanvas","eventQ","duration","cancelall","startall","zoomkey","setTimeout","svgattr","resetCanvas","element","el","canvasDiv","querySelector","removeChild","buttonDiv","removeCanvas","playAllEvents","stopall","document","createElement","style","buttonPlay","createButton","setIcon","clickStart","clickStop","buttonRestart","clickRestart","appendChild","setAttribute","subscribe","fullEvent","fullEventStr","stringify","send","renderButtons","eventsChanged","__WEBPACK_EXTERNAL_MODULE__17__","iconName","onclick","button","backgroundColor","display","textAlign","marginRight","cssFloat","onmouseover","cursor","onmousedown","onmouseup","onmouseleave","icon","fontSize","color","lineHeight","layout_1","LayoutAdaptor","options","dragstart","dragend","eventType","adaptor","d3v3","d3v4","d3adaptor","d3Context","isD3V3","D3StyleLayoutAdaptor","d3","d3layout","behavior","d3event","timer","subject","Link3D","actualLength","Node3D","z","Layout3D","idealLinkLength","useJaccardLinkLengths","dims","linkLength","LinkAccessor","descent","gridrouter_1","gridify","pgLayout","margin","groupMargin","cola","routerNode","gridRouterNodes","powerGraph","powerGraphGridLayout","grouppadding","sourceInd","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","none","src_selector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","EnterNode","datum","_next","_parent","__data__","constructor","insertBefore","keyPrefix","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending","NaN","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","trim","classList","ClassList","_node","_names","getAttribute","classedAdd","names","classedRemove","join","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","that","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","parents","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","enterGroup","updateGroup","previous","i0","_enter","_exit","selection","groups0","groups1","m0","m1","group0","group1","compare","compareNode","sortgroups","sortgroup","callback","attr","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","text","html","append","before","clone","deep","typenames","parseTypenames","src_selection","src_select","nextId","Local","_","set","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","noop","dispatch_dispatch","Error","Dispatch","types","T","taskHead","taskTail","src_dispatch","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","init","schedule","schedule_get","schedule_set","interrupt","define","factory","extend","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","rgbConvert","rgb","opacity","color_rgb","hex","round","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","pow","darker","isNaN","deg2rad","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t3","labConvert","Lab","Hcl","cos","sin","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","hcl","A","B","C","cubehelix_D","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","cosh","sinh","src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","rgbSpline","spline","colors","values","number","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","lastIndex","one","zero","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","rho","SQRT2","zoom_cosh","exp","src_zoom","p0","p1","ux0","uy0","w0","ux1","uy1","d1","b0","b1","r0","r1","coshr0","zoom_sinh","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","tweenValue","transition","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","inherit","id0","id1","on0","on1","sit","on_start","onFunction","attrTween","interpolate","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","d3_drag_src_constant","DragEvent","defaultFilter","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","sublisteners","clickDistance","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","src_path","d3_shape_src_constant","math_epsilon","math_pi","math_halfPi","math_tau","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","lo","ox","oy","x11","y11","x10","y10","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","context","buffer","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","ax","ay","bx","by","kc","lc","centroid","Linear","_context","areaStart","_line","areaEnd","lineStart","_point","lineEnd","curve_linear","point_x","point_y","src_line","defined","curve","output","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending","src_identity","src_pie","sortValues","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","radius","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","link_link","argv","curveHorizontal","curveVertical","link_curveRadial","p3","linkHorizontal","linkVertical","linkRadial","circle","cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","symbol","src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","_x","_y","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","sign","slope3","h0","h1","s0","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","natural","Step","_t","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","oz","kz","sz","sij","ki","expand","diverging","yp","yn","silhouette","wiggle","sij0","s3","sk","order_ascending","sums","ascending_sum","order_descending","insideOut","tops","bottoms","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","invert","location","invertX","invertY","rescaleX","domain","rescaleY","transform_identity","noevent_nopropagation","src_noevent","zoom_defaultFilter","defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","__zoom","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","extent","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","moved","k1","shiftKey","started","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","emit","__webpack_exports__","client$2","algorithmx_es_canvas","canvasSelection","EnumDispatchType","EnumReceiveType","EnumErrorType","__assign","mapDict","dict","func","newDict","enumValues","enumeration","isNumStr","isDict","isArray","isDictEmpty","filterError","filterDict","filterFn","entries","_b","build","builder","instance","algorithmx_es_inherit","setPrototypeOf","AttrType","getAttrEntry","sel","createFullAttr","ids","createParentAttr","attrEvent","eventData","attributes","animation","highlight","queue","queueEvent","queues","String","mergeDictRec","merged","updateAnimation","**","animationAttr","addListener","fn","triggerListener","construct","visible","initattr","attrs","seconds","linger","pause","cancel","broadcast","message","listen","onReceive","onCallback","substr","svgMixinAttrBuilder","builder$1","align","font","labelSelection","builder$2","label","labels","shape","draggable","click","onClick","hoverin","onHoverin","hover","hoverout","onHoverout","builder$3","directed","thickness","flip","builder$4","edgeId","orderedNodes","initAttr","edgelengths","lengthInfo","pan","zoom$$1","panlimit","box","zoomlimit","limit","required","handler","event$$1","entered","error","receiveHandler","getQueueState","busy","initQueue","updateQueue","executeNext","force","queueState","execute","event_1","executeQueueUpdate","stateFn","taskFn","resultTask","newState","task","modifyMultipleQueues","algorithmx_es_start","resultState","algorithmx_es_stop","isQueueUpdateEvent","queueTask_1","nextTask_1","nextTask_2","d3$2","freeze","d3_ease_src_namespaceObject","d3_shape_src_namespaceObject","zoomIdentity","isTransition","COLORS","parseColor","parsedColor","dashToUpperCamel","includes","renderId","newHash","charCodeAt","selectOrAdd","addFn","selected","charAt","selectCanvasContainer","selectCanvas","selectCanvasInner","selectNodeGroup","selectNode","renderId$$1","selectEdge","flatten","renderData","mapped","getEntry","combine","renderDict","changesDict","changes","hasChanged","renderAttr","markKeysForUpdate","newChanges","canAnimate","transition$1","newTransition","parseTime","isAnimationImmediate","transAnimate","trans","animate","onChanged","render","renderFn","renderHighlight","renderNoHighlight","renderStartFn","renderEndFn","initTrans","renderLookup","entry","renderLookupRemovals","MARKER_ARROW","viewBox","getFullId","edgeSel","markerId","markerSel","select$1","defsSel","fullId","marker","renderVisibleLookup","renderSvgAttr","valueFn","renderSvgAttrMixin","precessKey","renderVisible","transition$$1","animateAdd","renderRemove","preprocess","visibleData","renderElement","renderDataFull","renderElementLookup","getPathLength","pathSel","getTotalLength","reverseDirection","colorData","tweenOverlay","overlaySel","pathLengthFn","beginTraverse","pathLength","renderTraverse","overlaySelector","pathLengthInit","highlightTraverse","animDuration_1","endDuration_1","removeTrans","EnumAlign","extendRecordDef","extendDef","baseDef","keyOrder","Record","Boolean","animationDefaults","svgMixinDefEntries","Lookup","svgMixinDefKeys","svgMixinDefaults","angleToRad","angleDeg","angleToDeg","angleRad","restrictAngle","algorithmx_es_rotate","algorithmx_es_translate","EnumVarSymbol","ALIGN_ANGLES","top-left","top-middle","top-right","middle-left","middle","middle-right","bottom-left","bottom-middle","bottom-right","definition$1","validValues","defaults$1","animationDefaults$1","alignFromAngle","rotate$$1","testAngle","radialAligns","prevAngle","curAngle","nextAngle","init$1","isAlignTop","isAlignBottom","render$2","labelData","changedRadialAlign","alignData","textSel","combinedTextAlign","textData","splitText","line$$1","initOffset","renderText","combinedPos","posData","polarX","polarY","rotation","rotateStr","renderPos","renderAlign","selectLabelGroup$1","render$3","labelGroup","marketTarget","render$1","markerSelector","renderColor","overlay","selectOverlay","getChildDef","def","isDefRecord","isDefLookup","isDefArray","isDefPrimitive","algorithmx_es_merge","prevAttr","isAttrEmpty","mergedChanges","emptyAttr","newLookupEntries","reduceAttr","reduceChanges","subtractPartial","subtract","subtractFull","keepIfDifferent","newAttr","getNullEntries","nullEntries","reduced","fillLookupEntries","referenceAttr","parseSingleTerm","term","reverseIndex","findIndex","substring","varIndex","rawNumStr","varStr","numStr","num","parseFloat","parseExprObj","formatted","formattedExpr","numExpr","isExpressionNum","isExpression","evaluateNum","expression","getExpressionVars","getEvaluatedChanges","varSymbols_1","EnumShape","getExpr","getNonExpr","getPermanentExpr","EnumCurve","definition$2","validVars","Radius","Width","Height","defaults$2","animationDefaults$2","*","radiusAtAngle","rx","ry","cornerAngle","radiusAtAngleRect","initChildren","newLabels","prevRadialLabels","newRadialLabelChanges","newOtherLabelChanges","newRadialLabels","defaultAngle","newOtherLabels","getVariables","_c","hasWidth","hasHeight","getLabelVariables","initPos","sqrtOffset","sizeInit","halfSize","difference","rawPos","getLiveNodeData","canvasSel","layoutState","canvasAttr","nodeId","nodeGroup","nodeAttr","nodeLayout","nodeSel","selWidth","selHeight","getPointAtNodeBoundary","fullOffset","getLiveEdgeData","edgeAttr","sourceData","targetData","targetOffset","MARKER_SIZE","adjNodes","adjacentNodes","sourcePos","anglesAbs","sortedAngles","angleDiffs","maxDifIndex","maxIndex","getLoopAngle","sourceOffset","sourceId","targetId","shouldFlip","renderEdgePath","edgePath","pointBeforeSource","pointBeforeTarget","angleAtSource","angleAtTarget","pointAtSource","pointAtTarget","pointAtSourceRel","pointAtTargetRel","lineFunction","updateEdges","layout","origin_1","sourcePoint","targetPoint","getEdgeOrigin","updateCanvas","updateNodes","fromAttrChanges","changedHeight","initCola","init$3","algorithmx_es_update","didUpdateNodes","didUpdateLayout$1","didUpdateEdges","didUpdateCanvas","didUpdateLayout","newNodes","nodeChanges","mergeLookup","newEdges","updateCola$2","createLookup","updateCola","adjacency","initMatrix","withSource","calcAdjacency","EnumEdgeLengthType","definition$3","defaults$3","labelDefaults","animationDefaults$3","initChildren$1","pathMidY","pathMidYNum","incrementMatrix","sourceAdj","targetAdj","sourceLookup","targetLookup","initLookup","prevEdges","newMatrix","ceil","edgeDefaults","initEdge","EnumAnimationType","EnumAnimationEase","definition$4","CanvasWidth","CanvasHeight","horizontal","vertical","defaults$4","labelDefaults$1","animationDefaults$4","initChildren$2","defaultLabel","initNode","nodeChildrenInit","edgeChildrenInit","evaluate$2","evaluated","expr","evalChanges","getVariables$1","newEval","evalNodeChanges","labelExpr","evaluate$1","initialize","prevState","canvasSize","prevStateNew","svgBase","getCanvasSize","changesNew","evaluate$3","prevExpr","fullNonExprInit","changedExpr","changedExprEval","fullNonExpr","permanentExprEval","permanentExprChanges","changesEval","definition$5","defaults$5","createFullDef","bodyDef","endDef","definition$6","addEndpoints","anim","curAnim","newAnim","newCurAnim","getRelevantChanges","prevChild","process","changesForced","changesFull","animChanges","animDefaultsRegular","animDefaultsFull","formatPath","preprocess$1","info","newInfo","fullInfo","preprocessPrimitive","preprocessRecord","preprocessLookup","preprocessArray","errorText","replace","opIndex","lastIndexOf","term1","term2","exprObject","parseExpr","record","valueOrArrayOrDict","invalidEntries","processUpdate","attrData","preAttr","changesInit","prevNodes","changedNodes","removeInvalidEdges","attrMerged","attrRemoved","exprChanged","expressions","validateAnim","getRenderData","processed","preprocess$2","shapeUpdateKeys","render$4","renderDataInit","shapeSel","renderShape","shapeSelection","sizeData","renderSize","render$5","navigator","userAgent","test","canvasInner","selectLabelGroup","edgeGroup","selectEdgeGroup","updatedRenderData","renderCanvas","updatePanZoomLimit","panH","panV","zoomKey_1","newBehavior","requiresKey","ctrlKey","metaKey","update$1","zoomBehavior","updatePanZoom","render$6","panZoomData","panZoom","panCenter","renderPanZoom","_dragging","_mouseover","registerNodeHover","onHover","nodeDataInit","nodeData","nodeHover","hoverFn","enableHover","registerNodeClick","nodeClick","defaultPrevented","enableClick","renderWithLayout","colaLayout","enableDrag","disableDrag","dispatchError","executeReset","attribute","renderBehavior","render$7","liveSel","renderWithTick","executeUpdate","executeHighlight","processHighlight","newClient","setState","algorithmx_es_schedule","scheduler","receiveEvent","schedulerState","executeEvent","init$6","builder$5","realClient","subscriptions","realCanvas"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","export * from './src/adaptor'\r\nexport * from './src/d3adaptor'\r\nexport * from './src/descent'\r\nexport * from './src/geom'\r\nexport * from './src/gridrouter'\r\nexport * from './src/handledisconnected'\r\nexport * from './src/layout'\r\nexport * from './src/layout3d'\r\nexport * from './src/linklengths'\r\nexport * from './src/powergraph'\r\nexport * from './src/pqueue'\r\nexport * from './src/rbtree'\r\nexport * from './src/rectangle'\r\nexport * from './src/shortestpaths'\r\nexport * from './src/vpsc'\r\nexport * from './src/batch'\r\n","import * as powergraph from './powergraph'\r\nimport {LinkLengthAccessor, symmetricDiffLinkLengths, jaccardLinkLengths, generateDirectedEdgeConstraints} from './linklengths'\r\nimport {Descent} from './descent'\r\nimport {Rectangle, Projection, makeEdgeTo, makeEdgeBetween} from './rectangle'\r\nimport {Calculator} from './shortestpaths'\r\nimport {TangentVisibilityGraph, TVGPoint} from './geom'\r\nimport {separateGraphs, applyPacking} from './handledisconnected'\r\n    /**\r\n     * The layout process fires three events:\r\n     *  - start: layout iterations started\r\n     *  - tick: fired once per iteration, listen to this to animate\r\n     *  - end: layout converged, you might like to zoom-to-fit or something at notification of this event\r\n     */\r\n    export enum EventType { start, tick, end };\r\n    export interface Event {\r\n        type: EventType;\r\n        alpha: number;\r\n        stress?: number;\r\n        listener?: () => void;\r\n    }\r\n    export interface InputNode {\r\n        /**\r\n         * index in nodes array, this is initialized by Layout.start()\r\n         */\r\n        index?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        x?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        y?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        width?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        height?: number;\r\n        /**\r\n         * selective bit mask.  !=0 means layout will not move.\r\n         */\r\n        fixed?: number;\r\n    }\r\n    export interface Node extends InputNode {\r\n      // Client-passed node may be missing these properties, which will be set\r\n      // upon ingestion\r\n      x: number;\r\n      y: number;\r\n    }\r\n\r\n    export interface Group {\r\n        bounds?: Rectangle;\r\n        leaves?: Node[];\r\n        groups?: Group[];\r\n        padding: number;\r\n    }\r\n\r\n    function isGroup(g: any): g is Group {\r\n        return typeof g.leaves !== 'undefined' || typeof g.groups !== 'undefined';\r\n    }\r\n\r\n    export interface Link<NodeRefType> {\r\n        source: NodeRefType;\r\n        target: NodeRefType;\r\n\r\n        // ideal length the layout should try to achieve for this link\r\n        length?: number;\r\n\r\n        // how hard we should try to satisfy this link's ideal length\r\n        // must be in the range: 0 < weight <= 1\r\n        // if unspecified 1 is the default\r\n        weight?: number;\r\n    }\r\n\r\n    export type LinkNumericPropertyAccessor = (t: Link<Node | number>) => number;\r\n\r\n    export interface LinkLengthTypeAccessor extends LinkLengthAccessor<Link<Node | number>> {\r\n        getType: LinkNumericPropertyAccessor;\r\n    }\r\n    /**\r\n     * Main interface to cola layout.\r\n     * @class Layout\r\n     */\r\n    export class Layout {\r\n        private _canvasSize = [1, 1];\r\n        private _linkDistance: number | LinkNumericPropertyAccessor = 20;\r\n        private _defaultNodeSize: number = 10;\r\n        private _linkLengthCalculator = null;\r\n        private _linkType = null;\r\n        private _avoidOverlaps = false;\r\n        private _handleDisconnected = true;\r\n        private _alpha;\r\n        private _lastStress;\r\n        private _running = false;\r\n        private _nodes = [];\r\n        private _groups = [];\r\n        private _rootGroup = null;\r\n        private _links: Link<Node | number>[] = [];\r\n        private _constraints = [];\r\n        private _distanceMatrix = null;\r\n        private _descent: Descent = null;\r\n        private _directedLinkConstraints = null;\r\n        private _threshold = 0.01;\r\n        private _visibilityGraph = null;\r\n        private _groupCompactness = 1e-6;\r\n\r\n        // sub-class and override this property to replace with a more sophisticated eventing mechanism\r\n        protected event = null;\r\n\r\n        // subscribe a listener to an event\r\n        // sub-class and override this method to replace with a more sophisticated eventing mechanism\r\n        public on(e: EventType | string, listener: (event?: Event) => void): this {\r\n            // override me!\r\n            if (!this.event) this.event = {};\r\n            if (typeof e === 'string') {\r\n                this.event[EventType[e]] = listener;\r\n            } else {\r\n                this.event[e] = listener;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // a function that is notified of events like \"tick\"\r\n        // sub-classes can override this method to replace with a more sophisticated eventing mechanism\r\n        protected trigger(e: Event) {\r\n            if (this.event && typeof this.event[e.type] !== 'undefined') {\r\n                this.event[e.type](e);\r\n            }\r\n        }\r\n\r\n        // a function that kicks off the iteration tick loop\r\n        // it calls tick() repeatedly until tick returns true (is converged)\r\n        // subclass and override it with something fancier (e.g. dispatch tick on a timer)\r\n        protected kick(): void {\r\n            while (!this.tick());\r\n        }\r\n\r\n        /**\r\n         * iterate the layout.  Returns true when layout converged.\r\n         */\r\n        protected tick(): boolean {\r\n            if (this._alpha < this._threshold) {\r\n                this._running = false;\r\n                this.trigger({ type: EventType.end, alpha: this._alpha = 0, stress: this._lastStress });\r\n                return true;\r\n            }\r\n            const n = this._nodes.length,\r\n                  m = this._links.length;\r\n            let o, i;\r\n\r\n            this._descent.locks.clear();\r\n            for (i = 0; i < n; ++i) {\r\n                o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    if (typeof o.px === 'undefined' || typeof o.py === 'undefined') {\r\n                        o.px = o.x;\r\n                        o.py = o.y;\r\n                    }\r\n                    var p = [o.px, o.py];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n\r\n            let s1 = this._descent.rungeKutta();\r\n            //var s1 = descent.reduceStress();\r\n            if (s1 === 0) {\r\n                this._alpha = 0;\r\n            } else if (typeof this._lastStress !== 'undefined') {\r\n                this._alpha = s1; //Math.abs(Math.abs(this._lastStress / s1) - 1);\r\n            }\r\n            this._lastStress = s1;\r\n\r\n            this.updateNodePositions();\r\n\r\n            this.trigger({ type: EventType.tick, alpha: this._alpha, stress: this._lastStress });\r\n            return false;\r\n        }\r\n\r\n        // copy positions out of descent instance into each of the nodes' center coords\r\n        private updateNodePositions(): void {\r\n            const x = this._descent.x[0], y = this._descent.x[1];\r\n            let o, i = this._nodes.length;\r\n            while (i--) {\r\n                o = this._nodes[i];\r\n                o.x = x[i];\r\n                o.y = y[i];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * the list of nodes.\r\n         * If nodes has not been set, but links has, then we instantiate a nodes list here, of the correct size,\r\n         * before returning it.\r\n         * @property nodes {Array}\r\n         * @default empty list\r\n         */\r\n        nodes(): Array<Node>\r\n        nodes(v: Array<InputNode>): this\r\n        nodes(v?: any): any {\r\n            if (!v) {\r\n                if (this._nodes.length === 0 && this._links.length > 0) {\r\n                    // if we have links but no nodes, create the nodes array now with empty objects for the links to point at.\r\n                    // in this case the links are expected to be numeric indices for nodes in the range 0..n-1 where n is the number of nodes\r\n                    var n = 0;\r\n                    this._links.forEach(function (l) {\r\n                        n = Math.max(n, <number>l.source, <number>l.target);\r\n                    });\r\n                    this._nodes = new Array(++n);\r\n                    for (var i = 0; i < n; ++i) {\r\n                        this._nodes[i] = {};\r\n                    }\r\n                }\r\n                return this._nodes;\r\n            }\r\n            this._nodes = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * a list of hierarchical groups defined over nodes\r\n         * @property groups {Array}\r\n         * @default empty list\r\n         */\r\n        groups(): Array<Group>\r\n        groups(x: Array<Group>): this\r\n        groups(x?: Array<Group>): any {\r\n            if (!x) return this._groups;\r\n            this._groups = x;\r\n            this._rootGroup = {};\r\n            this._groups.forEach(g => {\r\n                if (typeof g.padding === \"undefined\")\r\n                    g.padding = 1;\r\n                if (typeof g.leaves !== \"undefined\") {\r\n                    g.leaves.forEach((v, i) => {\r\n                        if (typeof v === 'number')\r\n                            (g.leaves[i] = this._nodes[v]).parent = g\r\n                    });\r\n                }\r\n                if (typeof g.groups !== \"undefined\") {\r\n                    g.groups.forEach((gi, i) => {\r\n                        if (typeof gi === 'number')\r\n                            (g.groups[i] = this._groups[gi]).parent = g\r\n                    });\r\n                }\r\n            });\r\n            this._rootGroup.leaves = this._nodes.filter(v => typeof v.parent === 'undefined');\r\n            this._rootGroup.groups = this._groups.filter(g => typeof g.parent === 'undefined');\r\n            return this;\r\n        }\r\n\r\n        powerGraphGroups(f: Function): this {\r\n            var g = powergraph.getGroups(this._nodes, this._links, this.linkAccessor, this._rootGroup);\r\n            this.groups(g.groups);\r\n            f(g);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the layout will not permit overlaps of the node bounding boxes (defined by the width and height properties on nodes)\r\n         * @property avoidOverlaps\r\n         * @type bool\r\n         * @default false\r\n         */\r\n        avoidOverlaps(): boolean\r\n        avoidOverlaps(v: boolean): this\r\n        avoidOverlaps(v?: boolean): any {\r\n            if (!arguments.length) return this._avoidOverlaps;\r\n            this._avoidOverlaps = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the final step of the start method will be to nicely pack connected components of the graph.\r\n         * works best if start() is called with a reasonable number of iterations specified and\r\n         * each node has a bounding box (defined by the width and height properties on nodes).\r\n         * @property handleDisconnected\r\n         * @type bool\r\n         * @default true\r\n         */\r\n        handleDisconnected(): boolean\r\n        handleDisconnected(v: boolean): this\r\n        handleDisconnected(v?: boolean): any {\r\n            if (!arguments.length) return this._handleDisconnected;\r\n            this._handleDisconnected = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom.\r\n         * a separation constraint is generated in the selected axis for each edge that is not involved in a cycle (part of a strongly connected component)\r\n         * @param axis {string} 'x' for left-to-right, 'y' for top-to-bottom\r\n         * @param minSeparation {number|link=>number} either a number specifying a minimum spacing required across all links or a function to return the minimum spacing for each link\r\n         */\r\n        flowLayout(axis: string, minSeparation: number|((t: any)=>number)): this {\r\n            if (!arguments.length) axis = 'y';\r\n            this._directedLinkConstraints = {\r\n                axis: axis,\r\n                getMinSeparation: typeof minSeparation === 'number' ? function () { return minSeparation } : minSeparation\r\n            };\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links defined as source, target pairs over nodes\r\n         * @property links {array}\r\n         * @default empty list\r\n         */\r\n        links(): Array<Link<Node|number>>\r\n        links(x: Array<Link<Node|number>>): this\r\n        links(x?: Array<Link<Node|number>>): any {\r\n            if (!arguments.length) return this._links;\r\n            this._links = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * list of constraints of various types\r\n         * @property constraints\r\n         * @type {array}\r\n         * @default empty list\r\n         */\r\n        constraints(): Array<any>\r\n        constraints(c: Array<any>): this\r\n        constraints(c?: Array<any>): any {\r\n            if (!arguments.length) return this._constraints;\r\n            this._constraints = c;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Matrix of ideal distances between all pairs of nodes.\r\n         * If unspecified, the ideal distances for pairs of nodes will be based on the shortest path distance between them.\r\n         * @property distanceMatrix\r\n         * @type {Array of Array of Number}\r\n         * @default null\r\n         */\r\n        distanceMatrix(): Array<Array<number>>\r\n        distanceMatrix(d: Array<Array<number>>): this\r\n        distanceMatrix(d?: any): any {\r\n            if (!arguments.length) return this._distanceMatrix;\r\n            this._distanceMatrix = d;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Size of the layout canvas dimensions [x,y]. Currently only used to determine the midpoint which is taken as the starting position\r\n         * for nodes with no preassigned x and y.\r\n         * @property size\r\n         * @type {Array of Number}\r\n         */\r\n        size(): Array<number>\r\n        size(x: Array<number>): this\r\n        size(x?: Array<number>): any {\r\n            if (!x) return this._canvasSize;\r\n            this._canvasSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Default size (assume nodes are square so both width and height) to use in packing if node width/height are not specified.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        defaultNodeSize(): number\r\n        defaultNodeSize(x: number): this\r\n        defaultNodeSize(x?: any): any {\r\n            if (!x) return this._defaultNodeSize;\r\n            this._defaultNodeSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * The strength of attraction between the group boundaries to each other.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        groupCompactness(): number\r\n        groupCompactness(x: number): this\r\n        groupCompactness(x?: any): any {\r\n            if (!x) return this._groupCompactness;\r\n            this._groupCompactness = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links have an ideal distance, The automatic layout will compute layout that tries to keep links (AKA edges) as close as possible to this length.\r\n         */\r\n        linkDistance(): number\r\n        linkDistance(): LinkNumericPropertyAccessor\r\n        linkDistance(x: number): this\r\n        linkDistance(x: LinkNumericPropertyAccessor): this\r\n        linkDistance(x?: any): any {\r\n            if (!x) {\r\n                return this._linkDistance;\r\n            }\r\n            this._linkDistance = typeof x === \"function\" ? x : +x;\r\n            this._linkLengthCalculator = null;\r\n            return this;\r\n        }\r\n\r\n        linkType(f: Function | number): this {\r\n            this._linkType = f;\r\n            return this;\r\n        }\r\n\r\n        convergenceThreshold(): number\r\n        convergenceThreshold(x: number): this\r\n        convergenceThreshold(x?: number): any {\r\n            if (!x) return this._threshold;\r\n            this._threshold = typeof x === \"function\" ? x : +x;\r\n            return this;\r\n        }\r\n\r\n        alpha(): number\r\n        alpha(x: number): this\r\n        alpha(x?: number): any {\r\n            if (!arguments.length) return this._alpha;\r\n            else {\r\n                x = +x;\r\n                if (this._alpha) { // if we're already running\r\n                    if (x > 0) this._alpha = x; // we might keep it hot\r\n                    else this._alpha = 0; // or, next tick will dispatch \"end\"\r\n                } else if (x > 0) { // otherwise, fire it up!\r\n                    if (!this._running) {\r\n                        this._running = true;\r\n                        this.trigger({ type: EventType.start, alpha: this._alpha = x});\r\n                        this.kick();\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n        }\r\n\r\n        getLinkLength(link: Link<Node | number>): number {\r\n            return typeof this._linkDistance === \"function\" ? +((<LinkNumericPropertyAccessor>this._linkDistance)(link)) : <number>this._linkDistance;\r\n        }\r\n\r\n        static setLinkLength(link: Link<Node|number>, length: number) {\r\n            link.length = length;\r\n        }\r\n\r\n        getLinkType(link: Link<Node | number>): number {\r\n            return typeof this._linkType === \"function\" ? this._linkType(link) : 0;\r\n        }\r\n\r\n        linkAccessor: LinkLengthTypeAccessor = {\r\n            getSourceIndex: Layout.getSourceIndex,\r\n            getTargetIndex: Layout.getTargetIndex,\r\n            setLength: Layout.setLinkLength,\r\n            getType: l => typeof this._linkType === \"function\" ? this._linkType(l) : 0\r\n        };\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: sqrt(|a union b| - |a intersection b|)\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        symmetricDiffLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => symmetricDiffLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: |a intersection b|/|a union b|\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        jaccardLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => jaccardLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * start the layout process\r\n         * @method start\r\n         * @param {number} [initialUnconstrainedIterations=0] unconstrained initial layout iterations\r\n         * @param {number} [initialUserConstraintIterations=0] initial layout iterations with user-specified constraints\r\n         * @param {number} [initialAllConstraintsIterations=0] initial layout iterations with all constraints including non-overlap\r\n         * @param {number} [gridSnapIterations=0] iterations of \"grid snap\", which pulls nodes towards grid cell centers - grid of size node[0].width - only really makes sense if all nodes have the same width and height\r\n         * @param [keepRunning=true] keep iterating asynchronously via the tick method\r\n         */\r\n        start(\r\n            initialUnconstrainedIterations: number = 0,\r\n            initialUserConstraintIterations: number = 0,\r\n            initialAllConstraintsIterations: number = 0,\r\n            gridSnapIterations: number = 0,\r\n            keepRunning = true\r\n        ): this {\r\n            var i: number,\r\n                j: number,\r\n                n = (<Array<any>>this.nodes()).length,\r\n                N = n + 2 * this._groups.length,\r\n                m = this._links.length,\r\n                w = this._canvasSize[0],\r\n                h = this._canvasSize[1];\r\n\r\n            var x = new Array(N), y = new Array(N);\r\n\r\n            var G = null;\r\n\r\n            var ao = this._avoidOverlaps;\r\n\r\n            this._nodes.forEach((v, i) => {\r\n                v.index = i;\r\n                if (typeof v.x === 'undefined') {\r\n                    v.x = w / 2, v.y = h / 2;\r\n                }\r\n                x[i] = v.x, y[i] = v.y;\r\n            });\r\n\r\n            if (this._linkLengthCalculator) this._linkLengthCalculator();\r\n\r\n            //should we do this to clearly label groups?\r\n            //this._groups.forEach((g, i) => g.groupIndex = i);\r\n\r\n            var distances;\r\n            if (this._distanceMatrix) {\r\n                // use the user specified distanceMatrix\r\n                distances = this._distanceMatrix;\r\n            } else {\r\n                // construct an n X n distance matrix based on shortest paths through graph (with respect to edge.length).\r\n                distances = (new Calculator(N, this._links, Layout.getSourceIndex, Layout.getTargetIndex, l=> this.getLinkLength(l))).DistanceMatrix();\r\n\r\n                // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n                // otherwise 2. (\r\n                G = Descent.createSquareMatrix(N, () => 2);\r\n                this._links.forEach(l => {\r\n                    if (typeof l.source == \"number\") l.source = this._nodes[<number>l.source];\r\n                    if (typeof l.target == \"number\") l.target = this._nodes[<number>l.target];\r\n                });\r\n                this._links.forEach(e => {\r\n                    const u = Layout.getSourceIndex(e), v = Layout.getTargetIndex(e);\r\n                    G[u][v] = G[v][u] = e.weight || 1;\r\n                });\r\n            }\r\n\r\n            var D = Descent.createSquareMatrix(N, function (i, j) {\r\n                return distances[i][j];\r\n            });\r\n\r\n            if (this._rootGroup && typeof this._rootGroup.groups !== 'undefined') {\r\n                var i = n;\r\n                var addAttraction = (i, j, strength, idealDistance) => {\r\n                    G[i][j] = G[j][i] = strength;\r\n                    D[i][j] = D[j][i] = idealDistance;\r\n                };\r\n                this._groups.forEach(g => {\r\n                    addAttraction(i, i + 1, this._groupCompactness, 0.1);\r\n\r\n                    // todo: add terms here attracting children of the group to the group dummy nodes\r\n                    //if (typeof g.leaves !== 'undefined')\r\n                    //    g.leaves.forEach(l => {\r\n                    //        addAttraction(l.index, i, 1e-4, 0.1);\r\n                    //        addAttraction(l.index, i + 1, 1e-4, 0.1);\r\n                    //    });\r\n                    //if (typeof g.groups !== 'undefined')\r\n                    //    g.groups.forEach(g => {\r\n                    //        var gid = n + g.groupIndex * 2;\r\n                    //        addAttraction(gid, i, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i, 0.1, 0.1);\r\n                    //        addAttraction(gid, i + 1, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i + 1, 0.1, 0.1);\r\n                    //    });\r\n\r\n                    x[i] = 0, y[i++] = 0;\r\n                    x[i] = 0, y[i++] = 0;\r\n                });\r\n            } else this._rootGroup = { leaves: this._nodes, groups: [] };\r\n\r\n            var curConstraints = this._constraints || [];\r\n            if (this._directedLinkConstraints) {\r\n                (<any>this.linkAccessor).getMinSeparation = this._directedLinkConstraints.getMinSeparation;\r\n                curConstraints = curConstraints.concat(generateDirectedEdgeConstraints(n, this._links, this._directedLinkConstraints.axis, <any>(this.linkAccessor)));\r\n\r\n                // todo: add containment constraints between group dummy nodes and their children\r\n            }\r\n\r\n            this.avoidOverlaps(false);\r\n            this._descent = new Descent([x, y], D);\r\n\r\n            this._descent.locks.clear();\r\n            for (var i = 0; i < n; ++i) {\r\n                var o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    o.px = o.x;\r\n                    o.py = o.y;\r\n                    var p = [o.x, o.y];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n            this._descent.threshold = this._threshold;\r\n\r\n            // apply initialIterations without user constraints or nonoverlap constraints\r\n            // if groups are specified, dummy nodes and edges will be added to untangle\r\n            // with respect to group connectivity\r\n            this.initialLayout(initialUnconstrainedIterations, x, y);\r\n\r\n            // apply initialIterations with user constraints but no nonoverlap constraints\r\n            if (curConstraints.length > 0) this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints).projectFunctions();\r\n            this._descent.run(initialUserConstraintIterations);\r\n            this.separateOverlappingComponents(w, h);\r\n\r\n            // subsequent iterations will apply all constraints\r\n            this.avoidOverlaps(ao);\r\n            if (ao) {\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints, true).projectFunctions();\r\n                this._nodes.forEach(function (v, i) { x[i] = v.x, y[i] = v.y; });\r\n            }\r\n\r\n            // allow not immediately connected nodes to relax apart (p-stress)\r\n            this._descent.G = G;\r\n            this._descent.run(initialAllConstraintsIterations);\r\n\r\n            if (gridSnapIterations) {\r\n                this._descent.snapStrength = 1000;\r\n                this._descent.snapGridSize = this._nodes[0].width;\r\n                this._descent.numGridSnapNodes = n;\r\n                this._descent.scaleSnapByMaxH = n != N; // if we have groups then need to scale hessian so grid forces still apply\r\n                var G0 = Descent.createSquareMatrix(N,(i, j) => {\r\n                    if (i >= n || j >= n) return G[i][j];\r\n                    return 0\r\n                });\r\n                this._descent.G = G0;\r\n                this._descent.run(gridSnapIterations);\r\n            }\r\n\r\n            this.updateNodePositions();\r\n            this.separateOverlappingComponents(w, h);\r\n            return keepRunning ? this.resume() : this;\r\n        }\r\n\r\n        private initialLayout(iterations: number, x: number[], y: number[]) {\r\n            if (this._groups.length > 0 && iterations > 0) {\r\n                // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n                // todo: edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n                var n = this._nodes.length;\r\n                var edges = this._links.map(e => <any>{ source: (<Node>e.source).index, target: (<Node>e.target).index });\r\n                var vs = this._nodes.map(v => <any>{ index: v.index });\r\n                this._groups.forEach((g, i) => {\r\n                    vs.push(<any>{ index: g.index = n + i });\r\n                });\r\n                this._groups.forEach((g, i) => {\r\n                    if (typeof g.leaves !== 'undefined')\r\n                        g.leaves.forEach(v => edges.push({ source: g.index, target: v.index }));\r\n                    if (typeof g.groups !== 'undefined')\r\n                        g.groups.forEach(gg => edges.push({ source: g.index, target: gg.index }));\r\n                });\r\n\r\n                // layout the flat graph with dummy nodes and edges\r\n                new Layout()\r\n                    .size(this.size())\r\n                    .nodes(vs)\r\n                    .links(edges)\r\n                    .avoidOverlaps(false)\r\n                    .linkDistance(this.linkDistance())\r\n                    .symmetricDiffLinkLengths(5)\r\n                    .convergenceThreshold(1e-4)\r\n                    .start(iterations, 0, 0, 0, false);\r\n\r\n                this._nodes.forEach(v => {\r\n                    x[v.index] = vs[v.index].x;\r\n                    y[v.index] = vs[v.index].y;\r\n                });\r\n            } else {\r\n                this._descent.run(iterations);\r\n            }\r\n        }\r\n\r\n        // recalculate nodes position for disconnected graphs\r\n        private separateOverlappingComponents(width: number, height: number): void {\r\n            // recalculate nodes position for disconnected graphs\r\n            if (!this._distanceMatrix && this._handleDisconnected) {\r\n                let x = this._descent.x[0], y = this._descent.x[1];\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                var graphs = separateGraphs(this._nodes, this._links);\r\n                applyPacking(graphs, width, height, this._defaultNodeSize);\r\n                this._nodes.forEach((v, i) => {\r\n                    this._descent.x[0][i] = v.x, this._descent.x[1][i] = v.y;\r\n                    if (v.bounds) {\r\n                        v.bounds.setXCentre(v.x);\r\n                        v.bounds.setYCentre(v.y);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        resume(): this {\r\n            return this.alpha(0.1);\r\n        }\r\n\r\n        stop(): this {\r\n            return this.alpha(0);\r\n        }\r\n\r\n        /// find a visibility graph over the set of nodes.  assumes all nodes have a\r\n        /// bounds property (a rectangle) and that no pair of bounds overlaps.\r\n        prepareEdgeRouting(nodeMargin: number = 0) {\r\n            this._visibilityGraph = new TangentVisibilityGraph(\r\n                this._nodes.map(function (v) {\r\n                    return v.bounds.inflate(-nodeMargin).vertices();\r\n                }));\r\n        }\r\n\r\n        /**\r\n         * find a route avoiding node bounds for the given edge.\r\n         * assumes the visibility graph has been created (by prepareEdgeRouting method)\r\n         * and also assumes that nodes have an index property giving their position in the\r\n         * node array.  This index property is created by the start() method.\r\n         * @param [edge] The edge to generate a route for.\r\n         * @param {number} [ah] The size of the arrow head, a distance to shorten the end\r\n         *                      of the edge by.  Defaults to 5.\r\n         */\r\n        routeEdge(edge, ah: number = 5, draw) {\r\n            var lineData = [];\r\n            //if (d.source.id === 10 && d.target.id === 11) {\r\n            //    debugger;\r\n            //}\r\n            var vg2 = new TangentVisibilityGraph(this._visibilityGraph.P, { V: this._visibilityGraph.V, E: this._visibilityGraph.E }),\r\n                port1 = <TVGPoint>{ x: edge.source.x, y: edge.source.y },\r\n                port2 = <TVGPoint>{ x: edge.target.x, y: edge.target.y },\r\n                start = vg2.addPoint(port1, edge.source.index),\r\n                end = vg2.addPoint(port2, edge.target.index);\r\n            vg2.addEdgeIfVisible(port1, port2, edge.source.index, edge.target.index);\r\n            if (typeof draw !== 'undefined') {\r\n                draw(vg2);\r\n            }\r\n            var sourceInd = e => e.source.id, targetInd = e => e.target.id, length = e => e.length(),\r\n                spCalc = new Calculator(vg2.V.length, vg2.E, sourceInd, targetInd, length),\r\n                shortestPath = spCalc.PathFromNodeToNode(start.id, end.id);\r\n            if (shortestPath.length === 1 || shortestPath.length === vg2.V.length) {\r\n                let route = makeEdgeBetween(edge.source.innerBounds, edge.target.innerBounds, ah);\r\n                lineData = [route.sourceIntersection, route.arrowStart];\r\n            } else {\r\n                var n = shortestPath.length - 2,\r\n                    p = vg2.V[shortestPath[n]].p,\r\n                    q = vg2.V[shortestPath[0]].p,\r\n                    lineData = [edge.source.innerBounds.rayIntersection(p.x, p.y)];\r\n                for (var i = n; i >= 0; --i)\r\n                    lineData.push(vg2.V[shortestPath[i]].p);\r\n                lineData.push(makeEdgeTo(q, edge.target.innerBounds, ah));\r\n            }\r\n            //lineData.forEach((v, i) => {\r\n            //    if (i > 0) {\r\n            //        var u = lineData[i - 1];\r\n            //        this._nodes.forEach(function (node) {\r\n            //            if (node.id === getSourceIndex(d) || node.id === getTargetIndex(d)) return;\r\n            //            var ints = node.innerBounds.lineIntersections(u.x, u.y, v.x, v.y);\r\n            //            if (ints.length > 0) {\r\n            //                debugger;\r\n            //            }\r\n            //        })\r\n            //    }\r\n            //})\r\n            return lineData;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getSourceIndex(e: Link<Node | number>): number {\r\n            return typeof e.source === 'number' ? <number>e.source : (<Node>e.source).index;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getTargetIndex(e: Link<Node | number>): number {\r\n            return typeof e.target === 'number' ? <number>e.target : (<Node>e.target).index;\r\n        }\r\n\r\n        // Get a string ID for a given link.\r\n        static linkId(e: Link<Node | number>): string {\r\n            return Layout.getSourceIndex(e) + \"-\" + Layout.getTargetIndex(e);\r\n        }\r\n\r\n        // The fixed property has three bits:\r\n        // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\r\n        // Bit 2 stores the dragging state, from mousedown to mouseup.\r\n        // Bit 3 stores the hover state, from mouseover to mouseout.\r\n        static dragStart(d: Node | Group) {\r\n            if (isGroup(d)) {\r\n                Layout.storeOffset(d, Layout.dragOrigin(d));\r\n            } else {\r\n                Layout.stopNode(d);\r\n                d.fixed |= 2; // set bit 2\r\n            }\r\n        }\r\n\r\n        // we clobber any existing desired positions for nodes\r\n        // in case another tick event occurs before the drag\r\n        private static stopNode(v: Node) {\r\n            (<any>v).px = v.x;\r\n            (<any>v).py = v.y;\r\n        }\r\n\r\n        // we store offsets for each node relative to the centre of the ancestor group\r\n        // being dragged in a pair of properties on the node\r\n        private static storeOffset(d: Group, origin: { x: number, y: number }) {\r\n            if (typeof d.leaves !== 'undefined') {\r\n                d.leaves.forEach(v => {\r\n                    v.fixed |= 2;\r\n                    Layout.stopNode(v);\r\n                    (<any>v)._dragGroupOffsetX = v.x - origin.x;\r\n                    (<any>v)._dragGroupOffsetY = v.y - origin.y;\r\n                });\r\n            }\r\n            if (typeof d.groups !== 'undefined') {\r\n                d.groups.forEach(g => Layout.storeOffset(g, origin));\r\n            }\r\n        }\r\n\r\n        // the drag origin is taken as the centre of the node or group\r\n        static dragOrigin(d: Node | Group): { x: number, y: number } {\r\n            if (isGroup(d)) {\r\n                return {\r\n                    x: d.bounds.cx(),\r\n                    y: d.bounds.cy()\r\n                };\r\n            } else {\r\n                return d;\r\n            }\r\n        }\r\n\r\n        // for groups, the drag translation is propagated down to all of the children of\r\n        // the group.\r\n        static drag(d: Node | Group, position: { x: number, y: number }) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        d.bounds.setXCentre(position.x);\r\n                        d.bounds.setYCentre(position.y);\r\n                        (<any>v).px = (<any>v)._dragGroupOffsetX + position.x;\r\n                        (<any>v).py = (<any>v)._dragGroupOffsetY + position.y;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(g => Layout.drag(g, position));\r\n                }\r\n            } else {\r\n                (<any>d).px = position.x;\r\n                (<any>d).py = position.y;\r\n            }\r\n        }\r\n\r\n        // we unset only bits 2 and 3 so that the user can fix nodes with another a different\r\n        // bit such that the lock persists between drags\r\n        static dragEnd(d) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        Layout.dragEnd(v);\r\n                        delete (<any>v)._dragGroupOffsetX;\r\n                        delete (<any>v)._dragGroupOffsetY;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(Layout.dragEnd);\r\n                }\r\n            } else {\r\n                d.fixed &= ~6; // unset bits 2 and 3\r\n                //d.fixed = 0;\r\n            }\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOver(d) {\r\n            d.fixed |= 4; // set bit 3\r\n            d.px = d.x, d.py = d.y; // set velocity to zero\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOut(d) {\r\n            d.fixed &= ~4; // unset bit 3\r\n        }\r\n    }\r\n","import {Constraint, Variable, Solver} from './vpsc'\r\nimport {RBTree} from './rbtree'\r\nimport {Point} from './geom'\r\n\r\n    export interface Leaf {\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n    }\r\n\r\n    export interface ProjectionGroup {\r\n        bounds: Rectangle;\r\n        padding: number;\r\n        stiffness: number;\r\n        leaves: Leaf[];\r\n        groups: ProjectionGroup[];\r\n        minVar: Variable;\r\n        maxVar: Variable;\r\n    }\r\n\r\n    export function computeGroupBounds(g: ProjectionGroup): Rectangle {\r\n        g.bounds = typeof g.leaves !== \"undefined\" ?\r\n            g.leaves.reduce((r: Rectangle, c) => c.bounds.union(r), Rectangle.empty()) :\r\n            Rectangle.empty();\r\n        if (typeof g.groups !== \"undefined\")\r\n            g.bounds = <Rectangle>g.groups.reduce((r: Rectangle, c) => computeGroupBounds(c).union(r), g.bounds);\r\n        g.bounds = g.bounds.inflate(g.padding);\r\n        return g.bounds;\r\n    }\r\n\r\n    export class Rectangle {\r\n        constructor(\r\n            public x: number,\r\n            public X: number,\r\n            public y: number,\r\n            public Y: number) { }\r\n\r\n        static empty(): Rectangle { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); }\r\n\r\n        cx(): number { return (this.x + this.X) / 2; }\r\n\r\n        cy(): number { return (this.y + this.Y) / 2; }\r\n\r\n        overlapX(r: Rectangle): number {\r\n            var ux = this.cx(), vx = r.cx();\r\n            if (ux <= vx && r.x < this.X) return this.X - r.x;\r\n            if (vx <= ux && this.x < r.X) return r.X - this.x;\r\n            return 0;\r\n        }\r\n\r\n        overlapY(r: Rectangle): number {\r\n            var uy = this.cy(), vy = r.cy();\r\n            if (uy <= vy && r.y < this.Y) return this.Y - r.y;\r\n            if (vy <= uy && this.y < r.Y) return r.Y - this.y;\r\n            return 0;\r\n        }\r\n\r\n        setXCentre(cx: number): void {\r\n            var dx = cx - this.cx();\r\n            this.x += dx;\r\n            this.X += dx;\r\n        }\r\n\r\n        setYCentre(cy: number): void {\r\n            var dy = cy - this.cy();\r\n            this.y += dy;\r\n            this.Y += dy;\r\n        }\r\n\r\n        width(): number {\r\n            return this.X - this.x;\r\n        }\r\n\r\n        height(): number {\r\n            return this.Y - this.y;\r\n        }\r\n\r\n        union(r: Rectangle): Rectangle {\r\n            return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between the given line and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x1 number first x coord of line\r\n         * @param y1 number first y coord of line\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        lineIntersections(x1: number, y1: number, x2: number, y2: number): Array<Point> {\r\n            var sides = [[this.x, this.y, this.X, this.y],\r\n                    [this.X, this.y, this.X, this.Y],\r\n                    [this.X, this.Y, this.x, this.Y],\r\n                [this.x, this.Y, this.x, this.y]];\r\n            var intersections = [];\r\n            for (var i = 0; i < 4; ++i) {\r\n                var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\r\n                if (r !== null) intersections.push({ x: r.x, y: r.y });\r\n            }\r\n            return intersections;\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between a line extending from the centre of this rectangle to the given point,\r\n         *  and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        rayIntersection(x2: number, y2: number): Point {\r\n            var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\r\n            return ints.length > 0 ? ints[0] : null;\r\n        }\r\n\r\n        vertices(): Point[] {\r\n            return [\r\n                { x: this.x, y: this.y },\r\n                { x: this.X, y: this.y },\r\n                { x: this.X, y: this.Y },\r\n                { x: this.x, y: this.Y }];\r\n        }\r\n\r\n        static lineIntersection(\r\n            x1: number, y1: number,\r\n            x2: number, y2: number,\r\n            x3: number, y3: number,\r\n            x4: number, y4: number): Point {\r\n            var dx12 = x2 - x1, dx34 = x4 - x3,\r\n                dy12 = y2 - y1, dy34 = y4 - y3,\r\n                denominator = dy34 * dx12 - dx34 * dy12;\r\n            if (denominator == 0) return null;\r\n            var dx31 = x1 - x3, dy31 = y1 - y3,\r\n                numa = dx34 * dy31 - dy34 * dx31,\r\n                a = numa / denominator,\r\n                numb = dx12 * dy31 - dy12 * dx31,\r\n                b = numb / denominator;\r\n            if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\r\n                return {\r\n                    x: x1 + a * dx12,\r\n                    y: y1 + a * dy12\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        inflate(pad: number): Rectangle {\r\n            return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the endpoints of a line that connects the centre of two rectangles.\r\n     * @param {Rectangle} [source] The source Rectangle.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return An object with three point properties, the intersection with the\r\n     *         source rectangle (sourceIntersection), the intersection with then\r\n     *         target rectangle (targetIntersection), and the point an arrow\r\n     *         head of the specified size would need to start (arrowStart).\r\n     */\r\n    export function makeEdgeBetween(source: Rectangle, target: Rectangle, ah: number)\r\n        : { sourceIntersection: Point; targetIntersection: Point; arrowStart: Point } {\r\n        const si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() },\r\n            ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() },\r\n            dx = ti.x - si.x,\r\n            dy = ti.y - si.y,\r\n            l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\r\n        return {\r\n            sourceIntersection: si,\r\n            targetIntersection: ti,\r\n            arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the intersection of a line from the given point to the centre\r\n     * of the target rectangle where it intersects the rectanngle.\r\n     * @param [source] The source point.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return The point an arrow head of the specified size would need to start.\r\n     */\r\n    export function makeEdgeTo(s: { x: number; y: number }, target: Rectangle, ah: number): Point {\r\n        var ti = target.rayIntersection(s.x, s.y);\r\n        if (!ti) ti = { x: target.cx(), y: target.cy() };\r\n        var dx = ti.x - s.x,\r\n            dy = ti.y - s.y,\r\n            l = Math.sqrt(dx * dx + dy * dy);\r\n        return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\r\n    }\r\n\r\n    class Node {\r\n        prev: RBTree<Node>;\r\n        next: RBTree<Node>;\r\n\r\n        constructor(public v: Variable, public r: Rectangle, public pos: number) {\r\n            this.prev = makeRBTree();\r\n            this.next = makeRBTree();\r\n        }\r\n    }\r\n\r\n    class Event {\r\n        constructor(public isOpen: boolean, public v: Node, public pos: number) {}\r\n    }\r\n\r\n    function compareEvents(a: Event, b: Event): number {\r\n        if (a.pos > b.pos) {\r\n            return 1;\r\n        }\r\n        if (a.pos < b.pos) {\r\n            return -1;\r\n        }\r\n        if (a.isOpen) {\r\n            // open must come before close\r\n            return -1;\r\n        }\r\n        if (b.isOpen) {\r\n            // open must come before close\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function makeRBTree(): RBTree<Node> {\r\n        return new RBTree<Node>((a, b) => a.pos - b.pos);\r\n    }\r\n\r\n    interface RectAccessors {\r\n        getCentre: (r: Rectangle) => number;\r\n        getOpen: (r: Rectangle) => number;\r\n        getClose: (r: Rectangle) => number;\r\n        getSize: (r: Rectangle) => number;\r\n        makeRect: (open: number, close: number, center: number, size: number) => Rectangle;\r\n        findNeighbours: (v: Node, scanline: RBTree<Node>) => void;\r\n    }\r\n\r\n    var xRect: RectAccessors = {\r\n        getCentre: r=> r.cx(),\r\n        getOpen: r=> r.y,\r\n        getClose: r=> r.Y,\r\n        getSize: r=> r.width(),\r\n        makeRect: (open, close, center, size) => new Rectangle(center - size / 2, center + size / 2, open, close) ,\r\n        findNeighbours: findXNeighbours\r\n    };\r\n\r\n    var yRect: RectAccessors = {\r\n        getCentre: r=> r.cy(),\r\n        getOpen: r=> r.x,\r\n        getClose: r=> r.X,\r\n        getSize: r=> r.height(),\r\n        makeRect: (open, close, center, size) => new Rectangle(open, close, center - size / 2, center + size / 2),\r\n        findNeighbours: findYNeighbours\r\n    };\r\n\r\n    function generateGroupConstraints(root: ProjectionGroup, f: RectAccessors, minSep: number, isContained: boolean = false): Constraint[]\r\n    {\r\n        var padding = root.padding,\r\n            gn = typeof root.groups !== 'undefined' ? root.groups.length : 0,\r\n            ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0,\r\n            childConstraints: Constraint[] = !gn ? []\r\n            : root.groups.reduce((ccs: Constraint[], g) => ccs.concat(generateGroupConstraints(g, f, minSep, true)), []),\r\n            n = (isContained ? 2 : 0) + ln + gn,\r\n            vs: Variable[] = new Array(n),\r\n            rs: Rectangle[] = new Array(n),\r\n            i = 0,\r\n            add = (r, v) => { rs[i] = r; vs[i++] = v };\r\n        if (isContained) {\r\n            // if this group is contained by another, then we add two dummy vars and rectangles for the borders\r\n            var b: Rectangle = root.bounds,\r\n                c = f.getCentre(b), s = f.getSize(b) / 2,\r\n                open = f.getOpen(b), close = f.getClose(b),\r\n                min = c - s + padding / 2, max = c + s - padding / 2;\r\n            root.minVar.desiredPosition = min;\r\n            add(f.makeRect(open, close, min, padding), root.minVar);\r\n            root.maxVar.desiredPosition = max;\r\n            add(f.makeRect(open, close, max, padding), root.maxVar);\r\n        }\r\n        if (ln) root.leaves.forEach(l => add(l.bounds, l.variable));\r\n        if (gn) root.groups.forEach(g => {\r\n            var b: Rectangle = g.bounds;\r\n            add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\r\n        });\r\n        var cs = generateConstraints(rs, vs, f, minSep);\r\n        if (gn) {\r\n            vs.forEach(v => { v.cOut = [], v.cIn = [] });\r\n            cs.forEach(c => { c.left.cOut.push(c), c.right.cIn.push(c) });\r\n            root.groups.forEach(g => {\r\n                var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\r\n                g.minVar.cIn.forEach(c => c.gap += gapAdjustment);\r\n                g.minVar.cOut.forEach(c => { c.left = g.maxVar; c.gap += gapAdjustment; });\r\n            });\r\n        }\r\n        return childConstraints.concat(cs);\r\n    }\r\n\r\n    function generateConstraints(rs: Rectangle[], vars: Variable[],\r\n        rect: RectAccessors, minSep: number): Constraint[]\r\n    {\r\n        var i, n = rs.length;\r\n        var N = 2 * n;\r\n        console.assert(vars.length >= n);\r\n        var events = new Array<Event>(N);\r\n        for (i = 0; i < n; ++i) {\r\n            var r = rs[i];\r\n            var v = new Node(vars[i], r, rect.getCentre(r));\r\n            events[i] = new Event(true, v, rect.getOpen(r));\r\n            events[i + n] = new Event(false, v, rect.getClose(r));\r\n        }\r\n        events.sort(compareEvents);\r\n        var cs = new Array<Constraint>();\r\n        var scanline = makeRBTree();\r\n        for (i = 0; i < N; ++i) {\r\n            var e = events[i];\r\n            var v = e.v;\r\n            if (e.isOpen) {\r\n                scanline.insert(v);\r\n                rect.findNeighbours(v, scanline);\r\n            } else {\r\n                // close event\r\n                scanline.remove(v);\r\n                var makeConstraint = (l, r) => {\r\n                    var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\r\n                    cs.push(new Constraint(l.v, r.v, sep));\r\n                };\r\n                var visitNeighbours = (forward, reverse, mkcon) => {\r\n                    var u, it = v[forward].iterator();\r\n                    while ((u = it[forward]()) !== null) {\r\n                        mkcon(u, v);\r\n                        u[reverse].remove(v);\r\n                    }\r\n                };\r\n                visitNeighbours(\"prev\", \"next\", (u, v) => makeConstraint(u, v));\r\n                visitNeighbours(\"next\", \"prev\", (u, v) => makeConstraint(v, u));\r\n            }\r\n        }\r\n        console.assert(scanline.size === 0);\r\n        return cs;\r\n    }\r\n\r\n    function findXNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var it = scanline.findIter(v);\r\n            var u;\r\n            while ((u = it[forward]()) !== null) {\r\n                var uovervX = u.r.overlapX(v.r);\r\n                if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\r\n                    v[forward].insert(u);\r\n                    u[reverse].insert(v);\r\n                }\r\n                if (uovervX <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    function findYNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var u = scanline.findIter(v)[forward]();\r\n            if (u !== null && u.r.overlapX(v.r) > 0) {\r\n                v[forward].insert(u);\r\n                u[reverse].insert(v);\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    export function generateXConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, yRect, 1e-6);\r\n    }\r\n\r\n    export function generateXGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, yRect, 1e-6);\r\n    }\r\n\r\n    export function removeOverlaps(rs: Rectangle[]): void {\r\n        var vs = rs.map(r => new Variable(r.cx()));\r\n        var cs = generateXConstraints(rs, vs);\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setXCentre(v.position()));\r\n        vs = rs.map(r=> new Variable(r.cy()));\r\n        cs = generateYConstraints(rs, vs);\r\n        solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setYCentre(v.position()));\r\n    }\r\n\r\n    export interface GraphNode extends Leaf {\r\n        fixed: boolean;\r\n        fixedWeight?: number;\r\n        width: number;\r\n        height: number;\r\n        x: number;\r\n        y: number;\r\n        px: number;\r\n        py: number;\r\n    }\r\n\r\n    export class IndexedVariable extends Variable {\r\n        constructor(public index: number, w: number) {\r\n            super(0, w);\r\n        }\r\n    }\r\n\r\n    export class Projection {\r\n        private xConstraints: Constraint[];\r\n        private yConstraints: Constraint[];\r\n        private variables: Variable[];\r\n\r\n        constructor(private nodes: GraphNode[],\r\n            private groups: ProjectionGroup[],\r\n            private rootGroup: ProjectionGroup = null,\r\n            constraints: any[]= null,\r\n            private avoidOverlaps: boolean = false)\r\n        {\r\n            this.variables = nodes.map((v, i) => {\r\n                return v.variable = new IndexedVariable(i, 1);\r\n            });\r\n\r\n            if (constraints) this.createConstraints(constraints);\r\n\r\n            if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\r\n                nodes.forEach(v => {\r\n\t\t\t\t\tif (!v.width || !v.height)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//If undefined, default to nothing\r\n\t\t\t\t\t\tv.bounds = new Rectangle(v.x, v.x, v.y, v.y);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n                    var w2 = v.width / 2, h2 = v.height / 2;\r\n                    v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\r\n                });\r\n                computeGroupBounds(rootGroup);\r\n                var i = nodes.length;\r\n                groups.forEach(g => {\r\n                    this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                    this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        private createSeparation(c: any) : Constraint {\r\n            return new Constraint(\r\n                this.nodes[c.left].variable,\r\n                this.nodes[c.right].variable,\r\n                c.gap,\r\n                typeof c.equality !== \"undefined\" ? c.equality : false);\r\n        }\r\n\r\n        // simple satisfaction of alignment constraints to ensure initial feasibility\r\n        private makeFeasible(c: any) {\r\n            if (!this.avoidOverlaps) return;\r\n            // sort nodes in constraint by position (along \"guideline\")\r\n            var axis = 'x', dim = 'width';\r\n            if (c.axis === 'x') axis = 'y', dim = 'height';\r\n            var vs: GraphNode[] = c.offsets.map(o => this.nodes[o.node]).sort((a, b) => a[axis] - b[axis]);\r\n            var p: GraphNode = null;\r\n            vs.forEach(v => {\r\n                // if two nodes overlap then shove the second one along\r\n                if (p) {\r\n                    let nextPos = p[axis] + p[dim];\r\n                    if (nextPos > v[axis]) {\r\n                        v[axis] = nextPos;\r\n                    }\r\n                }\r\n                p = v;\r\n            });\r\n        }\r\n\r\n        private createAlignment(c: any) {\r\n            var u = this.nodes[c.offsets[0].node].variable;\r\n            this.makeFeasible(c);\r\n            var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\r\n            c.offsets.slice(1).forEach(o => {\r\n                var v = this.nodes[o.node].variable;\r\n                cs.push(new Constraint(u, v, o.offset, true));\r\n            });\r\n        }\r\n\r\n        private createConstraints(constraints: any[]) {\r\n            var isSep = c => typeof c.type === 'undefined' || c.type === 'separation';\r\n            this.xConstraints = constraints\r\n                .filter(c => c.axis === \"x\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            this.yConstraints = constraints\r\n                .filter(c => c.axis === \"y\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            constraints\r\n                .filter(c => c.type === 'alignment')\r\n                .forEach(c => this.createAlignment(c));\r\n        }\r\n\r\n        private setupVariablesAndBounds(x0: number[], y0: number[], desired: number[], getDesired: (v: GraphNode) => number) {\r\n            this.nodes.forEach((v, i) => {\r\n                if (v.fixed) {\r\n                    v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\r\n                    desired[i] = getDesired(v);\r\n                } else {\r\n                    v.variable.weight = 1;\r\n                }\r\n                var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\r\n                var ix = x0[i], iy = y0[i];\r\n                v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\r\n            });\r\n        }\r\n\r\n        xProject(x0: number[], y0: number[], x: number[]) {\r\n            if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints)) return;\r\n            this.project(x0, y0, x0, x, v=> v.px, this.xConstraints, generateXGroupConstraints,\r\n                v => v.bounds.setXCentre(x[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var xmin = x[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var xmax = x[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.x = xmin - p2;\r\n                    g.bounds.X = xmax + p2;\r\n                });\r\n        }\r\n\r\n        yProject(x0: number[], y0: number[], y: number[]) {\r\n            if (!this.rootGroup && !this.yConstraints) return;\r\n            this.project(x0, y0, y0, y, v=> v.py, this.yConstraints, generateYGroupConstraints,\r\n                v => v.bounds.setYCentre(y[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var ymin = y[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var ymax = y[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.y = ymin - p2;;\r\n                    g.bounds.Y = ymax + p2;\r\n                });\r\n        }\r\n\r\n        projectFunctions(): { (x0: number[], y0: number[], r: number[]): void }[]{\r\n            return [\r\n                (x0, y0, x) => this.xProject(x0, y0, x),\r\n                (x0, y0, y) => this.yProject(x0, y0, y)\r\n            ];\r\n        }\r\n\r\n        private project(x0: number[], y0: number[], start: number[], desired: number[],\r\n            getDesired: (v: GraphNode) => number,\r\n            cs: Constraint[],\r\n            generateConstraints: (g: ProjectionGroup) => Constraint[],\r\n            updateNodeBounds: (v: GraphNode) => any,\r\n            updateGroupBounds: (g: ProjectionGroup) => any)\r\n        {\r\n            this.setupVariablesAndBounds(x0, y0, desired, getDesired);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                computeGroupBounds(this.rootGroup);\r\n                cs = cs.concat(generateConstraints(this.rootGroup));\r\n            }\r\n            this.solve(this.variables, cs, start, desired);\r\n            this.nodes.forEach(updateNodeBounds);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                this.groups.forEach(updateGroupBounds);\r\n                computeGroupBounds(this.rootGroup);\r\n            }\r\n        }\r\n\r\n        private solve(vs: Variable[], cs: Constraint[], starting: number[], desired: number[]) {\r\n            var solver = new Solver(vs, cs);\r\n            solver.setStartingPositions(starting);\r\n            solver.setDesiredPositions(desired);\r\n            solver.solve();\r\n        }\r\n    }\r\n","import {PairingHeap, PriorityQueue} from './pqueue'\r\n\r\nclass Neighbour {\r\n    constructor(public id: number, public distance: number) { }\r\n}\r\n\r\nclass Node {\r\n    constructor(public id: number) {\r\n        this.neighbours = [];\r\n    }\r\n    neighbours: Neighbour[];\r\n    d: number;\r\n    prev: Node;\r\n    q: PairingHeap<Node>;\r\n}\r\n\r\nclass QueueEntry {\r\n    constructor(public node: Node, public prev: QueueEntry, public d: number) {}\r\n}\r\n\r\n/**\r\n * calculates all-pairs shortest paths or shortest paths from a single node\r\n * @class Calculator\r\n * @constructor\r\n * @param n {number} number of nodes\r\n * @param es {Edge[]} array of edges\r\n */\r\nexport class Calculator<Link> {\r\n    private neighbours: Node[];\r\n\r\n    constructor(public n: number, public es: Link[], getSourceIndex: (l: Link) => number, getTargetIndex: (l: Link) => number, getLength: (l: Link) => number) {\r\n        this.neighbours = new Array(this.n);\r\n        var i = this.n; while (i--) this.neighbours[i] = new Node(i);\r\n\r\n        i = this.es.length; while (i--) {\r\n            var e = this.es[i];\r\n            var u: number = getSourceIndex(e), v: number = getTargetIndex(e);\r\n            var d = getLength(e);\r\n            this.neighbours[u].neighbours.push(new Neighbour(v, d));\r\n            this.neighbours[v].neighbours.push(new Neighbour(u, d));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute shortest paths for graph over n nodes with edges an array of source/target pairs\r\n     * edges may optionally have a length attribute.  1 is the default.\r\n     * Uses Johnson's algorithm.\r\n     *\r\n     * @method DistanceMatrix\r\n     * @return the distance matrix\r\n     */\r\n    DistanceMatrix(): number[][] {\r\n        var D = new Array(this.n);\r\n        for (var i = 0; i < this.n; ++i) {\r\n            D[i] = this.dijkstraNeighbours(i);\r\n        }\r\n        return D;\r\n    }\r\n\r\n    /**\r\n     * get shortest paths from a specified start node\r\n     * @method DistancesFromNode\r\n     * @param start node index\r\n     * @return array of path lengths\r\n     */\r\n    DistancesFromNode(start: number): number[] {\r\n        return this.dijkstraNeighbours(start);\r\n    }\r\n\r\n    PathFromNodeToNode(start: number, end: number): number[] {\r\n        return this.dijkstraNeighbours(start, end);\r\n    }\r\n\r\n    // find shortest path from start to end, with the opportunity at\r\n    // each edge traversal to compute a custom cost based on the\r\n    // previous edge.  For example, to penalise bends.\r\n    PathFromNodeToNodeWithPrevCost(\r\n        start: number,\r\n        end: number,\r\n        prevCost: (u:number,v:number,w:number)=>number): number[]\r\n    {\r\n        var q = new PriorityQueue<QueueEntry>((a, b) => a.d <= b.d),\r\n            u: Node = this.neighbours[start],\r\n            qu: QueueEntry = new QueueEntry(u,null,0),\r\n            visitedFrom = {};\r\n        q.push(qu);\r\n        while(!q.empty()) {\r\n            qu = q.pop();\r\n            u = qu.node;\r\n            if (u.id === end) {\r\n                break;\r\n            }\r\n            var i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i],\r\n                    v = this.neighbours[neighbour.id];\r\n\r\n                // don't double back\r\n                if (qu.prev && v.id === qu.prev.node.id) continue;\r\n\r\n                // don't retraverse an edge if it has already been explored\r\n                // from a lower cost route\r\n                var viduid = v.id + ',' + u.id;\r\n                if(viduid in visitedFrom && visitedFrom[viduid] <= qu.d)\r\n                    continue;\r\n\r\n                var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0,\r\n                    t = qu.d + neighbour.distance + cc;\r\n\r\n                // store cost of this traversal\r\n                visitedFrom[viduid] = t;\r\n                q.push(new QueueEntry(v, qu, t));\r\n            }\r\n        }\r\n        var path:number[] = [];\r\n        while (qu.prev) {\r\n            qu = qu.prev;\r\n            path.push(qu.node.id);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    private dijkstraNeighbours(start: number, dest: number = -1): number[] {\r\n        var q = new PriorityQueue<Node>((a, b) => a.d <= b.d),\r\n            i = this.neighbours.length,\r\n            d: number[] = new Array(i);\r\n        while (i--) {\r\n            var node: Node = this.neighbours[i];\r\n            node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\r\n            node.q = q.push(node);\r\n        }\r\n        while (!q.empty()) {\r\n            // console.log(q.toString(function (u) { return u.id + \"=\" + (u.d === Number.POSITIVE_INFINITY ? \"\\u221E\" : u.d.toFixed(2) )}));\r\n            var u = q.pop();\r\n            d[u.id] = u.d;\r\n            if (u.id === dest) {\r\n                var path: number[] = [];\r\n                var v = u;\r\n                while (typeof v.prev !== 'undefined') {\r\n                    path.push(v.prev.id);\r\n                    v = v.prev;\r\n                }\r\n                return path;\r\n            }\r\n            i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i];\r\n                var v = this.neighbours[neighbour.id];\r\n                var t = u.d + neighbour.distance;\r\n                if (u.d !== Number.MAX_VALUE && v.d > t) {\r\n                    v.d = t;\r\n                    v.prev = u;\r\n                    q.reduceKey(v.q, v, (e,q)=>e.q = q);\r\n                }\r\n            }\r\n        }\r\n        return d;\r\n    }\r\n}\r\n","    export interface LinkAccessor<Link> {\r\n        getSourceIndex(l: Link): number;\r\n        getTargetIndex(l: Link): number;\r\n    }\r\n\r\n    export interface LinkLengthAccessor<Link> extends LinkAccessor<Link> {\r\n        setLength(l: Link, value: number): void;\r\n    }\r\n\r\n    // compute the size of the union of two sets a and b\r\n    function unionCount(a: any, b: any): number {\r\n        var u = {};\r\n        for (var i in a) u[i] = {};\r\n        for (var i in b) u[i] = {};\r\n        return Object.keys(u).length;\r\n    }\r\n\r\n    // compute the size of the intersection of two sets a and b\r\n    function intersectionCount(a: number[], b: number[]): number {\r\n        var n = 0;\r\n        for (var i in a) if (typeof b[i] !== 'undefined') ++n;\r\n        return n;\r\n    }\r\n\r\n    function getNeighbours<Link>(links: Link[], la: LinkAccessor<Link>): any {\r\n        var neighbours = {};\r\n        var addNeighbours = (u, v) => {\r\n            if (typeof neighbours[u] === 'undefined')\r\n                neighbours[u] = {};\r\n            neighbours[u][v] = {};\r\n        };\r\n        links.forEach(e => {\r\n            var u = la.getSourceIndex(e), v = la.getTargetIndex(e);\r\n            addNeighbours(u, v);\r\n            addNeighbours(v, u);\r\n        });\r\n        return neighbours;\r\n    }\r\n\r\n    // modify the lengths of the specified links by the result of function f weighted by w\r\n    function computeLinkLengths<Link>(links: Link[], w: number, f: (a: any, b: any) => number, la: LinkLengthAccessor<Link>) {\r\n        var neighbours = getNeighbours(links, la);\r\n        links.forEach(l => {\r\n            var a = neighbours[la.getSourceIndex(l)];\r\n            var b = neighbours[la.getTargetIndex(l)];\r\n            la.setLength(l, 1 + w * f(a, b));\r\n        });\r\n    }\r\n\r\n    /** modify the specified link lengths based on the symmetric difference of their neighbours\r\n     * @class symmetricDiffLinkLengths\r\n     */\r\n    export function symmetricDiffLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) => Math.sqrt(unionCount(a, b) - intersectionCount(a, b)), la);\r\n    }\r\n\r\n    /** modify the specified links lengths based on the jaccard difference between their neighbours\r\n     * @class jaccardLinkLengths\r\n     */\r\n    export function jaccardLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) =>\r\n            Math.min(Object.keys(a).length, Object.keys(b).length) < 1.1 ? 0 : intersectionCount(a, b) / unionCount(a, b)\r\n            , la);\r\n    }\r\n\r\n    export interface IConstraint {\r\n        left: number;\r\n        right: number;\r\n        gap: number;\r\n    }\r\n\r\n    export interface DirectedEdgeConstraints {\r\n        axis: string;\r\n        gap: number;\r\n    }\r\n\r\n    export interface LinkSepAccessor<Link> extends LinkAccessor<Link> {\r\n        getMinSeparation(l: Link): number;\r\n    }\r\n\r\n    /** generate separation constraints for all edges unless both their source and sink are in the same strongly connected component\r\n     * @class generateDirectedEdgeConstraints\r\n     */\r\n    export function generateDirectedEdgeConstraints<Link>(n: number, links: Link[], axis: string,\r\n        la: LinkSepAccessor<Link>): IConstraint[]\r\n    {\r\n        var components = stronglyConnectedComponents(n, links, la);\r\n        var nodes = {};\r\n        components.forEach((c,i) =>\r\n            c.forEach(v => nodes[v] = i)\r\n        );\r\n        var constraints: any[] = [];\r\n        links.forEach(l => {\r\n            var ui = la.getSourceIndex(l), vi = la.getTargetIndex(l),\r\n                u = nodes[ui], v = nodes[vi];\r\n            if (u !== v) {\r\n                constraints.push({\r\n                    axis: axis,\r\n                    left: ui,\r\n                    right: vi,\r\n                    gap: la.getMinSeparation(l)\r\n                });\r\n            }\r\n        });\r\n        return constraints;\r\n    }\r\n\r\n    /**\r\n     * Tarjan's strongly connected components algorithm for directed graphs\r\n     * returns an array of arrays of node indicies in each of the strongly connected components.\r\n     * a vertex not in a SCC of two or more nodes is it's own SCC.\r\n     * adaptation of https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\r\n     */\r\n    export function stronglyConnectedComponents<Link>(numVertices: number, edges: Link[], la: LinkAccessor<Link>): number[][]{\r\n        var nodes = [];\r\n        var index = 0;\r\n        var stack = [];\r\n        var components = [];\r\n        function strongConnect(v) {\r\n            // Set the depth index for v to the smallest unused index\r\n            v.index = v.lowlink = index++;\r\n            stack.push(v);\r\n            v.onStack = true;\r\n\r\n            // Consider successors of v\r\n            for (var w of v.out) {\r\n                if (typeof w.index === 'undefined') {\r\n                    // Successor w has not yet been visited; recurse on it\r\n                    strongConnect(w);\r\n                    v.lowlink = Math.min(v.lowlink, w.lowlink);\r\n                } else if (w.onStack) {\r\n                    // Successor w is in stack S and hence in the current SCC\r\n                    v.lowlink = Math.min(v.lowlink, w.index);\r\n                }\r\n            }\r\n\r\n            // If v is a root node, pop the stack and generate an SCC\r\n            if (v.lowlink === v.index) {\r\n                // start a new strongly connected component\r\n                var component = [];\r\n                while (stack.length) {\r\n                    w = stack.pop();\r\n                    w.onStack = false;\r\n                    //add w to current strongly connected component\r\n                    component.push(w);\r\n                    if (w === v) break;\r\n                }\r\n                // output the current strongly connected component\r\n                components.push(component.map(v => v.id));\r\n            }\r\n        }\r\n        for (var i = 0; i < numVertices; i++) {\r\n            nodes.push({id: i, out: []});\r\n        }\r\n        for (var e of edges) {\r\n            let v = nodes[la.getSourceIndex(e)],\r\n                w = nodes[la.getTargetIndex(e)];\r\n            v.out.push(w);\r\n        }\r\n        for (var v of nodes) if (typeof v.index === 'undefined') strongConnect(v);\r\n        return components;\r\n    }\r\n","    /**\r\n     * Descent respects a collection of locks over nodes that should not move\r\n     * @class Locks\r\n     */\r\n    export class Locks {\r\n        locks: { [key:number]:number[]} = {};\r\n        /**\r\n         * add a lock on the node at index id\r\n         * @method add\r\n         * @param id index of node to be locked\r\n         * @param x required position for node\r\n         */\r\n        add(id: number, x: number[]) {\r\n/* DEBUG\r\n            if (isNaN(x[0]) || isNaN(x[1])) debugger;\r\nDEBUG */\r\n            this.locks[id] = x;\r\n        }\r\n        /**\r\n         * @method clear clear all locks\r\n         */\r\n        clear() {\r\n            this.locks = {};\r\n        }\r\n        /**\r\n         * @isEmpty\r\n         * @returns false if no locks exist\r\n         */\r\n        isEmpty(): boolean {\r\n            for (var l in this.locks) return false;\r\n            return true;\r\n        }\r\n        /**\r\n         * perform an operation on each lock\r\n         * @apply\r\n         */\r\n        apply(f: (id: number, x: number[]) => void) {\r\n            for (var l in this.locks) {\r\n                f(Number(l), this.locks[l]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uses a gradient descent approach to reduce a stress or p-stress goal function over a graph with specified ideal edge lengths or a square matrix of dissimilarities.\r\n     * The standard stress function over a graph nodes with position vectors x,y,z is (mathematica input):\r\n     *   stress[x_,y_,z_,D_,w_]:=Sum[w[[i,j]] (length[x[[i]],y[[i]],z[[i]],x[[j]],y[[j]],z[[j]]]-d[[i,j]])^2,{i,Length[x]-1},{j,i+1,Length[x]}]\r\n     * where: D is a square matrix of ideal separations between nodes, w is matrix of weights for those separations\r\n     *        length[x1_, y1_, z1_, x2_, y2_, z2_] = Sqrt[(x1 - x2)^2 + (y1 - y2)^2 + (z1 - z2)^2]\r\n     * below, we use wij = 1/(Dij^2)\r\n     *\r\n     * @class Descent\r\n     */\r\n    export class Descent {\r\n        public threshold: number = 0.0001;\r\n        /** Hessian Matrix\r\n         * @property H {number[][][]}\r\n         */\r\n        public H: number[][][];\r\n        /** gradient vector\r\n         * @property G {number[][]}\r\n         */\r\n        public g: number[][];\r\n        /** positions vector\r\n         * @property x {number[][]}\r\n         */\r\n        public x: number[][];\r\n        /**\r\n         * @property k {number} dimensionality\r\n         */\r\n        public k: number;\r\n        /**\r\n         * number of data-points / nodes / size of vectors/matrices\r\n         * @property n {number}\r\n         */\r\n        public n: number;\r\n\r\n        public locks: Locks;\r\n\r\n        private static zeroDistance: number = 1e-10;\r\n        private minD: number;\r\n\r\n        // pool of arrays of size n used internally, allocated in constructor\r\n        private Hd: number[][];\r\n        private a: number[][];\r\n        private b: number[][];\r\n        private c: number[][];\r\n        private d: number[][];\r\n        private e: number[][];\r\n        private ia: number[][];\r\n        private ib: number[][];\r\n        private xtmp: number[][];\r\n\r\n\r\n        // Parameters for grid snap stress.\r\n        // TODO: Make a pluggable \"StressTerm\" class instead of this\r\n        // mess.\r\n        public numGridSnapNodes: number = 0;\r\n        public snapGridSize: number = 100;\r\n        public snapStrength: number = 1000;\r\n        public scaleSnapByMaxH: boolean = false;\r\n\r\n        private random = new PseudoRandom();\r\n\r\n        public project: { (x0: number[], y0: number[], r: number[]): void }[] = null;\r\n\r\n        /**\r\n         * @method constructor\r\n         * @param x {number[][]} initial coordinates for nodes\r\n         * @param D {number[][]} matrix of desired distances between pairs of nodes\r\n         * @param G {number[][]} [default=null] if specified, G is a matrix of weights for goal terms between pairs of nodes.\r\n         * If G[i][j] > 1 and the separation between nodes i and j is greater than their ideal distance, then there is no contribution for this pair to the goal\r\n         * If G[i][j] <= 1 then it is used as a weighting on the contribution of the variance between ideal and actual separation between i and j to the goal function\r\n         */\r\n        constructor(x: number[][], public D: number[][], public G: number[][]= null) {\r\n            this.x = x;\r\n            this.k = x.length; // dimensionality\r\n            var n = this.n = x[0].length; // number of nodes\r\n            this.H = new Array(this.k);\r\n            this.g = new Array(this.k);\r\n            this.Hd = new Array(this.k);\r\n            this.a = new Array(this.k);\r\n            this.b = new Array(this.k);\r\n            this.c = new Array(this.k);\r\n            this.d = new Array(this.k);\r\n            this.e = new Array(this.k);\r\n            this.ia = new Array(this.k);\r\n            this.ib = new Array(this.k);\r\n            this.xtmp = new Array(this.k);\r\n            this.locks = new Locks();\r\n            this.minD = Number.MAX_VALUE;\r\n            var i = n, j;\r\n            while (i--) {\r\n                j = n;\r\n                while (--j > i) {\r\n                    var d = D[i][j];\r\n                    if (d > 0 && d < this.minD) {\r\n                        this.minD = d;\r\n                    }\r\n                }\r\n            }\r\n            if (this.minD === Number.MAX_VALUE) this.minD = 1;\r\n            i = this.k;\r\n            while (i--) {\r\n                this.g[i] = new Array(n);\r\n                this.H[i] = new Array(n);\r\n                j = n;\r\n                while (j--) {\r\n                    this.H[i][j] = new Array(n);\r\n                }\r\n                this.Hd[i] = new Array(n);\r\n                this.a[i] = new Array(n);\r\n                this.b[i] = new Array(n);\r\n                this.c[i] = new Array(n);\r\n                this.d[i] = new Array(n);\r\n                this.e[i] = new Array(n);\r\n                this.ia[i] = new Array(n);\r\n                this.ib[i] = new Array(n);\r\n                this.xtmp[i] = new Array(n);\r\n            }\r\n        }\r\n\r\n        public static createSquareMatrix(n: number, f: (i: number, j: number) => number): number[][] {\r\n            var M = new Array(n);\r\n            for (var i = 0; i < n; ++i) {\r\n                M[i] = new Array(n);\r\n                for (var j = 0; j < n; ++j) {\r\n                    M[i][j] = f(i, j);\r\n                }\r\n            }\r\n            return M;\r\n        }\r\n\r\n        private offsetDir(): number[] {\r\n            var u = new Array(this.k);\r\n            var l = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                var x = u[i] = this.random.getNextBetween(0.01, 1) - 0.5;\r\n                l += x * x;\r\n            }\r\n            l = Math.sqrt(l);\r\n            return u.map(x=> x *= this.minD / l);\r\n        }\r\n\r\n        // compute first and second derivative information storing results in this.g and this.H\r\n        public computeDerivatives(x: number[][]) {\r\n            var n: number = this.n;\r\n            if (n < 1) return;\r\n            var i: number;\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i)\r\n                    if (isNaN(x[i][u])) debugger;\r\nDEBUG */\r\n            var d: number[] = new Array(this.k);\r\n            var d2: number[] = new Array(this.k);\r\n            var Huu: number[] = new Array(this.k);\r\n            var maxH: number = 0;\r\n            for (var u: number = 0; u < n; ++u) {\r\n                for (i = 0; i < this.k; ++i) Huu[i] = this.g[i][u] = 0;\r\n                for (var v = 0; v < n; ++v) {\r\n                    if (u === v) continue;\r\n\r\n                    // The following loop randomly displaces nodes that are at identical positions\r\n                    var maxDisplaces = n; // avoid infinite loop in the case of numerical issues, such as huge values\r\n                    while (maxDisplaces--) {\r\n                        var sd2 = 0;\r\n                        for (i = 0; i < this.k; ++i) {\r\n                            var dx = d[i] = x[i][u] - x[i][v];\r\n                            sd2 += d2[i] = dx * dx;\r\n                        }\r\n                        if (sd2 > 1e-9) break;\r\n                        var rd = this.offsetDir();\r\n                        for (i = 0; i < this.k; ++i) x[i][v] += rd[i];\r\n                    }\r\n                    var l: number = Math.sqrt(sd2);\r\n                    var D: number = this.D[u][v];\r\n                    var weight = this.G != null ? this.G[u][v] : 1;\r\n                    if (weight > 1 && l > D || !isFinite(D)) {\r\n                        for (i = 0; i < this.k; ++i) this.H[i][u][v] = 0;\r\n                        continue;\r\n                    }\r\n                    if (weight > 1) {\r\n                        weight = 1;\r\n                    }\r\n                    var D2: number = D * D;\r\n                    var gs: number = 2 * weight * (l - D) / (D2 * l);\r\n                    var l3 = l * l * l;\r\n                    var hs: number = 2 * -weight / (D2 * l3);\r\n                    if (!isFinite(gs))\r\n                        console.log(gs);\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.g[i][u] += d[i] * gs;\r\n                        Huu[i] -= this.H[i][u][v] = hs * (l3 + D * (d2[i] - sd2) + l * sd2);\r\n                    }\r\n                }\r\n                for (i = 0; i < this.k; ++i) maxH = Math.max(maxH, this.H[i][u][u] = Huu[i]);\r\n            }\r\n            // Grid snap forces\r\n            var r = this.snapGridSize/2;\r\n            var g = this.snapGridSize;\r\n            var w = this.snapStrength;\r\n            var k = w / (r * r);\r\n            var numNodes = this.numGridSnapNodes;\r\n            //var numNodes = n;\r\n            for (var u: number = 0; u < numNodes; ++u) {\r\n                for (i = 0; i < this.k; ++i) {\r\n                    var xiu = this.x[i][u];\r\n                    var m = xiu / g;\r\n                    var f = m % 1;\r\n                    var q = m - f;\r\n                    var a = Math.abs(f);\r\n                    var dx = (a <= 0.5) ? xiu - q * g :\r\n                        (xiu > 0) ? xiu - (q + 1) * g : xiu - (q - 1) * g;\r\n                    if (-r < dx && dx <= r) {\r\n                        if (this.scaleSnapByMaxH) {\r\n                            this.g[i][u] += maxH * k * dx;\r\n                            this.H[i][u][u] += maxH * k;\r\n                        } else {\r\n                            this.g[i][u] += k * dx;\r\n                            this.H[i][u][u] += k;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!this.locks.isEmpty()) {\r\n                this.locks.apply((u, p) => {\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.H[i][u][u] += maxH;\r\n                        this.g[i][u] -= maxH * (p[i] - x[i][u]);\r\n                    }\r\n                });\r\n            }\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i) {\r\n                    if (isNaN(this.g[i][u])) debugger;\r\n                    for (var v: number = 0; v < n; ++v)\r\n                        if (isNaN(this.H[i][u][v])) debugger;\r\n                }\r\nDEBUG */\r\n        }\r\n\r\n        private static dotProd(a: number[], b: number[]): number {\r\n            var x = 0, i = a.length;\r\n            while (i--) x += a[i] * b[i];\r\n            return x;\r\n        }\r\n\r\n        // result r = matrix m * vector v\r\n        private static rightMultiply(m: number[][], v: number[], r: number[]) {\r\n            var i = m.length;\r\n            while (i--) r[i] = Descent.dotProd(m[i], v);\r\n        }\r\n\r\n        // computes the optimal step size to take in direction d using the\r\n        // derivative information in this.g and this.H\r\n        // returns the scalar multiplier to apply to d to get the optimal step\r\n        public computeStepSize(d: number[][]): number {\r\n            var numerator = 0, denominator = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                numerator += Descent.dotProd(this.g[i], d[i]);\r\n                Descent.rightMultiply(this.H[i], d[i], this.Hd[i]);\r\n                denominator += Descent.dotProd(d[i], this.Hd[i]);\r\n            }\r\n            if (denominator === 0 || !isFinite(denominator)) return 0;\r\n            return 1 * numerator / denominator;\r\n        }\r\n\r\n        public reduceStress(): number {\r\n            this.computeDerivatives(this.x);\r\n            var alpha = this.computeStepSize(this.g);\r\n            for (var i = 0; i < this.k; ++i) {\r\n                this.takeDescentStep(this.x[i], this.g[i], alpha);\r\n            }\r\n            return this.computeStress();\r\n        }\r\n\r\n        private static copy(a: number[][], b: number[][]): void {\r\n            var m = a.length, n = b[0].length;\r\n            for (var i = 0; i < m; ++i) {\r\n                for (var j = 0; j < n; ++j) {\r\n                    b[i][j] = a[i][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        // takes a step of stepSize * d from x0, and then project against any constraints.\r\n        // result is returned in r.\r\n        // x0: starting positions\r\n        // r: result positions will be returned here\r\n        // d: unconstrained descent vector\r\n        // stepSize: amount to step along d\r\n        private stepAndProject(x0: number[][], r: number[][], d: number[][], stepSize: number): void {\r\n            Descent.copy(x0, r);\r\n            this.takeDescentStep(r[0], d[0], stepSize);\r\n            if (this.project) this.project[0](x0[0], x0[1], r[0]);\r\n            this.takeDescentStep(r[1], d[1], stepSize);\r\n            if (this.project) this.project[1](r[0], x0[1], r[1]);\r\n\r\n            // todo: allow projection against constraints in higher dimensions\r\n            for (var i = 2; i < this.k; i++)\r\n                this.takeDescentStep(r[i], d[i], stepSize);\r\n\r\n            // the following makes locks extra sticky... but hides the result of the projection from the consumer\r\n            //if (!this.locks.isEmpty()) {\r\n            //    this.locks.apply((u, p) => {\r\n            //        for (var i = 0; i < this.k; i++) {\r\n            //            r[i][u] = p[i];\r\n            //        }\r\n            //    });\r\n            //}\r\n        }\r\n\r\n        private static mApply(m: number, n: number, f: (i: number, j: number) => any) {\r\n            var i = m; while (i-- > 0) {\r\n                var j = n; while (j-- > 0) f(i, j);\r\n            }\r\n        }\r\n        private matrixApply(f: (i: number, j: number) => any) {\r\n            Descent.mApply(this.k, this.n, f);\r\n        }\r\n\r\n        private computeNextPosition(x0: number[][], r: number[][]): void {\r\n            this.computeDerivatives(x0);\r\n            var alpha = this.computeStepSize(this.g);\r\n            this.stepAndProject(x0, r, this.g, alpha);\r\n/* DEBUG\r\n            for (var u: number = 0; u < this.n; ++u)\r\n                for (var i = 0; i < this.k; ++i)\r\n                    if (isNaN(r[i][u])) debugger;\r\nDEBUG */\r\n            if (this.project) {\r\n                this.matrixApply((i, j) => this.e[i][j] = x0[i][j] - r[i][j]);\r\n                var beta = this.computeStepSize(this.e);\r\n                beta = Math.max(0.2, Math.min(beta, 1));\r\n                this.stepAndProject(x0, r, this.e, beta);\r\n            }\r\n        }\r\n\r\n        public run(iterations: number): number {\r\n            var stress = Number.MAX_VALUE, converged = false;\r\n            while (!converged && iterations-- > 0) {\r\n                var s = this.rungeKutta();\r\n                converged = Math.abs(stress / s - 1) < this.threshold;\r\n                stress = s;\r\n            }\r\n            return stress;\r\n        }\r\n\r\n        public rungeKutta(): number {\r\n            this.computeNextPosition(this.x, this.a);\r\n            Descent.mid(this.x, this.a, this.ia);\r\n            this.computeNextPosition(this.ia, this.b);\r\n            Descent.mid(this.x, this.b, this.ib);\r\n            this.computeNextPosition(this.ib, this.c);\r\n            this.computeNextPosition(this.c, this.d);\r\n            var disp = 0;\r\n            this.matrixApply((i, j) => {\r\n                var x = (this.a[i][j] + 2.0 * this.b[i][j] + 2.0 * this.c[i][j] + this.d[i][j]) / 6.0,\r\n                    d = this.x[i][j] - x;\r\n                disp += d * d;\r\n                this.x[i][j] = x;\r\n            });\r\n            return disp;\r\n        }\r\n\r\n        private static mid(a: number[][], b: number[][], m: number[][]): void {\r\n            Descent.mApply(a.length, a[0].length, (i, j) =>\r\n                m[i][j] = a[i][j] + (b[i][j] - a[i][j]) / 2.0);\r\n        }\r\n\r\n        public takeDescentStep(x: number[], d: number[], stepSize: number): void {\r\n            for (var i = 0; i < this.n; ++i) {\r\n                x[i] = x[i] - stepSize * d[i];\r\n            }\r\n        }\r\n\r\n        public computeStress(): number {\r\n            var stress = 0;\r\n            for (var u = 0, nMinus1 = this.n - 1; u < nMinus1; ++u) {\r\n                for (var v = u + 1, n = this.n; v < n; ++v) {\r\n                    var l = 0;\r\n                    for (var i = 0; i < this.k; ++i) {\r\n                        var dx = this.x[i][u] - this.x[i][v];\r\n                        l += dx * dx;\r\n                    }\r\n                    l = Math.sqrt(l);\r\n                    var d = this.D[u][v];\r\n                    if (!isFinite(d)) continue;\r\n                    var rl = d - l;\r\n                    var d2 = d * d;\r\n                    stress += rl * rl / d2;\r\n                }\r\n            }\r\n            return stress;\r\n        }\r\n    }\r\n\r\n    // Linear congruential pseudo random number generator\r\n    export class PseudoRandom {\r\n        private a: number = 214013;\r\n        private c: number = 2531011;\r\n        private m: number = 2147483648;\r\n        private range: number = 32767;\r\n\r\n        constructor(public seed: number = 1) { }\r\n\r\n        // random real between 0 and 1\r\n        getNext(): number {\r\n            this.seed = (this.seed * this.a + this.c) % this.m;\r\n            return (this.seed >> 16) / this.range;\r\n        }\r\n\r\n        // random real between min and max\r\n        getNextBetween(min: number, max: number) {\r\n            return min + this.getNext() * (max - min);\r\n        }\r\n    }\r\n","    export class PositionStats {\r\n        AB: number = 0;\r\n        AD: number = 0;\r\n        A2: number = 0;\r\n\r\n        constructor(public scale: number) {}\r\n\r\n        addVariable(v: Variable): void {\r\n            var ai = this.scale / v.scale;\r\n            var bi = v.offset / v.scale;\r\n            var wi = v.weight;\r\n            this.AB += wi * ai * bi;\r\n            this.AD += wi * ai * v.desiredPosition;\r\n            this.A2 += wi * ai * ai;\r\n        }\r\n\r\n        getPosn(): number {\r\n            return (this.AD - this.AB) / this.A2;\r\n        }\r\n    }\r\n\r\n    export class Constraint {\r\n        lm: number;\r\n        active: boolean = false;\r\n        unsatisfiable: boolean = false;\r\n\r\n        constructor(public left: Variable, public right: Variable, public gap: number, public equality: boolean = false) {\r\n            this.left = left;\r\n            this.right = right;\r\n            this.gap = gap;\r\n            this.equality = equality;\r\n        }\r\n\r\n        slack(): number {\r\n            return this.unsatisfiable ? Number.MAX_VALUE\r\n                : this.right.scale * this.right.position() - this.gap\r\n                - this.left.scale * this.left.position();\r\n        }\r\n    }\r\n\r\n    export class Variable {\r\n        offset: number = 0;\r\n        block: Block;\r\n        cIn: Constraint[];\r\n        cOut: Constraint[];\r\n\r\n        constructor(public desiredPosition: number, public weight: number = 1, public scale: number = 1) {}\r\n\r\n        dfdv(): number {\r\n            return 2.0 * this.weight * (this.position() - this.desiredPosition);\r\n        }\r\n\r\n        position(): number {\r\n            return (this.block.ps.scale * this.block.posn + this.offset) / this.scale;\r\n        }\r\n\r\n        // visit neighbours by active constraints within the same block\r\n        visitNeighbours(prev: Variable, f: (c: Constraint, next: Variable) => void ): void {\r\n            var ff = (c, next) => c.active && prev !== next && f(c, next);\r\n            this.cOut.forEach(c=> ff(c, c.right));\r\n            this.cIn.forEach(c=> ff(c, c.left));\r\n        }\r\n    }\r\n\r\n    export class Block {\r\n        vars: Variable[] = [];\r\n        posn: number;\r\n        ps: PositionStats;\r\n        blockInd: number;\r\n\r\n        constructor(v: Variable) {\r\n            v.offset = 0;\r\n            this.ps = new PositionStats(v.scale);\r\n            this.addVariable(v);\r\n        }\r\n\r\n        private addVariable(v: Variable): void {\r\n            v.block = this;\r\n            this.vars.push(v);\r\n            this.ps.addVariable(v);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        // move the block where it needs to be to minimize cost\r\n        updateWeightedPosition(): void {\r\n            this.ps.AB = this.ps.AD = this.ps.A2 = 0;\r\n            for (var i = 0, n = this.vars.length; i < n; ++i)\r\n                this.ps.addVariable(this.vars[i]);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        private compute_lm(v: Variable, u: Variable, postAction: (c: Constraint)=>void): number {\r\n            var dfdv = v.dfdv();\r\n            v.visitNeighbours(u, (c, next) => {\r\n                var _dfdv = this.compute_lm(next, v, postAction);\r\n                if (next === c.right) {\r\n                    dfdv += _dfdv * c.left.scale;\r\n                    c.lm = _dfdv;\r\n                } else {\r\n                    dfdv += _dfdv * c.right.scale;\r\n                    c.lm = -_dfdv;\r\n                }\r\n                postAction(c);\r\n            });\r\n            return dfdv / v.scale;\r\n        }\r\n\r\n        private populateSplitBlock(v: Variable, prev: Variable): void {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                next.offset = v.offset + (next === c.right ? c.gap : -c.gap);\r\n                this.addVariable(next);\r\n                this.populateSplitBlock(next, v);\r\n            });\r\n        }\r\n\r\n        // traverse the active constraint tree applying visit to each active constraint\r\n        traverse(visit: (c: Constraint) => any, acc: any[], v: Variable = this.vars[0], prev: Variable=null) {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                acc.push(visit(c));\r\n                this.traverse(visit, acc, next, v);\r\n            });\r\n        }\r\n\r\n        // calculate lagrangian multipliers on constraints and\r\n        // find the active constraint in this block with the smallest lagrangian.\r\n        // if the lagrangian is negative, then the constraint is a split candidate.\r\n        findMinLM(): Constraint {\r\n            var m: Constraint = null;\r\n            this.compute_lm(this.vars[0], null, c=> {\r\n                if (!c.equality && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findMinLMBetween(lv: Variable, rv: Variable): Constraint {\r\n            this.compute_lm(lv, null, () => {});\r\n            var m = null;\r\n            this.findPath(lv, null, rv, (c, next)=> {\r\n                if (!c.equality && c.right === next && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findPath(v: Variable, prev: Variable, to: Variable, visit: (c: Constraint, next:Variable)=>void): boolean {\r\n            var endFound = false;\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                if (!endFound && (next === to || this.findPath(next, v, to, visit)))\r\n                {\r\n                    endFound = true;\r\n                    visit(c, next);\r\n                }\r\n            });\r\n            return endFound;\r\n        }\r\n\r\n        // Search active constraint tree from u to see if there is a directed path to v.\r\n        // Returns true if path is found.\r\n        isActiveDirectedPathBetween(u: Variable, v: Variable) : boolean {\r\n            if (u === v) return true;\r\n            var i = u.cOut.length;\r\n            while(i--) {\r\n                var c = u.cOut[i];\r\n                if (c.active && this.isActiveDirectedPathBetween(c.right, v))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // split the block into two by deactivating the specified constraint\r\n        static split(c: Constraint): Block[]{\r\n/* DEBUG\r\n            console.log(\"split on \" + c);\r\n            console.assert(c.active, \"attempt to split on inactive constraint\");\r\nDEBUG */\r\n            c.active = false;\r\n            return [Block.createSplitBlock(c.left), Block.createSplitBlock(c.right)];\r\n        }\r\n\r\n        private static createSplitBlock(startVar: Variable): Block {\r\n            var b = new Block(startVar);\r\n            b.populateSplitBlock(startVar, null);\r\n            return b;\r\n        }\r\n\r\n        // find a split point somewhere between the specified variables\r\n        splitBetween(vl: Variable, vr: Variable): { constraint: Constraint; lb: Block; rb: Block } {\r\n/* DEBUG\r\n            console.assert(vl.block === this);\r\n            console.assert(vr.block === this);\r\nDEBUG */\r\n            var c = this.findMinLMBetween(vl, vr);\r\n            if (c !== null) {\r\n                var bs = Block.split(c);\r\n                return { constraint: c, lb: bs[0], rb: bs[1] };\r\n            }\r\n            // couldn't find a split point - for example the active path is all equality constraints\r\n            return null;\r\n        }\r\n\r\n        mergeAcross(b: Block, c: Constraint, dist: number): void {\r\n            c.active = true;\r\n            for (var i = 0, n = b.vars.length; i < n; ++i) {\r\n                var v = b.vars[i];\r\n                v.offset += dist;\r\n                this.addVariable(v);\r\n            }\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.vars.length;\r\n            while (i--) {\r\n                var v = this.vars[i],\r\n                    d = v.position() - v.desiredPosition;\r\n                sum += d * d * v.weight;\r\n            }\r\n            return sum;\r\n        }\r\n\r\n/* DEBUG\r\n        toString(): string {\r\n            var cs = [];\r\n            this.traverse(c=> c.toString() + \"\\n\", cs)\r\n            return \"b\"+this.blockInd + \"@\" + this.posn + \": vars=\" + this.vars.map(v=> v.toString()+\":\"+v.offset) + \";\\n cons=\\n\" + cs;\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Blocks {\r\n        private list: Block[];\r\n\r\n        constructor(public vs: Variable[]) {\r\n            var n = vs.length;\r\n            this.list = new Array(n);\r\n            while (n--) {\r\n                var b = new Block(vs[n]);\r\n                this.list[n] = b;\r\n                b.blockInd = n;\r\n            }\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.list.length;\r\n            while (i--) sum += this.list[i].cost();\r\n            return sum;\r\n        }\r\n\r\n        insert(b: Block) {\r\n/* DEBUG\r\n            console.assert(!this.contains(b), \"blocks error: tried to reinsert block \" + b.blockInd)\r\nDEBUG */\r\n            b.blockInd = this.list.length;\r\n            this.list.push(b);\r\n/* DEBUG\r\n            console.log(\"insert block: \" + b.blockInd);\r\n            this.contains(b);\r\nDEBUG */\r\n        }\r\n\r\n        remove(b: Block) {\r\n/* DEBUG\r\n            console.log(\"remove block: \" + b.blockInd);\r\n            console.assert(this.contains(b));\r\nDEBUG */\r\n            var last = this.list.length - 1;\r\n            var swapBlock = this.list[last];\r\n            this.list.length = last;\r\n            if (b !== swapBlock) {\r\n                this.list[b.blockInd] = swapBlock;\r\n                swapBlock.blockInd = b.blockInd;\r\n/* DEBUG\r\n                console.assert(this.contains(swapBlock));\r\nDEBUG */\r\n            }\r\n        }\r\n\r\n        // merge the blocks on either side of the specified constraint, by copying the smaller block into the larger\r\n        // and deleting the smaller.\r\n        merge(c: Constraint): void {\r\n            var l = c.left.block, r = c.right.block;\r\n/* DEBUG\r\n            console.assert(l!==r, \"attempt to merge within the same block\");\r\nDEBUG */\r\n            var dist = c.right.offset - c.left.offset - c.gap;\r\n            if (l.vars.length < r.vars.length) {\r\n                r.mergeAcross(l, c, dist);\r\n                this.remove(l);\r\n            } else {\r\n                l.mergeAcross(r, c, -dist);\r\n                this.remove(r);\r\n            }\r\n/* DEBUG\r\n            console.assert(Math.abs(c.slack()) < 1e-6, \"Error: Constraint should be at equality after merge!\");\r\n            console.log(\"merged on \" + c);\r\nDEBUG */\r\n        }\r\n\r\n        forEach(f: (b: Block, i: number) => void ) {\r\n            this.list.forEach(f);\r\n        }\r\n\r\n        // useful, for example, after variable desired positions change.\r\n        updateBlockPositions(): void {\r\n            this.list.forEach(b=> b.updateWeightedPosition());\r\n        }\r\n\r\n        // split each block across its constraint with the minimum lagrangian\r\n        split(inactive: Constraint[]): void {\r\n            this.updateBlockPositions();\r\n            this.list.forEach(b=> {\r\n                var v = b.findMinLM();\r\n                if (v !== null && v.lm < Solver.LAGRANGIAN_TOLERANCE) {\r\n                    b = v.left.block;\r\n                    Block.split(v).forEach(nb=>this.insert(nb));\r\n                    this.remove(b);\r\n                    inactive.push(v);\r\n/* DEBUG\r\n                    console.assert(this.contains(v.left.block));\r\n                    console.assert(this.contains(v.right.block));\r\nDEBUG */\r\n                }\r\n            });\r\n        }\r\n\r\n/* DEBUG\r\n        // checks b is in the block, and does a sanity check over list index integrity\r\n        contains(b: Block): boolean {\r\n            var result = false;\r\n            this.list.forEach((bb, i) => {\r\n                if (bb.blockInd !== i) {\r\n                    console.error(\"blocks error, blockInd \" + b.blockInd + \" found at \" + i);\r\n                    return false;\r\n                }\r\n                result = result || b === bb;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        toString(): string {\r\n            return this.list.toString();\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Solver {\r\n        bs: Blocks;\r\n        inactive: Constraint[];\r\n\r\n        static LAGRANGIAN_TOLERANCE = -1e-4;\r\n        static ZERO_UPPERBOUND = -1e-10;\r\n\r\n        constructor(public vs: Variable[], public cs: Constraint[]) {\r\n            this.vs = vs;\r\n            vs.forEach(v => {\r\n                v.cIn = [], v.cOut = [];\r\n/* DEBUG\r\n                v.toString = () => \"v\" + vs.indexOf(v);\r\nDEBUG */\r\n            });\r\n            this.cs = cs;\r\n            cs.forEach(c => {\r\n                c.left.cOut.push(c);\r\n                c.right.cIn.push(c);\r\n/* DEBUG\r\n                c.toString = () => c.left + \"+\" + c.gap + \"<=\" + c.right + \" slack=\" + c.slack() + \" active=\" + c.active;\r\nDEBUG */\r\n            });\r\n            this.inactive = cs.map(c=> { c.active = false; return c; });\r\n            this.bs = null;\r\n        }\r\n\r\n        cost(): number {\r\n            return this.bs.cost();\r\n        }\r\n\r\n        // set starting positions without changing desired positions.\r\n        // Note: it throws away any previous block structure.\r\n        setStartingPositions(ps: number[]): void {\r\n            this.inactive = this.cs.map(c=> { c.active = false; return c; });\r\n            this.bs = new Blocks(this.vs);\r\n            this.bs.forEach((b, i) => b.posn = ps[i]);\r\n        }\r\n\r\n        setDesiredPositions(ps: number[]): void {\r\n            this.vs.forEach((v, i) => v.desiredPosition = ps[i]);\r\n        }\r\n\r\n/* DEBUG\r\n        private getId(v: Variable): number {\r\n            return this.vs.indexOf(v);\r\n        }\r\n\r\n        // sanity check of the index integrity of the inactive list\r\n        checkInactive(): void {\r\n            var inactiveCount = 0;\r\n            this.cs.forEach(c=> {\r\n                var i = this.inactive.indexOf(c);\r\n                console.assert(!c.active && i >= 0 || c.active && i < 0, \"constraint should be in the inactive list if it is not active: \" + c);\r\n                if (i >= 0) {\r\n                    inactiveCount++;\r\n                } else {\r\n                    console.assert(c.active, \"inactive constraint not found in inactive list: \" + c);\r\n                }\r\n            });\r\n            console.assert(inactiveCount === this.inactive.length, inactiveCount + \" inactive constraints found, \" + this.inactive.length + \"in inactive list\");\r\n        }\r\n        // after every call to satisfy the following should check should pass\r\n        checkSatisfied(): void {\r\n            this.cs.forEach(c=>console.assert(c.slack() >= vpsc.Solver.ZERO_UPPERBOUND, \"Error: Unsatisfied constraint! \"+c));\r\n        }\r\nDEBUG */\r\n\r\n        private mostViolated(): Constraint {\r\n            var minSlack = Number.MAX_VALUE,\r\n                v: Constraint = null,\r\n                l = this.inactive,\r\n                n = l.length,\r\n                deletePoint = n;\r\n            for (var i = 0; i < n; ++i) {\r\n                var c = l[i];\r\n                if (c.unsatisfiable) continue;\r\n                var slack = c.slack();\r\n                if (c.equality || slack < minSlack) {\r\n                    minSlack = slack;\r\n                    v = c;\r\n                    deletePoint = i;\r\n                    if (c.equality) break;\r\n                }\r\n            }\r\n            if (deletePoint !== n &&\r\n                (minSlack < Solver.ZERO_UPPERBOUND && !v.active || v.equality))\r\n            {\r\n                l[deletePoint] = l[n - 1];\r\n                l.length = n - 1;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        // satisfy constraints by building block structure over violated constraints\r\n        // and moving the blocks to their desired positions\r\n        satisfy(): void {\r\n            if (this.bs == null) {\r\n                this.bs = new Blocks(this.vs);\r\n            }\r\n/* DEBUG\r\n            console.log(\"satisfy: \" + this.bs);\r\nDEBUG */\r\n            this.bs.split(this.inactive);\r\n            var v: Constraint = null;\r\n            while ((v = this.mostViolated()) && (v.equality || v.slack() < Solver.ZERO_UPPERBOUND && !v.active)) {\r\n                var lb = v.left.block, rb = v.right.block;\r\n/* DEBUG\r\n                console.log(\"most violated is: \" + v);\r\n                this.bs.contains(lb);\r\n                this.bs.contains(rb);\r\nDEBUG */\r\n                if (lb !== rb) {\r\n                    this.bs.merge(v);\r\n                } else {\r\n                    if (lb.isActiveDirectedPathBetween(v.right, v.left)) {\r\n                        // cycle found!\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    // constraint is within block, need to split first\r\n                    var split = lb.splitBetween(v.left, v.right);\r\n                    if (split !== null) {\r\n                        this.bs.insert(split.lb);\r\n                        this.bs.insert(split.rb);\r\n                        this.bs.remove(lb);\r\n                        this.inactive.push(split.constraint);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"unsatisfiable constraint found\");\r\nDEBUG */\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    if (v.slack() >= 0) {\r\n/* DEBUG\r\n                        console.log(\"violated constraint indirectly satisfied: \" + v);\r\nDEBUG */\r\n                        // v was satisfied by the above split!\r\n                        this.inactive.push(v);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"merge after split:\");\r\nDEBUG */\r\n                        this.bs.merge(v);\r\n                    }\r\n                }\r\n/* DEBUG\r\n                this.bs.contains(v.left.block);\r\n                this.bs.contains(v.right.block);\r\n                this.checkInactive();\r\nDEBUG */\r\n            }\r\n/* DEBUG\r\n            this.checkSatisfied();\r\nDEBUG */\r\n        }\r\n\r\n        // repeatedly build and split block structure until we converge to an optimal solution\r\n        solve(): number {\r\n            this.satisfy();\r\n            var lastcost = Number.MAX_VALUE, cost = this.bs.cost();\r\n            while (Math.abs(lastcost - cost) > 0.0001) {\r\n                this.satisfy();\r\n                lastcost = cost;\r\n                cost = this.bs.cost();\r\n            }\r\n            return cost;\r\n        }\r\n    }\r\n    /**\r\n      * Remove overlap between spans while keeping their centers as close as possible to the specified desiredCenters.\r\n      * Lower and upper bounds will be respected if the spans physically fit between them\r\n      * (otherwise they'll be moved and their new position returned).\r\n      * If no upper/lower bound is specified then the bounds of the moved spans will be returned.\r\n      * returns a new center for each span.\r\n      */\r\n    export function removeOverlapInOneDimension(spans: { size: number, desiredCenter: number }[], lowerBound?: number, upperBound?: number)\r\n        : { newCenters: number[], lowerBound: number, upperBound: number }\r\n    {\r\n        const vs: Variable[] = spans.map(s => new Variable(s.desiredCenter));\r\n        const cs: Constraint[] = [];\r\n        const n = spans.length;\r\n        for (var i = 0; i < n - 1; i++) {\r\n            const left = spans[i], right = spans[i + 1];\r\n            cs.push(new Constraint(vs[i], vs[i + 1], (left.size + right.size) / 2));\r\n        }\r\n        const leftMost = vs[0],\r\n            rightMost = vs[n - 1],\r\n            leftMostSize = spans[0].size / 2,\r\n            rightMostSize = spans[n - 1].size / 2;\r\n        let vLower: Variable = null, vUpper: Variable = null;\r\n        if (lowerBound) {\r\n            vLower = new Variable(lowerBound, leftMost.weight * 1000);\r\n            vs.push(vLower);\r\n            cs.push(new Constraint(vLower, leftMost, leftMostSize));\r\n        }\r\n        if (upperBound) {\r\n            vUpper = new Variable(upperBound, rightMost.weight * 1000);\r\n            vs.push(vUpper);\r\n            cs.push(new Constraint(rightMost, vUpper, rightMostSize));\r\n        }\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        return {\r\n            newCenters: vs.slice(0, spans.length).map(v => v.position()),\r\n            lowerBound: vLower ? vLower.position() : leftMost.position() - leftMostSize,\r\n            upperBound: vUpper ? vUpper.position() : rightMost.position() + rightMostSize\r\n        };\r\n    }\r\n","const pkg = require('../package.json')\n\nexport const version = pkg.version\nexport const name = pkg.name\n","import {LinkAccessor} from './linklengths'\r\n\r\nexport interface LinkTypeAccessor<Link> extends LinkAccessor<Link> {\r\n        // return a unique identifier for the type of the link\r\n        getType(l: Link): number;\r\n    }\r\n\r\n    export class PowerEdge {\r\n        constructor(\r\n            public source: any,\r\n            public target: any,\r\n            public type: number) { }\r\n    }\r\n\r\n    export class Configuration<Link> {\r\n        // canonical list of modules.\r\n        // Initialized to a module for each leaf node, such that the ids and indexes of the module in the array match the indexes of the nodes in links\r\n        // Modules created through merges are appended to the end of this.\r\n        modules: Module[];\r\n        // top level modules and candidates for merges\r\n        roots: ModuleSet[];\r\n        // remaining edge count\r\n        R: number;\r\n        constructor(n: number, edges: Link[], private linkAccessor: LinkTypeAccessor<Link>, rootGroup?: any[]) {\r\n            this.modules = new Array(n);\r\n            this.roots = [];\r\n            if (rootGroup) {\r\n                this.initModulesFromGroup(rootGroup);\r\n            } else {\r\n                this.roots.push(new ModuleSet());\r\n                for (var i = 0; i < n; ++i)\r\n                    this.roots[0].add(this.modules[i] = new Module(i));\r\n            }\r\n            this.R = edges.length;\r\n            edges.forEach(e => {\r\n                var s = this.modules[linkAccessor.getSourceIndex(e)],\r\n                    t = this.modules[linkAccessor.getTargetIndex(e)],\r\n                    type = linkAccessor.getType(e);\r\n                s.outgoing.add(type, t);\r\n                t.incoming.add(type, s);\r\n            });\r\n        }\r\n\r\n        private initModulesFromGroup(group): ModuleSet {\r\n            var moduleSet = new ModuleSet();\r\n            this.roots.push(moduleSet);\r\n            for (var i = 0; i < group.leaves.length; ++i) {\r\n                var node = group.leaves[i];\r\n                var module = new Module(node.id);\r\n                this.modules[node.id] = module;\r\n                moduleSet.add(module);\r\n            }\r\n            if (group.groups) {\r\n                for (var j = 0; j < group.groups.length; ++j) {\r\n                    var child = group.groups[j];\r\n                    // Propagate group properties (like padding, stiffness, ...) as module definition so that the generated power graph group will inherit it\r\n                    var definition = {};\r\n                    for (var prop in child)\r\n                        if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop))\r\n                            definition[prop] = child[prop];\r\n                    // Use negative module id to avoid clashes between predefined and generated modules\r\n                    moduleSet.add(new Module(-1-j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\r\n                }\r\n            }\r\n            return moduleSet;\r\n         }\r\n\r\n        // merge modules a and b keeping track of their power edges and removing the from roots\r\n        merge(a: Module, b: Module, k: number = 0): Module {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            var children = new ModuleSet();\r\n            children.add(a);\r\n            children.add(b);\r\n            var m = new Module(this.modules.length, outInt, inInt, children);\r\n            this.modules.push(m);\r\n            var update = (s: LinkSets, i: string, o: string) => {\r\n                s.forAll((ms, linktype) => {\r\n                    ms.forAll(n => {\r\n                        var nls = <LinkSets>n[i];\r\n                        nls.add(linktype, m);\r\n                        nls.remove(linktype, a);\r\n                        nls.remove(linktype, b);\r\n                        (<LinkSets>a[o]).remove(linktype, n);\r\n                        (<LinkSets>b[o]).remove(linktype, n);\r\n                    });\r\n                });\r\n            };\r\n            update(outInt, \"incoming\", \"outgoing\");\r\n            update(inInt, \"outgoing\", \"incoming\");\r\n            this.R -= inInt.count() + outInt.count();\r\n            this.roots[k].remove(a);\r\n            this.roots[k].remove(b);\r\n            this.roots[k].add(m);\r\n            return m;\r\n        }\r\n\r\n        private rootMerges(k: number = 0): {\r\n            id: number;\r\n            nEdges: number;\r\n            a: Module;\r\n            b: Module;\r\n        }[] {\r\n            var rs = this.roots[k].modules();\r\n            var n = rs.length;\r\n            var merges = new Array(n * (n - 1));\r\n            var ctr = 0;\r\n            for (var i = 0, i_ = n - 1; i < i_; ++i) {\r\n                for (var j = i+1; j < n; ++j) {\r\n                    var a = rs[i], b = rs[j];\r\n                    merges[ctr] = { id: ctr, nEdges: this.nEdges(a, b), a: a, b: b };\r\n                    ctr++;\r\n                }\r\n            }\r\n            return merges;\r\n        }\r\n\r\n        greedyMerge(): boolean {\r\n            for (var i = 0; i < this.roots.length; ++i) {\r\n                // Handle single nested module case\r\n                if (this.roots[i].modules().length < 2) continue;\r\n\r\n                // find the merge that allows for the most edges to be removed.  secondary ordering based on arbitrary id (for predictability)\r\n                var ms = this.rootMerges(i).sort((a, b) => a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges);\r\n                var m = ms[0];\r\n                if (m.nEdges >= this.R) continue;\r\n                this.merge(m.a, m.b, i);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        private nEdges(a: Module, b: Module): number {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            return this.R - inInt.count() - outInt.count();\r\n        }\r\n\r\n        getGroupHierarchy(retargetedEdges: PowerEdge[]): any[]{\r\n            var groups = [];\r\n            var root = {};\r\n            toGroups(this.roots[0], root, groups);\r\n            var es = this.allEdges();\r\n            es.forEach(e => {\r\n                var a = this.modules[e.source];\r\n                var b = this.modules[e.target];\r\n                retargetedEdges.push(new PowerEdge(\r\n                    typeof a.gid === \"undefined\" ? e.source : groups[a.gid],\r\n                    typeof b.gid === \"undefined\" ? e.target : groups[b.gid],\r\n                    e.type\r\n                ));\r\n            });\r\n            return groups;\r\n        }\r\n\r\n        allEdges(): PowerEdge[] {\r\n            var es = [];\r\n            Configuration.getEdges(this.roots[0], es);\r\n            return es;\r\n        }\r\n\r\n        static getEdges(modules: ModuleSet, es: PowerEdge[]) {\r\n            modules.forAll(m => {\r\n                m.getEdges(es);\r\n                Configuration.getEdges(m.children, es);\r\n            });\r\n        }\r\n    }\r\n\r\n    function toGroups(modules: ModuleSet, group, groups) {\r\n        modules.forAll(m => {\r\n            if (m.isLeaf()) {\r\n                if (!group.leaves) group.leaves = [];\r\n                group.leaves.push(m.id);\r\n            } else {\r\n                var g = group;\r\n                m.gid = groups.length;\r\n                if (!m.isIsland() || m.isPredefined()) {\r\n                    g = { id: m.gid };\r\n                    if (m.isPredefined())\r\n                        // Apply original group properties\r\n                        for (var prop in m.definition)\r\n                            g[prop] = m.definition[prop];\r\n                    if (!group.groups) group.groups = [];\r\n                    group.groups.push(m.gid);\r\n                    groups.push(g);\r\n                }\r\n                toGroups(m.children, g, groups);\r\n            }\r\n        });\r\n    }\r\n\r\n    export class Module {\r\n        gid: number;\r\n\r\n        constructor(\r\n            public id: number,\r\n            public outgoing: LinkSets = new LinkSets(),\r\n            public incoming: LinkSets = new LinkSets(),\r\n            public children: ModuleSet = new ModuleSet(),\r\n            public definition?: any) { }\r\n\r\n        getEdges(es: PowerEdge[]) {\r\n            this.outgoing.forAll((ms, edgetype) => {\r\n                ms.forAll(target => {\r\n                    es.push(new PowerEdge(this.id, target.id, edgetype));\r\n                });\r\n            });\r\n        }\r\n\r\n        isLeaf() {\r\n            return this.children.count() === 0;\r\n        }\r\n\r\n        isIsland() {\r\n            return this.outgoing.count() === 0 && this.incoming.count() === 0;\r\n        }\r\n\r\n        isPredefined(): boolean {\r\n            return typeof this.definition !== \"undefined\";\r\n        }\r\n    }\r\n\r\n    function intersection(m: any, n: any): any {\r\n        var i = {};\r\n        for (var v in m) if (v in n) i[v] = m[v];\r\n        return i;\r\n    }\r\n\r\n    export class ModuleSet {\r\n        table: any = {};\r\n        count() {\r\n            return Object.keys(this.table).length;\r\n        }\r\n        intersection(other: ModuleSet): ModuleSet {\r\n            var result = new ModuleSet();\r\n            result.table = intersection(this.table, other.table);\r\n            return result;\r\n        }\r\n        intersectionCount(other: ModuleSet): number {\r\n            return this.intersection(other).count();\r\n        }\r\n        contains(id: number): boolean {\r\n            return id in this.table;\r\n        }\r\n        add(m: Module): void {\r\n            this.table[m.id] = m;\r\n        }\r\n        remove(m: Module): void {\r\n            delete this.table[m.id];\r\n        }\r\n        forAll(f: (m: Module) => void) {\r\n            for (var mid in this.table) {\r\n                f(this.table[mid]);\r\n            }\r\n        }\r\n        modules(): Module[] {\r\n            var vs = [];\r\n            this.forAll(m => {\r\n                if (!m.isPredefined())\r\n                    vs.push(m);\r\n            });\r\n            return vs;\r\n        }\r\n    }\r\n\r\n    export class LinkSets {\r\n        sets: any = {};\r\n        n: number = 0;\r\n        count(): number {\r\n            return this.n;\r\n        }\r\n        contains(id: number) {\r\n            var result = false;\r\n            this.forAllModules(m => {\r\n                if (!result && m.id == id) {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n        add(linktype: number, m: Module) {\r\n            var s: ModuleSet = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\r\n            s.add(m);\r\n            ++this.n;\r\n        }\r\n        remove(linktype: number, m: Module) {\r\n            var ms = <ModuleSet>this.sets[linktype];\r\n            ms.remove(m);\r\n            if (ms.count() === 0) {\r\n                delete this.sets[linktype];\r\n            }\r\n            --this.n;\r\n        }\r\n        forAll(f: (ms: ModuleSet, linktype: number) => void) {\r\n            for (var linktype in this.sets) {\r\n                f(<ModuleSet>this.sets[linktype], Number(linktype));\r\n            }\r\n        }\r\n        forAllModules(f: (m: Module) => void) {\r\n            this.forAll((ms, lt) => ms.forAll(f));\r\n        }\r\n        intersection(other: LinkSets): LinkSets {\r\n            var result: LinkSets = new LinkSets();\r\n            this.forAll((ms, lt) => {\r\n                if (lt in other.sets) {\r\n                    var i = ms.intersection(other.sets[lt]),\r\n                        n = i.count();\r\n                    if (n > 0) {\r\n                        result.sets[lt] = i;\r\n                        result.n += n;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n\r\n    function intersectionCount(m: any, n: any): number {\r\n        return Object.keys(intersection(m, n)).length\r\n    }\r\n\r\n    export function getGroups<Link>(nodes: any[], links: Link[], la: LinkTypeAccessor<Link>, rootGroup?: any[]): { groups: any[]; powerEdges: PowerEdge[] } {\r\n        var n = nodes.length,\r\n            c = new Configuration(n, links, la, rootGroup);\r\n        while (c.greedyMerge());\r\n        var powerEdges: PowerEdge[] = [];\r\n        var g = c.getGroupHierarchy(powerEdges);\r\n        powerEdges.forEach(function (e) {\r\n            var f = (end) => {\r\n                var g = e[end];\r\n                if (typeof g == \"number\") e[end] = nodes[g];\r\n            };\r\n            f(\"source\");\r\n            f(\"target\");\r\n        });\r\n        return { groups: g, powerEdges: powerEdges };\r\n    }\r\n","    //Based on js_es:\r\n    //\r\n    //https://github.com/vadimg/js_bintrees\r\n    //\r\n    //Copyright (C) 2011 by Vadim Graboys\r\n    //\r\n    //Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    //of this software and associated documentation files (the \"Software\"), to deal\r\n    //in the Software without restriction, including without limitation the rights\r\n    //to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    //copies of the Software, and to permit persons to whom the Software is\r\n    //furnished to do so, subject to the following conditions:\r\n    //\r\n    //The above copyright notice and this permission notice shall be included in\r\n    //all copies or substantial portions of the Software.\r\n    //\r\n    //THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    //IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    //FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    //AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    //LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    //OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    //THE SOFTWARE.\r\n    export class TreeBase {\r\n        _root;\r\n        size;\r\n        _comparator;\r\n        // removes all nodes from the tree\r\n        clear() {\r\n            this._root = null;\r\n            this.size = 0;\r\n        };\r\n\r\n        // returns node data if found, null otherwise\r\n        find(data) {\r\n            var res = this._root;\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    return res.data;\r\n                }\r\n                else {\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // returns iterator to node if found, null otherwise\r\n        findIter = function (data) {\r\n            var res = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    iter._cursor = res;\r\n                    return iter;\r\n                }\r\n                else {\r\n                    iter._ancestors.push(res);\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately before (or at) the element\r\n        lowerBound(data) {\r\n            return this._bound(data, this._comparator);\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately after (or at) the element\r\n        upperBound(data) {\r\n            var cmp = this._comparator;\r\n\r\n            function reverse_cmp(a, b) {\r\n                return cmp(b, a);\r\n            }\r\n\r\n            return this._bound(data, reverse_cmp);\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        min() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.left !== null) {\r\n                res = res.left;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        max() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.right !== null) {\r\n                res = res.right;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns a null iterator\r\n        // call next() or prev() to point to an element\r\n        iterator(): Iterator {\r\n            return new Iterator(this);\r\n        };\r\n\r\n        // calls cb on each node's data, in order\r\n        each(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.next()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // calls cb on each node's data, in reverse order\r\n        reach(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.prev()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // used for lowerBound and upperBound\r\n        _bound(data, cmp) {\r\n            var cur = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (cur !== null) {\r\n                var c = this._comparator(data, cur.data);\r\n                if (c === 0) {\r\n                    iter._cursor = cur;\r\n                    return iter;\r\n                }\r\n                iter._ancestors.push(cur);\r\n                cur = cur.get_child(c > 0);\r\n            }\r\n\r\n            for (var i = iter._ancestors.length - 1; i >= 0; --i) {\r\n                cur = iter._ancestors[i];\r\n                if (cmp(data, cur.data) > 0) {\r\n                    iter._cursor = cur;\r\n                    iter._ancestors.length = i;\r\n                    return iter;\r\n                }\r\n            }\r\n\r\n            iter._ancestors.length = 0;\r\n            return iter;\r\n        };\r\n    }\r\n    export class Iterator {\r\n        _tree;\r\n        _ancestors;\r\n        _cursor;\r\n        constructor(tree) {\r\n            this._tree = tree;\r\n            this._ancestors = [];\r\n            this._cursor = null;\r\n        }\r\n\r\n        data() {\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns first node\r\n        // otherwise, returns next node\r\n        next() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._minNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.right === null) {\r\n                    // no greater node in subtree, go up to parent\r\n                    // if coming from a right child, continue up the stack\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.right === save);\r\n                }\r\n                else {\r\n                    // get the next node from the subtree\r\n                    this._ancestors.push(this._cursor);\r\n                    this._minNode(this._cursor.right);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns last node\r\n        // otherwise, returns previous node\r\n        prev() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._maxNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.left === null) {\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.left === save);\r\n                }\r\n                else {\r\n                    this._ancestors.push(this._cursor);\r\n                    this._maxNode(this._cursor.left);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        _minNode(start) {\r\n            while (start.left !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.left;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n\r\n        _maxNode(start) {\r\n            while (start.right !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.right;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n    }\r\n\r\n    class Node {\r\n        data;\r\n        left;\r\n        right;\r\n        red;\r\n        constructor(data) {\r\n            this.data = data;\r\n            this.left = null;\r\n            this.right = null;\r\n            this.red = true;\r\n        }\r\n\r\n        get_child(dir) {\r\n            return dir ? this.right : this.left;\r\n        };\r\n\r\n        set_child(dir, val) {\r\n            if (dir) {\r\n                this.right = val;\r\n            }\r\n            else {\r\n                this.left = val;\r\n            }\r\n        };\r\n    }\r\n\r\n    export class RBTree<T> extends TreeBase {\r\n\r\n        _root;\r\n        _comparator;\r\n        size;\r\n        constructor(comparator: (a: T, b: T) => number) {\r\n            super();\r\n            this._root = null;\r\n            this._comparator = comparator;\r\n            this.size = 0;\r\n        }\r\n\r\n        // returns true if inserted, false if duplicate\r\n        insert(data) {\r\n            var ret = false;\r\n\r\n            if (this._root === null) {\r\n                // empty tree\r\n                this._root = new Node(data);\r\n                ret = true;\r\n                this.size++;\r\n            }\r\n            else {\r\n                var head = new Node(undefined); // fake tree root\r\n\r\n                var dir = false;\r\n                var last = false;\r\n\r\n                // setup\r\n                var gp = null; // grandparent\r\n                var ggp = head; // grand-grand-parent\r\n                var p = null; // parent\r\n                var node = this._root;\r\n                ggp.right = this._root;\r\n\r\n                // search down\r\n                while (true) {\r\n                    if (node === null) {\r\n                        // insert new node at the bottom\r\n                        node = new Node(data);\r\n                        p.set_child(dir, node);\r\n                        ret = true;\r\n                        this.size++;\r\n                    }\r\n                    else if (RBTree.is_red(node.left) && RBTree.is_red(node.right)) {\r\n                        // color flip\r\n                        node.red = true;\r\n                        node.left.red = false;\r\n                        node.right.red = false;\r\n                    }\r\n\r\n                    // fix red violation\r\n                    if (RBTree.is_red(node) && RBTree.is_red(p)) {\r\n                        var dir2 = ggp.right === gp;\r\n\r\n                        if (node === p.get_child(last)) {\r\n                            ggp.set_child(dir2, RBTree.single_rotate(gp, !last));\r\n                        }\r\n                        else {\r\n                            ggp.set_child(dir2, RBTree.double_rotate(gp, !last));\r\n                        }\r\n                    }\r\n\r\n                    var cmp = this._comparator(node.data, data);\r\n\r\n                    // stop if found\r\n                    if (cmp === 0) {\r\n                        break;\r\n                    }\r\n\r\n                    last = dir;\r\n                    dir = cmp < 0;\r\n\r\n                    // update helpers\r\n                    if (gp !== null) {\r\n                        ggp = gp;\r\n                    }\r\n                    gp = p;\r\n                    p = node;\r\n                    node = node.get_child(dir);\r\n                }\r\n\r\n                // update root\r\n                this._root = head.right;\r\n            }\r\n\r\n            // make root black\r\n            this._root.red = false;\r\n\r\n            return ret;\r\n        };\r\n\r\n        // returns true if removed, false if not found\r\n        remove(data) {\r\n            if (this._root === null) {\r\n                return false;\r\n            }\r\n\r\n            var head = new Node(undefined); // fake tree root\r\n            var node = head;\r\n            node.right = this._root;\r\n            var p = null; // parent\r\n            var gp = null; // grand parent\r\n            var found = null; // found item\r\n            var dir = true;\r\n\r\n            while (node.get_child(dir) !== null) {\r\n                var last = dir;\r\n\r\n                // update helpers\r\n                gp = p;\r\n                p = node;\r\n                node = node.get_child(dir);\r\n\r\n                var cmp = this._comparator(data, node.data);\r\n\r\n                dir = cmp > 0;\r\n\r\n                // save found node\r\n                if (cmp === 0) {\r\n                    found = node;\r\n                }\r\n\r\n                // push the red node down\r\n                if (!RBTree.is_red(node) && !RBTree.is_red(node.get_child(dir))) {\r\n                    if (RBTree.is_red(node.get_child(!dir))) {\r\n                        var sr = RBTree.single_rotate(node, dir);\r\n                        p.set_child(last, sr);\r\n                        p = sr;\r\n                    }\r\n                    else if (!RBTree.is_red(node.get_child(!dir))) {\r\n                        var sibling = p.get_child(!last);\r\n                        if (sibling !== null) {\r\n                            if (!RBTree.is_red(sibling.get_child(!last)) && !RBTree.is_red(sibling.get_child(last))) {\r\n                                // color flip\r\n                                p.red = false;\r\n                                sibling.red = true;\r\n                                node.red = true;\r\n                            }\r\n                            else {\r\n                                var dir2 = gp.right === p;\r\n\r\n                                if (RBTree.is_red(sibling.get_child(last))) {\r\n                                    gp.set_child(dir2, RBTree.double_rotate(p, last));\r\n                                }\r\n                                else if (RBTree.is_red(sibling.get_child(!last))) {\r\n                                    gp.set_child(dir2, RBTree.single_rotate(p, last));\r\n                                }\r\n\r\n                                // ensure correct coloring\r\n                                var gpc = gp.get_child(dir2);\r\n                                gpc.red = true;\r\n                                node.red = true;\r\n                                gpc.left.red = false;\r\n                                gpc.right.red = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace and remove if found\r\n            if (found !== null) {\r\n                found.data = node.data;\r\n                p.set_child(p.right === node, node.get_child(node.left === null));\r\n                this.size--;\r\n            }\r\n\r\n            // update root and make it black\r\n            this._root = head.right;\r\n            if (this._root !== null) {\r\n                this._root.red = false;\r\n            }\r\n\r\n            return found !== null;\r\n        };\r\n\r\n        static is_red(node) {\r\n            return node !== null && node.red;\r\n        }\r\n\r\n        static single_rotate(root, dir) {\r\n            var save = root.get_child(!dir);\r\n\r\n            root.set_child(!dir, save.get_child(dir));\r\n            save.set_child(dir, root);\r\n\r\n            root.red = true;\r\n            save.red = false;\r\n\r\n            return save;\r\n        }\r\n\r\n        static double_rotate(root, dir) {\r\n            root.set_child(!dir, RBTree.single_rotate(root.get_child(!dir), !dir));\r\n            return RBTree.single_rotate(root, dir);\r\n        }\r\n    }\r\n","\r\nexport class PairingHeap<T> {\r\n    private subheaps : PairingHeap<T>[];\r\n    // from: https://gist.github.com/nervoussystem\r\n    //{elem:object, subheaps:[array of heaps]}\r\n    constructor(public elem: T) {\r\n        this.subheaps = [];\r\n    }\r\n\r\n    public toString(selector) : string {\r\n        var str = \"\", needComma = false;\r\n        for (var i = 0; i < this.subheaps.length; ++i) {\r\n            var subheap: PairingHeap<T> = this.subheaps[i];\r\n            if (!subheap.elem) {\r\n                needComma = false;\r\n                continue;\r\n            }\r\n            if (needComma) {\r\n                str = str + \",\";\r\n            }\r\n            str = str + subheap.toString(selector);\r\n            needComma = true;\r\n        }\r\n        if (str !== \"\") {\r\n            str = \"(\" + str + \")\";\r\n        }\r\n        return (this.elem ? selector(this.elem) : \"\") + str;\r\n    }\r\n\r\n    public forEach(f) {\r\n        if (!this.empty()) {\r\n            f(this.elem, this);\r\n            this.subheaps.forEach(s => s.forEach(f));\r\n        }\r\n    }\r\n\r\n    public count(): number {\r\n        return this.empty() ? 0 : 1 + this.subheaps.reduce((n: number, h: PairingHeap<T>) => {\r\n            return n + h.count();\r\n        }, 0);\r\n    }\r\n\r\n    public min() : T {\r\n        return this.elem;\r\n    }\r\n\r\n    public empty() : boolean {\r\n        return this.elem == null;\r\n    }\r\n\r\n    public contains(h: PairingHeap<T>): boolean {\r\n        if (this === h) return true;\r\n        for (var i = 0; i < this.subheaps.length; i++) {\r\n            if (this.subheaps[i].contains(h)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isHeap(lessThan: (a: T, b: T) => boolean): boolean {\r\n        return this.subheaps.every(h=> lessThan(this.elem, h.elem) && h.isHeap(lessThan));\r\n    }\r\n\r\n    public insert(obj : T, lessThan) : PairingHeap<T> {\r\n        return this.merge(new PairingHeap<T>(obj), lessThan);\r\n    }\r\n\r\n    public merge(heap2: PairingHeap<T>, lessThan): PairingHeap<T> {\r\n        if (this.empty()) return heap2;\r\n        else if (heap2.empty()) return this;\r\n        else if (lessThan(this.elem, heap2.elem)) {\r\n            this.subheaps.push(heap2);\r\n            return this;\r\n        } else {\r\n            heap2.subheaps.push(this);\r\n            return heap2;\r\n        }\r\n    }\r\n\r\n    public removeMin(lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        if (this.empty()) return null;\r\n        else return this.mergePairs(lessThan);\r\n    }\r\n\r\n    public mergePairs(lessThan: (a: T, b: T) => boolean) : PairingHeap<T> {\r\n        if (this.subheaps.length == 0) return new PairingHeap<T>(null);\r\n        else if (this.subheaps.length == 1) { return this.subheaps[0]; }\r\n        else {\r\n            var firstPair = this.subheaps.pop().merge(this.subheaps.pop(), lessThan);\r\n            var remaining = this.mergePairs(lessThan);\r\n            return firstPair.merge(remaining, lessThan);\r\n        }\r\n    }\r\n    public decreaseKey(subheap: PairingHeap<T>, newValue: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void, lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        var newHeap = subheap.removeMin(lessThan);\r\n        //reassign subheap values to preserve tree\r\n        subheap.elem = newHeap.elem;\r\n        subheap.subheaps = newHeap.subheaps;\r\n        if (setHeapNode !== null && newHeap.elem !== null) {\r\n            setHeapNode(subheap.elem, subheap);\r\n        }\r\n        var pairingNode = new PairingHeap(newValue);\r\n        if (setHeapNode !== null) {\r\n            setHeapNode(newValue, pairingNode);\r\n        }\r\n        return this.merge(pairingNode, lessThan);\r\n    }\r\n}\r\n\r\n/**\r\n * @class PriorityQueue a min priority queue backed by a pairing heap\r\n */\r\nexport class PriorityQueue<T> {\r\n    private root : PairingHeap<T>;\r\n    constructor(private lessThan: (a: T, b: T) => boolean) { }\r\n    /**\r\n     * @method top\r\n     * @return the top element (the min element as defined by lessThan)\r\n     */\r\n    public top() : T {\r\n        if (this.empty()) { return null; }\r\n        return this.root.elem;\r\n    }\r\n    /**\r\n     * @method push\r\n     * put things on the heap\r\n     */\r\n    public push(...args: T[]): PairingHeap<T> {\r\n        var pairingNode;\r\n        for (var i = 0, arg; arg=args[i]; ++i) {\r\n            pairingNode = new PairingHeap(arg);\r\n            this.root = this.empty() ?\r\n                pairingNode : this.root.merge(pairingNode, this.lessThan);\r\n        }\r\n        return pairingNode;\r\n    }\r\n    /**\r\n     * @method empty\r\n     * @return true if no more elements in queue\r\n     */\r\n    public empty(): boolean {\r\n        return !this.root || !this.root.elem;\r\n    }\r\n    /**\r\n     * @method isHeap check heap condition (for testing)\r\n     * @return true if queue is in valid state\r\n     */\r\n    public isHeap(): boolean {\r\n        return this.root.isHeap(this.lessThan);\r\n    }\r\n    /**\r\n     * @method forEach apply f to each element of the queue\r\n     * @param f function to apply\r\n     */\r\n    public forEach(f) {\r\n        this.root.forEach(f);\r\n    }\r\n    /**\r\n     * @method pop remove and return the min element from the queue\r\n     */\r\n    public pop(): T {\r\n        if (this.empty()) {\r\n            return null;\r\n        }\r\n        var obj = this.root.min();\r\n        this.root = this.root.removeMin(this.lessThan);\r\n        return obj;\r\n    }\r\n    /**\r\n     * @method reduceKey reduce the key value of the specified heap node\r\n     */\r\n    public reduceKey(heapNode: PairingHeap<T>, newKey: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void = null): void {\r\n        this.root = this.root.decreaseKey(heapNode, newKey, setHeapNode, this.lessThan);\r\n    }\r\n    public toString(selector) {\r\n        return this.root.toString(selector);\r\n    }\r\n    /**\r\n     * @method count\r\n     * @return number of elements in queue\r\n     */\r\n    public count() {\r\n        return this.root.count();\r\n    }\r\n}\r\n","import {Rectangle} from './rectangle'\r\n    export class Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    export class LineSegment {\r\n        constructor(public x1: number, public y1: number, public x2: number, public y2: number) { }\r\n    }\r\n\r\n    export class PolyPoint extends Point {\r\n        polyIndex: number;\r\n    }\r\n\r\n    /** tests if a point is Left|On|Right of an infinite line.\r\n     * @param points P0, P1, and P2\r\n     * @return >0 for P2 left of the line through P0 and P1\r\n     *            =0 for P2 on the line\r\n     *            <0 for P2 right of the line\r\n     */\r\n    export function isLeft(P0: Point, P1: Point, P2: Point): number {\r\n        return (P1.x - P0.x) * (P2.y - P0.y) - (P2.x - P0.x) * (P1.y - P0.y);\r\n    }\r\n\r\n    function above(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) > 0;\r\n    }\r\n\r\n    function below(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) < 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * returns the convex hull of a set of points using Andrew's monotone chain algorithm\r\n     * see: http://geomalgorithms.com/a10-_hull-1.html#Monotone%20Chain\r\n     * @param S array of points\r\n     * @return the convex hull as an array of points\r\n     */\r\n    export function ConvexHull(S: Point[]): Point[] {\r\n        var P = S.slice(0).sort((a, b) => a.x !== b.x ? b.x - a.x : b.y - a.y);\r\n        var n = S.length, i;\r\n        var minmin = 0;\r\n        var xmin = P[0].x;\r\n        for (i = 1; i < n; ++i) {\r\n            if (P[i].x !== xmin) break;\r\n        }\r\n        var minmax = i - 1;\r\n        var H: Point[] = [];\r\n        H.push(P[minmin]); // push minmin point onto stack\r\n        if (minmax === n - 1) { // degenerate case: all x-coords == xmin\r\n            if (P[minmax].y !== P[minmin].y) // a  nontrivial segment\r\n                H.push(P[minmax]);\r\n        } else {\r\n            // Get the indices of points with max x-coord and min|max y-coord\r\n            var maxmin, maxmax = n - 1;\r\n            var xmax = P[n - 1].x;\r\n            for (i = n - 2; i >= 0; i--)\r\n                if (P[i].x !== xmax) break;\r\n            maxmin = i + 1;\r\n\r\n            // Compute the lower hull on the stack H\r\n            i = minmax;\r\n            while (++i <= maxmin) {\r\n                // the lower line joins P[minmin]  with P[maxmin]\r\n                if (isLeft(P[minmin], P[maxmin], P[i]) >= 0 && i < maxmin)\r\n                    continue; // ignore P[i] above or on the lower line\r\n\r\n                while (H.length > 1) // there are at least 2 points on the stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]);\r\n            }\r\n\r\n            // Next, compute the upper hull on the stack H above the bottom hull\r\n            if (maxmax != maxmin) // if  distinct xmax points\r\n                H.push(P[maxmax]); // push maxmax point onto stack\r\n            var bot = H.length; // the bottom point of the upper hull stack\r\n            i = maxmin;\r\n            while (--i >= minmax) {\r\n                // the upper line joins P[maxmax]  with P[minmax]\r\n                if (isLeft(P[maxmax], P[minmax], P[i]) >= 0 && i > minmax)\r\n                    continue; // ignore P[i] below or on the upper line\r\n\r\n                while (H.length > bot) // at least 2 points on the upper stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]); // push P[i] onto stack\r\n            }\r\n        }\r\n        return H;\r\n    }\r\n\r\n    // apply f to the points in P in clockwise order around the point p\r\n    export function clockwiseRadialSweep(p: Point, P: Point[], f: (p: Point) => void) {\r\n        P.slice(0).sort(\r\n            (a, b) => Math.atan2(a.y - p.y, a.x - p.x) - Math.atan2(b.y - p.y, b.x - p.x)\r\n            ).forEach(f);\r\n    }\r\n\r\n    function nextPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === ps.length - 1) return ps[0];\r\n        return ps[p.polyIndex + 1];\r\n    }\r\n\r\n    function prevPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === 0) return ps[ps.length - 1];\r\n        return ps[p.polyIndex - 1];\r\n    }\r\n\r\n    // tangent_PointPolyC(): fast binary search for tangents to a convex polygon\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon\r\n    //    Output: rtan = index of rightmost tangent point V[rtan]\r\n    //            ltan = index of leftmost tangent point V[ltan]\r\n    function tangent_PointPolyC(P: Point, V: Point[]): { rtan: number; ltan: number } {\r\n        // Rtangent_PointPolyC and Ltangent_PointPolyC require polygon to be\r\n        // \"closed\" with the first vertex duplicated at end, so V[n-1] = V[0].\r\n        let Vclosed = V.slice(0);  // Copy V\r\n        Vclosed.push(V[0]);        // Add V[0] at end\r\n\r\n        return { rtan: Rtangent_PointPolyC(P, Vclosed), ltan: Ltangent_PointPolyC(P, Vclosed) };\r\n    }\r\n\r\n\r\n    // Rtangent_PointPolyC(): binary search for convex polygon right tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of rightmost tangent point V[i]\r\n    function Rtangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;            // indices for edge chain endpoints\r\n        var upA: boolean, dnC: boolean;           // test for up direction of edges a and c\r\n\r\n        // rightmost tangent = maximum for the isLeft() ordering\r\n        // test if V[0] is a local maximum\r\n        if (below(P, V[1], V[0]) && !above(P, V[n - 1], V[0]))\r\n            return 0;               // V[0] is the maximum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n]=V[0]\r\n            if (b - a === 1)\r\n                if (above(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (dnC && !above(P, V[c - 1], V[c]))\r\n                return c;          // V[c] is the maximum tangent point\r\n\r\n            // no max yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            upA = above(P, V[a + 1], V[a]);\r\n            if (upA) {                       // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Ltangent_PointPolyC(): binary search for convex polygon left tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of leftmost tangent point V[i]\r\n    function Ltangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;             // indices for edge chain endpoints\r\n        var dnA: boolean, dnC: boolean;           // test for down direction of edges a and c\r\n\r\n        // leftmost tangent = minimum for the isLeft() ordering\r\n        // test if V[0] is a local minimum\r\n        if (above(P, V[n - 1], V[0]) && !below(P, V[1], V[0]))\r\n            return 0;               // V[0] is the minimum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n] = V[0]\r\n            if (b - a === 1)\r\n                if (below(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (above(P, V[c - 1], V[c]) && !dnC)\r\n                return c;          // V[c] is the minimum tangent point\r\n\r\n            // no min yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            dnA = below(P, V[a + 1], V[a]);\r\n            if (dnA) {                       // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // RLtangent_PolyPolyC(): get the RL tangent between two convex polygons\r\n    //    Input:  m = number of vertices in polygon 1\r\n    //            V = array of vertices for convex polygon 1 with V[m]=V[0]\r\n    //            n = number of vertices in polygon 2\r\n    //            W = array of vertices for convex polygon 2 with W[n]=W[0]\r\n    //    Output: *t1 = index of tangent point V[t1] for polygon 1\r\n    //            *t2 = index of tangent point W[t2] for polygon 2\r\n    export function tangent_PolyPolyC(V: Point[], W: Point[], t1: (a: Point, b: Point[]) => number, t2: (a: Point, b: Point[]) => number, cmp1: (a: Point, b: Point, c: Point) => boolean, cmp2: (a: Point, b: Point, c: Point) => boolean): { t1: number; t2: number } {\r\n        var ix1: number, ix2: number;      // search indices for polygons 1 and 2\r\n\r\n        // first get the initial vertex on each polygon\r\n        ix1 = t1(W[0], V);   // right tangent from W[0] to V\r\n        ix2 = t2(V[ix1], W); // left tangent from V[ix1] to W\r\n\r\n        // ping-pong linear search until it stabilizes\r\n        var done = false;                    // flag when done\r\n        while (!done) {\r\n            done = true;                     // assume done until...\r\n            while (true) {\r\n                if (ix1 === V.length - 1) ix1 = 0;\r\n                if (cmp1(W[ix2], V[ix1], V[ix1 + 1])) break;\r\n                ++ix1;                       // get Rtangent from W[ix2] to V\r\n            }\r\n            while (true) {\r\n                if (ix2 === 0) ix2 = W.length - 1;\r\n                if (cmp2(V[ix1], W[ix2], W[ix2 - 1])) break;\r\n                --ix2;                       // get Ltangent from V[ix1] to W\r\n                done = false;                // not done if had to adjust this\r\n            }\r\n        }\r\n        return { t1: ix1, t2: ix2 };\r\n    }\r\n\r\n    export function LRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        var rl = RLtangent_PolyPolyC(W, V);\r\n        return { t1: rl.t2, t2: rl.t1 };\r\n    }\r\n\r\n    export function RLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Ltangent_PointPolyC, above, below);\r\n    }\r\n\r\n    export function LLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Ltangent_PointPolyC, Ltangent_PointPolyC, below, below);\r\n    }\r\n\r\n    export function RRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Rtangent_PointPolyC, above, above);\r\n    }\r\n\r\n    export class BiTangent {\r\n        constructor(public t1: number, public t2: number) { }\r\n    }\r\n\r\n    export class BiTangents {\r\n        rl: BiTangent;\r\n        lr: BiTangent;\r\n        ll: BiTangent;\r\n        rr: BiTangent;\r\n    }\r\n\r\n    export class TVGPoint extends Point {\r\n        vv: VisibilityVertex;\r\n    }\r\n\r\n    export class VisibilityVertex {\r\n        constructor(\r\n            public id: number,\r\n            public polyid: number,\r\n            public polyvertid: number,\r\n            public p: TVGPoint)\r\n        {\r\n            p.vv = this;\r\n        }\r\n    }\r\n\r\n    export class VisibilityEdge {\r\n        constructor(\r\n            public source: VisibilityVertex,\r\n            public target: VisibilityVertex) { }\r\n        length(): number {\r\n            var dx = this.source.p.x - this.target.p.x;\r\n            var dy = this.source.p.y - this.target.p.y;\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n    }\r\n\r\n    export class TangentVisibilityGraph {\r\n        V: VisibilityVertex[] = [];\r\n        E: VisibilityEdge[] = [];\r\n        constructor(public P: TVGPoint[][], g0?: { V: VisibilityVertex[]; E: VisibilityEdge[] }) {\r\n            if (!g0) {\r\n                var n = P.length;\r\n                // For each node...\r\n                for (var i = 0; i < n; i++) {\r\n                    var p = P[i];\r\n                    // For each node vertex.\r\n                    for (var j = 0; j < p.length; ++j) {\r\n                        var pj = p[j],\r\n                            vv = new VisibilityVertex(this.V.length, i, j, pj);\r\n                        this.V.push(vv);\r\n                        // For the every iteration but the first, generate an\r\n                        // edge from the previous visibility vertex to the\r\n                        // current one.\r\n                        if (j > 0) this.E.push(new VisibilityEdge(p[j - 1].vv, vv));\r\n                    }\r\n                    // Add a visibility edge from the first vertex to the last.\r\n                    if (p.length > 1) this.E.push(new VisibilityEdge(p[0].vv, p[p.length - 1].vv));\r\n                }\r\n                for (var i = 0; i < n - 1; i++) {\r\n                    var Pi = P[i];\r\n                    for (var j = i + 1; j < n; j++) {\r\n                        var Pj = P[j],\r\n                            t = tangents(Pi, Pj);\r\n                        for (var q in t) {\r\n                            var c = t[q],\r\n                                source = Pi[c.t1], target = Pj[c.t2];\r\n                            this.addEdgeIfVisible(source, target, i, j);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.V = g0.V.slice(0);\r\n                this.E = g0.E.slice(0);\r\n            }\r\n        }\r\n        addEdgeIfVisible(u: TVGPoint, v: TVGPoint, i1: number, i2: number) {\r\n            if (!this.intersectsPolys(new LineSegment(u.x, u.y, v.x, v.y), i1, i2)) {\r\n                this.E.push(new VisibilityEdge(u.vv, v.vv));\r\n            }\r\n        }\r\n        addPoint(p: TVGPoint, i1: number): VisibilityVertex {\r\n            var n = this.P.length;\r\n            this.V.push(new VisibilityVertex(this.V.length, n, 0, p));\r\n            for (var i = 0; i < n; ++i) {\r\n                if (i === i1) continue;\r\n                var poly = this.P[i],\r\n                    t = tangent_PointPolyC(p, poly);\r\n                this.addEdgeIfVisible(p, poly[t.ltan], i1, i);\r\n                this.addEdgeIfVisible(p, poly[t.rtan], i1, i);\r\n            }\r\n            return p.vv;\r\n        }\r\n        private intersectsPolys(l: LineSegment, i1: number, i2: number): boolean {\r\n            for (var i = 0, n = this.P.length; i < n; ++i) {\r\n                if (i != i1 && i != i2 && intersects(l, this.P[i]).length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function intersects(l: LineSegment, P: Point[]) {\r\n        var ints = [];\r\n        for (var i = 1, n = P.length; i < n; ++i) {\r\n            var int = Rectangle.lineIntersection(\r\n                l.x1, l.y1,\r\n                l.x2, l.y2,\r\n                P[i - 1].x, P[i - 1].y,\r\n                P[i].x, P[i].y\r\n                );\r\n            if (int) ints.push(int);\r\n        }\r\n        return ints;\r\n    }\r\n\r\n    export function tangents(V: Point[], W: Point[]): BiTangents\r\n    {\r\n        var m = V.length - 1, n = W.length - 1;\r\n        var bt = new BiTangents();\r\n        for (var i = 0; i < m; ++i) {\r\n            for (var j = 0; j < n; ++j) {\r\n                var v1 = V[i == 0 ? m - 1 : i - 1];\r\n                var v2 = V[i];\r\n                var v3 = V[i + 1];\r\n                var w1 = W[j == 0 ? n - 1 : j - 1];\r\n                var w2 = W[j];\r\n                var w3 = W[j + 1];\r\n                var v1v2w2 = isLeft(v1, v2, w2);\r\n                var v2w1w2 = isLeft(v2, w1, w2);\r\n                var v2w2w3 = isLeft(v2, w2, w3);\r\n                var w1w2v2 = isLeft(w1, w2, v2);\r\n                var w2v1v2 = isLeft(w2, v1, v2);\r\n                var w2v2v3 = isLeft(w2, v2, v3);\r\n                if (v1v2w2 >= 0 && v2w1w2 >= 0 && v2w2w3 < 0\r\n                    && w1w2v2 >= 0 && w2v1v2 >= 0 && w2v2v3 < 0) {\r\n                        bt.ll = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 <= 0 && v2w2w3 > 0\r\n                    && w1w2v2 <= 0 && w2v1v2 <= 0 && w2v2v3 > 0) {\r\n                        bt.rr = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 > 0 && v2w2w3 <= 0\r\n                    && w1w2v2 >= 0 && w2v1v2 < 0 && w2v2v3 >= 0) {\r\n                        bt.rl = new BiTangent(i, j);\r\n                } else if (v1v2w2 >= 0 && v2w1w2 < 0 && v2w2w3 >= 0\r\n                    && w1w2v2 <= 0 && w2v1v2 > 0 && w2v2v3 <= 0) {\r\n                        bt.lr = new BiTangent(i, j);\r\n                }\r\n            }\r\n        }\r\n        return bt;\r\n    }\r\n\r\n    function isPointInsidePoly(p: Point, poly: Point[]): boolean {\r\n        for (var i = 1, n = poly.length; i < n; ++i)\r\n            if (below(poly[i - 1], poly[i], p)) return false;\r\n        return true;\r\n    }\r\n\r\n    function isAnyPInQ(p: Point[], q: Point[]): boolean {\r\n        return !p.every(v => !isPointInsidePoly(v, q));\r\n    }\r\n\r\n    export function polysOverlap(p: Point[], q: Point[]): boolean {\r\n        if (isAnyPInQ(p, q)) return true;\r\n        if (isAnyPInQ(q, p)) return true;\r\n        for (var i = 1, n = p.length; i < n; ++i) {\r\n            var v = p[i], u = p[i - 1];\r\n            if (intersects(new LineSegment(u.x, u.y, v.x, v.y), q).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n","    var packingOptions = {\r\n        PADDING: 10,\r\n        GOLDEN_SECTION: (1 + Math.sqrt(5)) / 2,\r\n        FLOAT_EPSILON: 0.0001,\r\n        MAX_INERATIONS: 100\r\n    };\r\n\r\n    // assign x, y to nodes while using box packing algorithm for disconnected graphs\r\n    export function applyPacking(graphs:Array<any>, w, h, node_size, desired_ratio = 1) {\r\n\r\n        var init_x = 0,\r\n            init_y = 0,\r\n\r\n            svg_width = w,\r\n            svg_height = h,\r\n\r\n            desired_ratio = typeof desired_ratio !== 'undefined' ? desired_ratio : 1,\r\n            node_size = typeof node_size !== 'undefined' ? node_size : 0,\r\n\r\n            real_width = 0,\r\n            real_height = 0,\r\n            min_width = 0,\r\n\r\n            global_bottom = 0,\r\n            line = [];\r\n\r\n        if (graphs.length == 0)\r\n            return;\r\n\r\n        /// that would take care of single nodes problem\r\n        // graphs.forEach(function (g) {\r\n        //     if (g.array.length == 1) {\r\n        //         g.array[0].x = 0;\r\n        //         g.array[0].y = 0;\r\n        //     }\r\n        // });\r\n\r\n        calculate_bb(graphs);\r\n        apply(graphs, desired_ratio);\r\n        put_nodes_to_right_positions(graphs);\r\n\r\n        // get bounding boxes for all separate graphs\r\n        function calculate_bb(graphs) {\r\n\r\n            graphs.forEach(function (g) {\r\n                calculate_single_bb(g)\r\n            });\r\n\r\n            function calculate_single_bb(graph) {\r\n                var min_x = Number.MAX_VALUE, min_y = Number.MAX_VALUE,\r\n                    max_x = 0, max_y = 0;\r\n\r\n                graph.array.forEach(function (v) {\r\n                    var w = typeof v.width !== 'undefined' ? v.width : node_size;\r\n                    var h = typeof v.height !== 'undefined' ? v.height : node_size;\r\n                    w /= 2;\r\n                    h /= 2;\r\n                    max_x = Math.max(v.x + w, max_x);\r\n                    min_x = Math.min(v.x - w, min_x);\r\n                    max_y = Math.max(v.y + h, max_y);\r\n                    min_y = Math.min(v.y - h, min_y);\r\n                });\r\n\r\n                graph.width = max_x - min_x;\r\n                graph.height = max_y - min_y;\r\n            }\r\n        }\r\n\r\n        //function plot(data, left, right, opt_x, opt_y) {\r\n        //    // plot the cost function\r\n        //    var plot_svg = d3.select(\"body\").append(\"svg\")\r\n        //        .attr(\"width\", function () { return 2 * (right - left); })\r\n        //        .attr(\"height\", 200);\r\n\r\n\r\n        //    var x = d3.time.scale().range([0, 2 * (right - left)]);\r\n\r\n        //    var xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\r\n        //    plot_svg.append(\"g\").attr(\"class\", \"x axis\")\r\n        //        .attr(\"transform\", \"translate(0, 199)\")\r\n        //        .call(xAxis);\r\n\r\n        //    var lastX = 0;\r\n        //    var lastY = 0;\r\n        //    var value = 0;\r\n        //    for (var r = left; r < right; r += 1) {\r\n        //        value = step(data, r);\r\n        //        // value = 1;\r\n\r\n        //        plot_svg.append(\"line\").attr(\"x1\", 2 * (lastX - left))\r\n        //            .attr(\"y1\", 200 - 30 * lastY)\r\n        //            .attr(\"x2\", 2 * r - 2 * left)\r\n        //            .attr(\"y2\", 200 - 30 * value)\r\n        //            .style(\"stroke\", \"rgb(6,120,155)\");\r\n\r\n        //        lastX = r;\r\n        //        lastY = value;\r\n        //    }\r\n\r\n        //    plot_svg.append(\"circle\").attr(\"cx\", 2 * opt_x - 2 * left).attr(\"cy\", 200 - 30 * opt_y)\r\n        //        .attr(\"r\", 5).style('fill', \"rgba(0,0,0,0.5)\");\r\n\r\n        //}\r\n\r\n        // actual assigning of position to nodes\r\n        function put_nodes_to_right_positions(graphs) {\r\n            graphs.forEach(function (g) {\r\n                // calculate current graph center:\r\n                var center = { x: 0, y: 0 };\r\n\r\n                g.array.forEach(function (node) {\r\n                    center.x += node.x;\r\n                    center.y += node.y;\r\n                });\r\n\r\n                center.x /= g.array.length;\r\n                center.y /= g.array.length;\r\n\r\n                // calculate current top left corner:\r\n                var corner = { x: center.x - g.width / 2, y: center.y - g.height / 2 };\r\n                var offset = { x: g.x - corner.x + svg_width / 2 - real_width / 2, y: g.y - corner.y + svg_height / 2 - real_height / 2};\r\n\r\n                // put nodes:\r\n                g.array.forEach(function (node) {\r\n                    node.x += offset.x;\r\n                    node.y += offset.y;\r\n                });\r\n            });\r\n        }\r\n\r\n        // starts box packing algorithm\r\n        // desired ratio is 1 by default\r\n        function apply(data, desired_ratio) {\r\n            var curr_best_f = Number.POSITIVE_INFINITY;\r\n            var curr_best = 0;\r\n            data.sort(function (a, b) { return b.height - a.height; });\r\n\r\n            min_width = data.reduce(function (a, b) {\r\n                return a.width < b.width ? a.width : b.width;\r\n            });\r\n\r\n            var left = x1 = min_width;\r\n            var right = x2 = get_entire_width(data);\r\n            var iterationCounter = 0;\r\n\r\n            var f_x1 = Number.MAX_VALUE;\r\n            var f_x2 = Number.MAX_VALUE;\r\n            var flag = -1; // determines which among f_x1 and f_x2 to recompute\r\n\r\n\r\n            var dx = Number.MAX_VALUE;\r\n            var df = Number.MAX_VALUE;\r\n\r\n            while ((dx > min_width) || df > packingOptions.FLOAT_EPSILON) {\r\n\r\n                if (flag != 1) {\r\n                    var x1 = right - (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x1 = step(data, x1);\r\n                }\r\n                if (flag != 0) {\r\n                    var x2 = left + (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x2 = step(data, x2);\r\n                }\r\n\r\n                dx = Math.abs(x1 - x2);\r\n                df = Math.abs(f_x1 - f_x2);\r\n\r\n                if (f_x1 < curr_best_f) {\r\n                    curr_best_f = f_x1;\r\n                    curr_best = x1;\r\n                }\r\n\r\n                if (f_x2 < curr_best_f) {\r\n                    curr_best_f = f_x2;\r\n                    curr_best = x2;\r\n                }\r\n\r\n                if (f_x1 > f_x2) {\r\n                    left = x1;\r\n                    x1 = x2;\r\n                    f_x1 = f_x2;\r\n                    flag = 1;\r\n                } else {\r\n                    right = x2;\r\n                    x2 = x1;\r\n                    f_x2 = f_x1;\r\n                    flag = 0;\r\n                }\r\n\r\n                if (iterationCounter++ > 100) {\r\n                    break;\r\n                }\r\n            }\r\n            // plot(data, min_width, get_entire_width(data), curr_best, curr_best_f);\r\n            step(data, curr_best);\r\n        }\r\n\r\n        // one iteration of the optimization method\r\n        // (gives a proper, but not necessarily optimal packing)\r\n        function step(data, max_width) {\r\n            line = [];\r\n            real_width = 0;\r\n            real_height = 0;\r\n            global_bottom = init_y;\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                var o = data[i];\r\n                put_rect(o, max_width);\r\n            }\r\n\r\n            return Math.abs(get_real_ratio() - desired_ratio);\r\n        }\r\n\r\n        // looking for a position to one box\r\n        function put_rect(rect, max_width) {\r\n\r\n\r\n            var parent = undefined;\r\n\r\n            for (var i = 0; i < line.length; i++) {\r\n                if ((line[i].space_left >= rect.height) && (line[i].x + line[i].width + rect.width + packingOptions.PADDING - max_width) <= packingOptions.FLOAT_EPSILON) {\r\n                    parent = line[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            line.push(rect);\r\n\r\n            if (parent !== undefined) {\r\n                rect.x = parent.x + parent.width + packingOptions.PADDING;\r\n                rect.y = parent.bottom;\r\n                rect.space_left = rect.height;\r\n                rect.bottom = rect.y;\r\n                parent.space_left -= rect.height + packingOptions.PADDING;\r\n                parent.bottom += rect.height + packingOptions.PADDING;\r\n            } else {\r\n                rect.y = global_bottom;\r\n                global_bottom += rect.height + packingOptions.PADDING;\r\n                rect.x = init_x;\r\n                rect.bottom = rect.y;\r\n                rect.space_left = rect.height;\r\n            }\r\n\r\n            if (rect.y + rect.height - real_height > -packingOptions.FLOAT_EPSILON) real_height = rect.y + rect.height - init_y;\r\n            if (rect.x + rect.width - real_width > -packingOptions.FLOAT_EPSILON) real_width = rect.x + rect.width - init_x;\r\n        };\r\n\r\n        function get_entire_width(data) {\r\n            var width = 0;\r\n            data.forEach(function (d) { return width += d.width + packingOptions.PADDING; });\r\n            return width;\r\n        }\r\n\r\n        function get_real_ratio() {\r\n            return (real_width / real_height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * connected components of graph\r\n     * returns an array of {}\r\n     */\r\n    export function separateGraphs(nodes, links) {\r\n        var marks = {};\r\n        var ways = {};\r\n        var graphs = [];\r\n        var clusters = 0;\r\n\r\n        for (var i = 0; i < links.length; i++) {\r\n            var link = links[i];\r\n            var n1 = link.source;\r\n            var n2 = link.target;\r\n            if (ways[n1.index])\r\n                ways[n1.index].push(n2);\r\n            else\r\n                ways[n1.index] = [n2];\r\n\r\n            if (ways[n2.index])\r\n                ways[n2.index].push(n1);\r\n            else\r\n                ways[n2.index] = [n1];\r\n        }\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            if (marks[node.index]) continue;\r\n            explore_node(node, true);\r\n        }\r\n\r\n        function explore_node(n, is_new) {\r\n            if (marks[n.index] !== undefined) return;\r\n            if (is_new) {\r\n                clusters++;\r\n                graphs.push({ array: [] });\r\n            }\r\n            marks[n.index] = clusters;\r\n            graphs[clusters - 1].array.push(n);\r\n            var adjacent = ways[n.index];\r\n            if (!adjacent) return;\r\n\r\n            for (var j = 0; j < adjacent.length; j++) {\r\n                explore_node(adjacent[j], false);\r\n            }\r\n        }\r\n\r\n        return graphs;\r\n    }\r\n","import {Point} from './geom'\r\nimport {Rectangle} from './rectangle'\r\nimport {Constraint, Solver, Variable} from './vpsc'\r\nimport {Calculator} from './shortestpaths'\r\n    export interface NodeAccessor<Node>{\r\n        getChildren(v:Node) : number[];\r\n        getBounds(v:Node) : Rectangle;\r\n    }\r\n    export class NodeWrapper {\r\n        leaf: boolean;\r\n        parent: NodeWrapper;\r\n        ports: Vert[];\r\n        constructor(public id: number, public rect: Rectangle, public children: number[]) {\r\n            this.leaf = typeof children === 'undefined' || children.length === 0;\r\n        }\r\n    }\r\n    export class Vert {\r\n        constructor(public id: number, public x:number, public y: number, public node: NodeWrapper = null, public line = null) {}\r\n    }\r\n\r\n    export class LongestCommonSubsequence<T> {\r\n        length: number;\r\n        si: number;\r\n        ti: number;\r\n        reversed: boolean;\r\n        constructor(public s: T[], public t: T[]) {\r\n            var mf = LongestCommonSubsequence.findMatch(s, t);\r\n            var tr = t.slice(0).reverse();\r\n            var mr = LongestCommonSubsequence.findMatch(s, tr);\r\n            if (mf.length >= mr.length) {\r\n                this.length = mf.length;\r\n                this.si = mf.si;\r\n                this.ti = mf.ti;\r\n                this.reversed = false;\r\n            } else {\r\n                this.length = mr.length;\r\n                this.si = mr.si;\r\n                this.ti = t.length - mr.ti - mr.length;\r\n                this.reversed = true;\r\n            }\r\n        }\r\n        private static findMatch<T>(s: T[], t: T[]) {\r\n            var m = s.length;\r\n            var n = t.length;\r\n            var match = { length: 0, si: -1, ti: -1 };\r\n            var l = new Array(m);\r\n            for (var i = 0; i < m; i++) {\r\n                l[i] = new Array(n);\r\n                for (var j = 0; j < n; j++)\r\n                    if (s[i] === t[j]) {\r\n                        var v = l[i][j] = (i === 0 || j === 0) ? 1 : l[i - 1][j - 1] + 1;\r\n                        if (v > match.length) {\r\n                            match.length = v;\r\n                            match.si = i - v + 1;\r\n                            match.ti = j - v + 1;\r\n                        };\r\n                    } else l[i][j] = 0;\r\n            }\r\n            return match;\r\n        }\r\n        getSequence(): T[]{\r\n            return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\r\n        }\r\n    }\r\n    // a horizontal or vertical line of nodes\r\n    export interface GridLine {\r\n        nodes: NodeWrapper[];\r\n        pos: number;\r\n    }\r\n    export class GridRouter<Node> {\r\n        leaves: NodeWrapper[] = null;\r\n        groups: NodeWrapper[];\r\n        nodes: NodeWrapper[];\r\n        cols: GridLine[];\r\n        rows: GridLine[];\r\n        root;\r\n        verts: Vert[];\r\n        edges;\r\n        backToFront;\r\n        obstacles;\r\n        passableEdges;\r\n        private avg(a) { return a.reduce((x, y) => x + y) / a.length }\r\n\r\n        // in the given axis, find sets of leaves overlapping in that axis\r\n        // center of each GridLine is average of all nodes in column\r\n        private getGridLines(axis): GridLine[] {\r\n            var columns = [];\r\n            var ls = this.leaves.slice(0, this.leaves.length);\r\n            while (ls.length > 0) {\r\n                // find a column of all leaves overlapping in axis with the first leaf\r\n                let overlapping = ls.filter(v=> v.rect['overlap' + axis.toUpperCase()](ls[0].rect));\r\n                let col = {\r\n                    nodes: overlapping,\r\n                    pos: this.avg(overlapping.map(v=> v.rect['c' + axis]()))\r\n                };\r\n                columns.push(col);\r\n                col.nodes.forEach(v=> ls.splice(ls.indexOf(v), 1));\r\n            }\r\n            columns.sort((a, b) => a.pos - b.pos)\r\n            return columns;\r\n        }\r\n\r\n        // get the depth of the given node in the group hierarchy\r\n        private getDepth(v) {\r\n            var depth = 0;\r\n            while (v.parent !== this.root) {\r\n                depth++;\r\n                v = v.parent;\r\n            }\r\n            return depth;\r\n        }\r\n\r\n        // medial axes between node centres and also boundary lines for the grid\r\n        private midPoints(a) {\r\n            var gap = a[1] - a[0];\r\n            var mids = [a[0] - gap / 2];\r\n            for (var i = 1; i < a.length; i++) {\r\n                mids.push((a[i] + a[i - 1]) / 2);\r\n            }\r\n            mids.push(a[a.length - 1] + gap / 2);\r\n            return mids;\r\n        }\r\n\r\n        constructor(public originalnodes: Node[], accessor: NodeAccessor<Node>, public groupPadding: number = 12) {\r\n            this.nodes = originalnodes.map((v, i) => new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v)));\r\n            this.leaves = this.nodes.filter(v=> v.leaf);\r\n            this.groups = this.nodes.filter(g=> !g.leaf);\r\n            this.cols = this.getGridLines('x');\r\n            this.rows = this.getGridLines('y');\r\n\r\n            // create parents for each node or group that is a member of another's children\r\n            this.groups.forEach(v=>\r\n                v.children.forEach(c=> this.nodes[<number>c].parent = v));\r\n\r\n            // root claims the remaining orphans\r\n            this.root = { children: [] };\r\n            this.nodes.forEach(v=> {\r\n                if (typeof v.parent === 'undefined') {\r\n                    v.parent = this.root;\r\n                    this.root.children.push(v.id);\r\n                }\r\n\r\n                // each node will have grid vertices associated with it,\r\n                // some inside the node and some on the boundary\r\n                // leaf nodes will have exactly one internal node at the center\r\n                // and four boundary nodes\r\n                // groups will have potentially many of each\r\n                v.ports = []\r\n            });\r\n\r\n            // nodes ordered by their position in the group hierarchy\r\n            this.backToFront = this.nodes.slice(0);\r\n            this.backToFront.sort((x, y) => this.getDepth(x) - this.getDepth(y));\r\n\r\n            // compute boundary rectangles for each group\r\n            // has to be done from front to back, i.e. inside groups to outside groups\r\n            // such that each can be made large enough to enclose its interior\r\n            var frontToBackGroups = this.backToFront.slice(0).reverse().filter(g=> !g.leaf);\r\n            frontToBackGroups.forEach(v=> {\r\n                var r = Rectangle.empty();\r\n                v.children.forEach(c=> r = r.union(this.nodes[c].rect));\r\n                v.rect = r.inflate(this.groupPadding);\r\n            });\r\n\r\n            var colMids = this.midPoints(this.cols.map(r=> r.pos));\r\n            var rowMids = this.midPoints(this.rows.map(r=> r.pos));\r\n\r\n            // setup extents of lines\r\n            var rowx = colMids[0], rowX = colMids[colMids.length - 1];\r\n            var coly = rowMids[0], colY = rowMids[rowMids.length - 1];\r\n\r\n            // horizontal lines\r\n            var hlines = this.rows.map(r=> <any>{ x1: rowx, x2: rowX, y1: r.pos, y2: r.pos })\r\n                .concat(rowMids.map(m=> <any>{ x1: rowx, x2: rowX, y1: m, y2: m }));\r\n\r\n            // vertical lines\r\n            var vlines = this.cols.map(c=> <any>{ x1: c.pos, x2: c.pos, y1: coly, y2: colY })\r\n                .concat(colMids.map(m=> <any>{ x1: m, x2: m, y1: coly, y2: colY }));\r\n\r\n            // the full set of lines\r\n            var lines = hlines.concat(vlines);\r\n\r\n            // we record the vertices associated with each line\r\n            lines.forEach(l=> l.verts = []);\r\n\r\n            // the routing graph\r\n            this.verts = [];\r\n            this.edges = [];\r\n\r\n            // create vertices at the crossings of horizontal and vertical grid-lines\r\n            hlines.forEach(h=>\r\n                vlines.forEach(v=> {\r\n                    var p = new Vert(this.verts.length, v.x1, h.y1);\r\n                    h.verts.push(p);\r\n                    v.verts.push(p);\r\n                    this.verts.push(p);\r\n\r\n                    // assign vertices to the nodes immediately under them\r\n                    var i = this.backToFront.length;\r\n                    while (i-- > 0) {\r\n                        var node = this.backToFront[i],\r\n                            r = node.rect;\r\n                        var dx = Math.abs(p.x - r.cx()),\r\n                            dy = Math.abs(p.y - r.cy());\r\n                        if (dx < r.width() / 2 && dy < r.height() / 2) {\r\n                            (<any>p).node = node;\r\n                            break;\r\n                        }\r\n                    }\r\n                })\r\n                );\r\n\r\n            lines.forEach((l, li) => {\r\n                // create vertices at the intersections of nodes and lines\r\n                this.nodes.forEach((v, i) => {\r\n                    v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach((intersect, j) => {\r\n                        //console.log(li+','+i+','+j+':'+intersect.x + ',' + intersect.y);\r\n                        var p = new Vert(this.verts.length, intersect.x, intersect.y, v, l);\r\n                        this.verts.push(p);\r\n                        l.verts.push(p);\r\n                        v.ports.push(p);\r\n                    });\r\n                });\r\n\r\n                // split lines into edges joining vertices\r\n                var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\r\n                var delta = (a, b) => isHoriz ? b.x - a.x : b.y - a.y;\r\n                l.verts.sort(delta);\r\n                for (var i = 1; i < l.verts.length; i++) {\r\n                    var u = l.verts[i - 1], v = l.verts[i];\r\n                    if (u.node && u.node === v.node && u.node.leaf) continue;\r\n                    this.edges.push({ source: u.id, target: v.id, length: Math.abs(delta(u, v)) });\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n        // find path from v to root including both v and root\r\n        private findLineage(v) {\r\n            var lineage = [v];\r\n            do {\r\n                v = v.parent;\r\n                lineage.push(v);\r\n            } while (v !== this.root);\r\n            return lineage.reverse();\r\n        }\r\n\r\n        // find path connecting a and b through their lowest common ancestor\r\n        private findAncestorPathBetween(a, b) {\r\n            var aa = this.findLineage(a), ba = this.findLineage(b), i = 0;\r\n            while (aa[i] === ba[i]) i++;\r\n            // i-1 to include common ancestor only once (as first element)\r\n            return { commonAncestor: aa[i - 1], lineages: aa.slice(i).concat(ba.slice(i)) };\r\n        }\r\n\r\n        // when finding a path between two nodes a and b, siblings of a and b on the\r\n        // paths from a and b to their least common ancestor are obstacles\r\n        siblingObstacles(a, b) {\r\n            var path = this.findAncestorPathBetween(a, b);\r\n            var lineageLookup = {};\r\n            path.lineages.forEach(v=> lineageLookup[v.id] = {});\r\n            var obstacles = path.commonAncestor.children.filter(v=> !(v in lineageLookup));\r\n\r\n            path.lineages\r\n                .filter(v=> v.parent !== path.commonAncestor)\r\n                .forEach(v=> obstacles = obstacles.concat(v.parent.children.filter(c=> c !== v.id)));\r\n\r\n            return obstacles.map(v=> this.nodes[v]);\r\n        }\r\n\r\n        // for the given routes, extract all the segments orthogonal to the axis x\r\n        // and return all them grouped by x position\r\n        static getSegmentSets(routes, x, y) {\r\n            // vsegments is a list of vertical segments sorted by x position\r\n            var vsegments = [];\r\n            for (var ei = 0; ei < routes.length; ei++) {\r\n                var route = routes[ei];\r\n                for (var si = 0; si < route.length; si++) {\r\n                    var s = <any>route[si];\r\n                    s.edgeid = ei;\r\n                    s.i = si;\r\n                    var sdx = s[1][x] - s[0][x];\r\n                    if (Math.abs(sdx) < 0.1) {\r\n                        vsegments.push(s);\r\n                    }\r\n                }\r\n            }\r\n            vsegments.sort((a, b) => a[0][x] - b[0][x]);\r\n\r\n            // vsegmentsets is a set of sets of segments grouped by x position\r\n            var vsegmentsets = [];\r\n            var segmentset = null;\r\n            for (var i = 0; i < vsegments.length; i++) {\r\n                var s = vsegments[i];\r\n                if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\r\n                    segmentset = { pos: s[0][x], segments: [] };\r\n                    vsegmentsets.push(segmentset);\r\n                }\r\n                segmentset.segments.push(s);\r\n            }\r\n            return vsegmentsets;\r\n        }\r\n\r\n        // for all segments in this bundle create a vpsc problem such that\r\n        // each segment's x position is a variable and separation constraints\r\n        // are given by the partial order over the edges to which the segments belong\r\n        // for each pair s1,s2 of segments in the open set:\r\n        //   e1 = edge of s1, e2 = edge of s2\r\n        //   if leftOf(e1,e2) create constraint s1.x + gap <= s2.x\r\n        //   else if leftOf(e2,e1) create cons. s2.x + gap <= s1.x\r\n        static nudgeSegs(x: string, y: string, routes, segments, leftOf, gap: number) {\r\n            var n = segments.length;\r\n            if (n <= 1) return;\r\n            var vs = segments.map(s => new Variable(s[0][x]));\r\n            var cs = [];\r\n            for (var i = 0; i < n; i++) {\r\n                for (var j = 0; j < n; j++) {\r\n                    if (i === j) continue;\r\n                    var s1 = segments[i],\r\n                        s2 = segments[j],\r\n                        e1 = s1.edgeid,\r\n                        e2 = s2.edgeid,\r\n                        lind = -1,\r\n                        rind = -1;\r\n                    // in page coordinates (not cartesian) the notion of 'leftof' is flipped in the horizontal axis from the vertical axis\r\n                    // that is, when nudging vertical segments, if they increase in the y(conj) direction the segment belonging to the\r\n                    // 'left' edge actually needs to be nudged to the right\r\n                    // when nudging horizontal segments, if the segments increase in the x direction\r\n                    // then the 'left' segment needs to go higher, i.e. to have y pos less than that of the right\r\n                    if (x == 'x') {\r\n                        if (leftOf(e1, e2)) {\r\n                            //console.log('s1: ' + s1[0][x] + ',' + s1[0][y] + '-' + s1[1][x] + ',' + s1[1][y]);\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = j, rind = i;\r\n                            } else {\r\n                                lind = i, rind = j;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (leftOf(e1, e2)) {\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = i, rind = j;\r\n                            } else {\r\n                                lind = j, rind = i;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (lind >= 0) {\r\n                        //console.log(x+' constraint: ' + lind + '<' + rind);\r\n                        cs.push(new Constraint(vs[lind], vs[rind], gap));\r\n                    }\r\n                }\r\n            }\r\n            var solver = new Solver(vs, cs);\r\n            solver.solve();\r\n            vs.forEach((v, i) => {\r\n                var s = segments[i];\r\n                var pos = v.position();\r\n                s[0][x] = s[1][x] = pos;\r\n                var route = routes[s.edgeid];\r\n                if (s.i > 0) route[s.i - 1][1][x] = pos;\r\n                if (s.i < route.length - 1) route[s.i + 1][0][x] = pos;\r\n            });\r\n        }\r\n\r\n        static nudgeSegments(routes, x: string, y: string, leftOf: (e1: number, e2: number) => boolean, gap: number) {\r\n            var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\r\n            // scan the grouped (by x) segment sets to find co-linear bundles\r\n            for (var i = 0; i < vsegmentsets.length; i++) {\r\n                var ss = vsegmentsets[i];\r\n                var events = [];\r\n                for (var j = 0; j < ss.segments.length; j++) {\r\n                    var s = ss.segments[j];\r\n                    events.push({ type: 0, s: s, pos: Math.min(s[0][y], s[1][y]) });\r\n                    events.push({ type: 1, s: s, pos: Math.max(s[0][y], s[1][y]) });\r\n                }\r\n                events.sort((a, b) => a.pos - b.pos + a.type - b.type);\r\n                var open = [];\r\n                var openCount = 0;\r\n                events.forEach(e=> {\r\n                    if (e.type === 0) {\r\n                        open.push(e.s);\r\n                        openCount++;\r\n                    } else {\r\n                        openCount--;\r\n                    }\r\n                    if (openCount == 0) {\r\n                        GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\r\n                        open = [];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // obtain routes for the specified edges, nicely nudged apart\r\n        // warning: edge paths may be reversed such that common paths are ordered consistently within bundles!\r\n        // @param edges list of edges\r\n        // @param nudgeGap how much to space parallel edge segements\r\n        // @param source function to retrieve the index of the source node for a given edge\r\n        // @param target function to retrieve the index of the target node for a given edge\r\n        // @returns an array giving, for each edge, an array of segments, each segment a pair of points in an array\r\n        routeEdges<Edge>(edges: Edge[], nudgeGap: number, source: (e: Edge) => number, target: (e: Edge) => number): Point[][][] {\r\n            var routePaths = edges.map(e=> this.route(source(e), target(e)));\r\n            var order = GridRouter.orderEdges(routePaths);\r\n            var routes = routePaths.map(function (e) { return GridRouter.makeSegments(e); });\r\n            GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\r\n            GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\r\n            GridRouter.unreverseEdges(routes, routePaths);\r\n            return routes;\r\n        }\r\n\r\n        // path may have been reversed by the subsequence processing in orderEdges\r\n        // so now we need to restore the original order\r\n        static unreverseEdges(routes, routePaths) {\r\n            routes.forEach((segments, i) => {\r\n                var path = routePaths[i];\r\n                if ((<any>path).reversed) {\r\n                    segments.reverse(); // reverse order of segments\r\n                    segments.forEach(function (segment) {\r\n                        segment.reverse();  // reverse each segment\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        static angleBetween2Lines(line1: Point[], line2: Point[]): number {\r\n            var angle1 = Math.atan2(line1[0].y - line1[1].y,\r\n                line1[0].x - line1[1].x);\r\n            var angle2 = Math.atan2(line2[0].y - line2[1].y,\r\n                line2[0].x - line2[1].x);\r\n            var diff = angle1 - angle2;\r\n            if (diff > Math.PI || diff < -Math.PI) {\r\n                diff = angle2 - angle1;\r\n            }\r\n            return diff;\r\n        }\r\n\r\n        // does the path a-b-c describe a left turn?\r\n        private static isLeft(a, b, c) {\r\n            return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) <= 0;\r\n        }\r\n\r\n        // for the given list of ordered pairs, returns a function that (efficiently) looks-up a specific pair to\r\n        // see if it exists in the list\r\n        private static getOrder(pairs: { l: number; r: number }[]): (l: number, r: number) => boolean {\r\n            var outgoing = {};\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                var p = pairs[i];\r\n                if (typeof outgoing[p.l] === 'undefined') outgoing[p.l] = {};\r\n                outgoing[p.l][p.r] = true;\r\n            }\r\n            return (l, r) => typeof outgoing[l] !== 'undefined' && outgoing[l][r];\r\n        }\r\n\r\n        // returns an ordering (a lookup function) that determines the correct order to nudge the\r\n        // edge paths apart to minimize crossings\r\n        static orderEdges(edges) {\r\n            var edgeOrder = [];\r\n            for (var i = 0; i < edges.length - 1; i++) {\r\n                for (var j = i + 1; j < edges.length; j++) {\r\n                    var e = edges[i],\r\n                        f = edges[j],\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    var u, vi, vj;\r\n                    if (lcs.length === 0)\r\n                        continue; // no common subpath\r\n                    if (lcs.reversed) {\r\n                        // if we found a common subpath but one of the edges runs the wrong way,\r\n                        // then reverse f.\r\n                        f.reverse();\r\n                        f.reversed = true;\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    }\r\n                    if ((lcs.si <= 0 || lcs.ti <= 0) &&\r\n                        (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\r\n                        // the paths do not diverge, so make an arbitrary ordering decision\r\n                        edgeOrder.push({ l: i, r: j });\r\n                        continue;\r\n                    }\r\n                    if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\r\n                        // if the common subsequence of the\r\n                        // two edges being considered goes all the way to the\r\n                        // end of one (or both) of the lines then we have to\r\n                        // base our ordering decision on the other end of the\r\n                        // common subsequence\r\n                        u = e[lcs.si + 1];\r\n                        vj = e[lcs.si - 1];\r\n                        vi = f[lcs.ti - 1];\r\n                    } else {\r\n                        u = e[lcs.si + lcs.length - 2];\r\n                        vi = e[lcs.si + lcs.length];\r\n                        vj = f[lcs.ti + lcs.length];\r\n                    }\r\n                    if (GridRouter.isLeft(u, vi, vj)) {\r\n                        edgeOrder.push({ l: j, r: i });\r\n                    } else {\r\n                        edgeOrder.push({ l: i, r: j });\r\n                    }\r\n                }\r\n            }\r\n            //edgeOrder.forEach(function (e) { console.log('l:' + e.l + ',r:' + e.r) });\r\n            return GridRouter.getOrder(edgeOrder);\r\n        }\r\n\r\n        // for an orthogonal path described by a sequence of points, create a list of segments\r\n        // if consecutive segments would make a straight line they are merged into a single segment\r\n        // segments are over cloned points, not the original vertices\r\n        static makeSegments(path: Point[]): Point[][] {\r\n            function copyPoint(p: Point) {\r\n                return <Point>{ x: p.x, y: p.y };\r\n            }\r\n            var isStraight = (a, b, c) => Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001;\r\n            var segments = [];\r\n            var a = copyPoint(path[0]);\r\n            for (var i = 1; i < path.length; i++) {\r\n                var b = copyPoint(path[i]), c = i < path.length - 1 ? path[i + 1] : null;\r\n                if (!c || !isStraight(a, b, c)) {\r\n                    segments.push([a, b]);\r\n                    a = b;\r\n                }\r\n            }\r\n            return segments;\r\n        }\r\n\r\n        // find a route between node s and node t\r\n        // returns an array of indices to verts\r\n        route(s: number, t: number): Point[] {\r\n            var source = this.nodes[<number>s], target = this.nodes[<number>t];\r\n            this.obstacles = this.siblingObstacles(source, target);\r\n\r\n            var obstacleLookup = {};\r\n            this.obstacles.forEach(o => obstacleLookup[o.id] = o);\r\n            this.passableEdges = this.edges.filter(e=> {\r\n                var u = this.verts[e.source],\r\n                    v = this.verts[e.target];\r\n                return !(u.node && u.node.id in obstacleLookup\r\n                    || v.node && v.node.id in obstacleLookup);\r\n            });\r\n\r\n            // add dummy segments linking ports inside source and target\r\n            for (var i = 1; i < source.ports.length; i++) {\r\n                var u = source.ports[0].id;\r\n                var v = source.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n            for (var i = 1; i < target.ports.length; i++) {\r\n                var u = target.ports[0].id;\r\n                var v = target.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n\r\n            var getSource = e=> e.source,\r\n                getTarget = e=> e.target,\r\n                getLength = e=> e.length;\r\n\r\n            var shortestPathCalculator = new Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\r\n            var bendPenalty = (u, v, w) => {\r\n                var a = this.verts[u], b = this.verts[v], c = this.verts[w];\r\n                var dx = Math.abs(c.x - a.x), dy = Math.abs(c.y - a.y);\r\n                // don't count bends from internal node edges\r\n                if (a.node === source && a.node === b.node || b.node === target && b.node === c.node)\r\n                    return 0;\r\n                return dx > 1 && dy > 1 ? 1000 : 0;\r\n            };\r\n\r\n            // get shortest path\r\n            var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(\r\n                source.ports[0].id, target.ports[0].id,\r\n                bendPenalty);\r\n\r\n            // shortest path is reversed and does not include the target port\r\n            var pathPoints = shortestPath.reverse().map(vi => this.verts[vi]);\r\n            pathPoints.push(this.nodes[target.id].ports[0]);\r\n\r\n            // filter out any extra end points that are inside the source or target (i.e. the dummy segments above)\r\n            return pathPoints.filter((v, i) =>\r\n                !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source\r\n                    || i > 0 && v.node === target && pathPoints[i - 1].node === target));\r\n        }\r\n\r\n        static getRoutePath(route: Point[][], cornerradius: number, arrowwidth: number, arrowheight: number): { routepath: string; arrowpath: string } {\r\n            var result = {\r\n                routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\r\n                arrowpath: ''\r\n            };\r\n            if (route.length > 1) {\r\n                for (var i = 0; i < route.length; i++) {\r\n                    var li = route[i];\r\n                    var x = li[1].x, y = li[1].y;\r\n                    var dx = x - li[0].x;\r\n                    var dy = y - li[0].y;\r\n                    if (i < route.length - 1) {\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * cornerradius;\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        var l = route[i + 1];\r\n                        var x0 = l[0].x, y0 = l[0].y;\r\n                        var x1 = l[1].x;\r\n                        var y1 = l[1].y;\r\n                        dx = x1 - x0;\r\n                        dy = y1 - y0;\r\n                        var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\r\n                        //console.log(cola.GridRouter.angleBetween2Lines(li, l))\r\n                        var x2, y2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x2 = x0 + dx / Math.abs(dx) * cornerradius;\r\n                            y2 = y0;\r\n                        } else {\r\n                            x2 = x0;\r\n                            y2 = y0 + dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        var cx = Math.abs(x2 - x);\r\n                        var cy = Math.abs(y2 - y);\r\n                        result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\r\n                    } else {\r\n                        var arrowtip = [x, y];\r\n                        var arrowcorner1, arrowcorner2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * arrowheight;\r\n                            arrowcorner1 = [x, y + arrowwidth];\r\n                            arrowcorner2 = [x, y - arrowwidth];\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * arrowheight;\r\n                            arrowcorner1 = [x + arrowwidth, y];\r\n                            arrowcorner2 = [x - arrowwidth, y];\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        if (arrowheight > 0) {\r\n                            result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                            + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var li = route[0];\r\n                var x = li[1].x, y = li[1].y;\r\n                var dx = x - li[0].x;\r\n                var dy = y - li[0].y;\r\n                var arrowtip = [x, y];\r\n                var arrowcorner1, arrowcorner2;\r\n                if (Math.abs(dx) > 0) {\r\n                    x -= dx / Math.abs(dx) * arrowheight;\r\n                    arrowcorner1 = [x, y + arrowwidth];\r\n                    arrowcorner2 = [x, y - arrowwidth];\r\n                } else {\r\n                    y -= dy / Math.abs(dy) * arrowheight;\r\n                    arrowcorner1 = [x + arrowwidth, y];\r\n                    arrowcorner2 = [x - arrowwidth, y];\r\n                }\r\n                result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                if (arrowheight > 0) {\r\n                    result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                    + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n","export * from './version'\nexport * from './widget'\n","import { DOMWidgetModel, DOMWidgetView, ISerializers } from '@jupyter-widgets/base'\nimport { version, name } from './version'\nimport * as buttonUtils from './buttons'\nimport * as algorithmx from 'algorithmx'\n\nexport class AlgorithmxModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: 'AlgorithmxModel',\n      _model_module: name,\n      _model_module_version: version,\n      _view_name: 'AlgorithmxView',\n      _view_module: name,\n      _view_module_version: version,\n\n      events: [],\n      show_buttons: false\n    }\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n  }\n}\n\nexport class AlgorithmxView extends DOMWidgetView {\n  private client: algorithmx.Client | null = null\n  private canvas: algorithmx.CanvasSelection | null = null\n  private eventIndex = 0\n\n  private stopped = false\n\n  playEvents(events: ReadonlyArray<string>) {\n    if (this.client === null) return\n    events.forEach(eventStr => {\n      const event = JSON.parse(eventStr) as algorithmx.DispatchEvent\n      this.client!.dispatch(event)\n    })\n  }\n\n  playAllEvents() {\n    const events = this.model.get('events')\n    this.playEvents(events)\n  }\n\n  eventsChanged() {\n    if (this.client === null) return\n\n    const events: ReadonlyArray<string> = this.model.get('events')\n    const newEvents = events.slice(this.eventIndex)\n    this.eventIndex = events.length\n\n    this.playEvents(newEvents)\n  }\n\n  resetCanvas() {\n    if (this.canvas === null) return\n    const immediateCanvas = this.canvas.eventQ(null).duration(0)\n    immediateCanvas.cancelall().startall()\n    immediateCanvas.remove()\n    immediateCanvas.add().size([400, 250]).zoomkey(true)\n    setTimeout(() => { immediateCanvas.svgattr('width', '100%') }, 1)\n  }\n\n  removeCanvas() {\n    this.resetCanvas()\n\n    const element: Element = this.el\n    const canvasDiv = element.querySelector('algorithmx-container')\n    if (canvasDiv !== null) element.removeChild(canvasDiv)\n\n    const buttonDiv = element.querySelector('algorithmx-buttons')\n    if (buttonDiv !== null) element.removeChild(buttonDiv)\n  }\n\n  remove() {\n    this.removeCanvas()\n    super.remove()\n  }\n\n  clickRestart() {\n    if (this.canvas === null) return\n\n    this.resetCanvas()\n    this.playAllEvents()\n    this.stopped = false\n  }\n\n  clickStart () {\n    if (this.canvas === null) return\n    this.canvas.eventQ(null).startall()\n    this.stopped = false\n  }\n\n  clickStop () {\n    if (this.canvas === null) return\n    this.canvas.eventQ(null).stopall()\n    this.stopped = true\n  }\n\n  renderButtons() {\n    const element: Element = this.el\n\n    const buttonDiv = document.createElement('div')\n    buttonDiv.style.height = '40px'\n\n    const buttonPlay = buttonUtils.createButton('pause', () => {\n      if (this.stopped) {\n        buttonUtils.setIcon(buttonPlay, 'pause')\n        this.clickStart()\n      } else {\n        buttonUtils.setIcon(buttonPlay, 'play')\n        this.clickStop()\n      }\n    })\n\n    const buttonRestart = buttonUtils.createButton('repeat', () => {\n      buttonUtils.setIcon(buttonPlay, 'pause')\n      this.clickRestart()\n    })\n\n    buttonDiv.appendChild(buttonPlay)\n    buttonDiv.appendChild(buttonRestart)\n\n    element.appendChild(buttonDiv)\n  }\n\n  render() {\n    this.removeCanvas()\n\n    const canvasDiv = document.createElement('div')\n    canvasDiv.setAttribute('id', 'algorithmx-container')\n\n    this.client = algorithmx.client(canvasDiv)\n\n    this.client.subscribe(event => {\n      const fullEvent = { source: 'algorithmx', data: event }\n      const fullEventStr = JSON.stringify(fullEvent)\n      this.send(fullEventStr)\n    })\n\n    this.canvas = this.client.canvas()\n    this.resetCanvas()\n\n    const element: Element = this.el\n    element.appendChild(canvasDiv)\n\n    const showButtons = this.model.get('show_buttons')\n    if (showButtons) this.renderButtons()\n\n    this.model.on('change:events', this.eventsChanged, this)\n    this.eventsChanged()\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__17__;","const BUTTON_COLOR = 'rgb(238, 238, 238)'\nconst HOVER_COLOR = 'rgb(220, 220, 220)'\nconst CLICK_COLOR = 'rgb(200, 200, 200)'\n\nconst SIZE = 28\n\nexport const createButton = (iconName: string, onclick: () => void): HTMLDivElement => {\n  const button = document.createElement('div')\n  createButton\n  button.onclick = onclick\n\n  button.style.width = `${SIZE}px`\n  button.style.height = `${SIZE}px`\n  button.style.backgroundColor = BUTTON_COLOR\n  button.style.display = 'inline-block'\n  button.style.textAlign = 'center'\n  button.style.marginRight = '6px'\n  button.style.cssFloat = 'left'\n\n  button.onmouseover = () => {\n    button.style.backgroundColor = HOVER_COLOR\n    button.style.cursor = 'pointer'\n  }\n  button.onmousedown = () => { button.style.backgroundColor = CLICK_COLOR }\n  button.onmouseup = () => { button.style.backgroundColor = HOVER_COLOR }\n  button.onmouseleave = () => {\n    button.style.backgroundColor = BUTTON_COLOR\n    button.style.cursor = ''\n  }\n\n  const icon = document.createElement('i')\n  icon.setAttribute('class', `fa-${iconName} fa`)\n  icon.style.fontSize = '12px'\n  icon.style.color = 'rgb(50, 50, 50)'\n  icon.style.lineHeight = `${SIZE}px`\n\n  button.appendChild(icon)\n\n  return button\n}\n\nexport const setIcon = (button: Element, iconName: string): void => {\n  const icon = button.querySelector('i')\n  if (icon !== null) icon.setAttribute('class', `fa-${iconName} fa`)\n}\n","import {Layout, EventType, Event} from './layout'\r\n\r\n    export class LayoutAdaptor extends Layout {\r\n\r\n        // dummy functions in case not defined by client\r\n        trigger(e: Event) {};\r\n        kick() {};\r\n        drag() {};\r\n        on(eventType: EventType | string, listener: () => void) : this { return this; };\r\n\r\n        dragstart: (d:any) => void;\r\n        dragStart: (d:any) => void;\r\n        dragend: (d:any) => void;\r\n        dragEnd: (d:any) => void;\r\n\r\n        constructor( options ) {\r\n            super();\r\n\r\n            // take in implementation as defined by client\r\n\r\n            var self = this;\r\n            var o = options;\r\n\r\n            if ( o.trigger ) {\r\n                this.trigger = o.trigger;\r\n            }\r\n\r\n            if ( o.kick ){\r\n                this.kick = o.kick;\r\n            }\r\n\r\n            if ( o.drag ){\r\n                this.drag = o.drag;\r\n            }\r\n\r\n            if ( o.on ){\r\n                this.on = o.on;\r\n            }\r\n\r\n            this.dragstart = this.dragStart = Layout.dragStart;\r\n            this.dragend = this.dragEnd = Layout.dragEnd;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with any external graph system (e.g. Cytoscape.js):\r\n     */\r\n    export function adaptor( options ): LayoutAdaptor {\r\n        return new LayoutAdaptor( options );\r\n    }\r\n","import * as d3v3 from './d3v3adaptor'\r\nimport * as d3v4 from './d3v4adaptor'\r\nimport { Layout, EventType, Event } from './layout';\r\n\r\nexport interface D3v3Context { version:string };\r\n\r\nexport interface ID3StyleLayoutAdaptor {\r\n    trigger(e: Event): void;\r\n    kick(): void;\r\n    drag: () => any;\r\n\r\n    on(eventType: EventType | string, listener: () => void): ID3StyleLayoutAdaptor;\r\n}\r\n\r\n\r\n/**\r\n * provides an interface for use with d3:\r\n * Correct way to create way to construct the d3 cola object is to pass the d3 object into the adaptor function, like so:\r\n * \r\n *   `var d3cola = cola.d3adaptor(d3);`\r\n * \r\n * Internally, it will figure out if d3 is version 3 or 4 from the version tag and set up the right event forwarding. Defaults to version 3 if the d3 object is not passed.\r\n * - uses the d3 event system to dispatch layout events such as:\r\n *   o \"start\" (start layout process)\r\n *   o \"tick\" (after each layout iteration)\r\n *   o \"end\" (layout converged and complete).\r\n * - uses the d3 timer to queue layout iterations.\r\n * - sets up d3.behavior.drag to drag nodes\r\n *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n * returns an instance of the cola.Layout itself with which the user\r\n * can interact directly.\r\n */\r\nexport function d3adaptor(d3Context?: d3v4.D3Context | D3v3Context): Layout & ID3StyleLayoutAdaptor {\r\n    if (!d3Context || isD3V3(d3Context)) {\r\n        return new d3v3.D3StyleLayoutAdaptor();\r\n    }\r\n    return new d3v4.D3StyleLayoutAdaptor(d3Context);\r\n}\r\n\r\nfunction isD3V3(d3Context: d3v4.D3Context | D3v3Context): d3Context is D3v3Context {\r\n    const v3exp = /^3\\./;\r\n    return (<any>d3Context).version && (<any>d3Context).version.match(v3exp) !== null;\r\n}\r\n","////<reference path=\"../extern/d3v3.d.ts\"/>\r\n////commented out the reference, because the path ended up in the typings, which\r\n////makes it impossible import in other projects.\r\ndeclare const d3;\r\n\r\n\r\nimport {Layout, EventType, Event} from './layout';\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\n    export class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n        event = d3.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        trigger(e: Event) {\r\n            var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n            this.event[d3event.type](d3event); // via d3 dispatcher, e.g. event.start(e);\r\n        }\r\n\r\n        // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n        kick() {\r\n            d3.timer(() => super.tick());\r\n        }\r\n\r\n        // a function to allow for dragging of nodes\r\n        drag: () => any;\r\n\r\n        constructor() {\r\n            super();\r\n            // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n            var d3layout = this;\r\n            var drag;\r\n            this.drag = function () {\r\n                if (!drag) {\r\n                    var drag = d3.behavior.drag()\r\n                        .origin(Layout.dragOrigin)\r\n                        .on(\"dragstart.d3adaptor\", Layout.dragStart)\r\n                        .on(\"drag.d3adaptor\", d => {\r\n                            Layout.drag(d, <any>d3.event);\r\n                            d3layout.resume(); // restart annealing\r\n                        })\r\n                        .on(\"dragend.d3adaptor\", Layout.dragEnd);\r\n                }\r\n\r\n                if (!arguments.length) return drag;\r\n\r\n                // this is the context of the function, i.e. the d3 selection\r\n                this//.on(\"mouseover.adaptor\", colaMouseover)\r\n                //.on(\"mouseout.adaptor\", colaMouseout)\r\n                    .call(drag);\r\n            }\r\n        }\r\n\r\n        // a function for binding to events on the adapter\r\n        on(eventType: EventType | string, listener: () => void): this {\r\n            if (typeof eventType === 'string') {\r\n                this.event.on(eventType, listener);\r\n            } else {\r\n                this.event.on(EventType[eventType], listener);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with d3:\r\n     * - uses the d3 event system to dispatch layout events such as:\r\n     *   o \"start\" (start layout process)\r\n     *   o \"tick\" (after each layout iteration)\r\n     *   o \"end\" (layout converged and complete).\r\n     * - uses the d3 timer to queue layout iterations.\r\n     * - sets up d3.behavior.drag to drag nodes\r\n     *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n     * returns an instance of the cola.Layout itself with which the user\r\n     * can interact directly.\r\n     */\r\n    export function d3adaptor(): D3StyleLayoutAdaptor {\r\n        return new D3StyleLayoutAdaptor();\r\n    }\r\n","import {dispatch} from 'd3-dispatch'\r\nimport {timer} from 'd3-timer'\r\nimport {drag as d3drag} from 'd3-drag'\r\nimport {Layout, EventType, Event} from './layout'\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\nexport interface D3Context {\r\n    timer: typeof timer; \r\n    drag: typeof d3drag; \r\n    dispatch: typeof dispatch;\r\n    event: any;\r\n}\r\n\r\nexport class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n    event:any;\r\n    trigger(e: Event) {\r\n        var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n        // the dispatcher is actually expecting something of type EventTarget as the second argument\r\n        // so passing the thing above is totally abusing the pattern... not sure what to do about this yet\r\n        this.event.call(d3event.type, <any>d3event); // via d3 dispatcher, e.g. event.start(e);\r\n    }\r\n\r\n    // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n    kick() {\r\n        var t = this.d3Context.timer(() => super.tick() && t.stop());\r\n    }\r\n\r\n    // a function to allow for dragging of nodes\r\n    drag: () => any;\r\n\r\n    constructor(private d3Context: D3Context) {\r\n        super();\r\n        this.event = d3Context.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n        var d3layout = this;\r\n        var drag;\r\n        this.drag = function () {\r\n            if (!drag) {\r\n                var drag = d3Context.drag()\r\n                    .subject(Layout.dragOrigin)\r\n                    .on(\"start.d3adaptor\", Layout.dragStart)\r\n                    .on(\"drag.d3adaptor\", d => {\r\n                        Layout.drag(<any>d, d3Context.event);\r\n                        d3layout.resume(); // restart annealing\r\n                    })\r\n                    .on(\"end.d3adaptor\", Layout.dragEnd);\r\n            }\r\n\r\n            if (!arguments.length) return drag;\r\n\r\n            // this is the context of the function, i.e. the d3 selection\r\n            //this//.on(\"mouseover.adaptor\", colaMouseover)\r\n            //.on(\"mouseout.adaptor\", colaMouseout)\r\n            arguments[0].call(drag);\r\n        }\r\n    }\r\n\r\n    // a function for binding to events on the adapter\r\n    on(eventType: EventType | string, listener: () => void): this {\r\n        if (typeof eventType === 'string') {\r\n            this.event.on(eventType, listener);\r\n        } else {\r\n            this.event.on(EventType[eventType], listener);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import {Calculator} from './shortestpaths'\r\nimport {Descent} from './descent'\r\nimport {Projection, GraphNode, Rectangle} from './rectangle'\r\nimport {Variable} from './vpsc'\r\nimport {jaccardLinkLengths, LinkLengthAccessor} from './linklengths'\r\n\r\nexport class Link3D {\r\n        length: number;\r\n        constructor(public source: number, public target: number) { }\r\n        actualLength(x: number[][]) {\r\n            return Math.sqrt(\r\n                x.reduce((c: number, v: number[]) => {\r\n                    const dx = v[this.target] - v[this.source];\r\n                    return c + dx * dx;\r\n                }, 0));\r\n        }\r\n    }\r\n    export class Node3D implements GraphNode {\r\n        // if fixed, layout will not move the node from its specified starting position\r\n        fixed: boolean;\r\n        width: number;\r\n        height: number;\r\n        px: number;\r\n        py: number;\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n        constructor(\r\n            public x: number = 0,\r\n            public y: number = 0,\r\n            public z: number = 0) { }\r\n    }\r\n    export class Layout3D {\r\n        static dims = ['x', 'y', 'z'];\r\n        static k = Layout3D.dims.length;\r\n        result: number[][];\r\n        constraints: any[] = null;\r\n\r\n        constructor(public nodes: Node3D[], public links: Link3D[], public idealLinkLength: number = 1) {\r\n            this.result = new Array(Layout3D.k);\r\n            for (var i = 0; i < Layout3D.k; ++i) {\r\n                this.result[i] = new Array(nodes.length);\r\n            }\r\n            nodes.forEach((v, i) => {\r\n                for (var dim of Layout3D.dims) {\r\n                    if (typeof v[dim] == 'undefined') v[dim] = Math.random();\r\n                }\r\n                this.result[0][i] = v.x;\r\n                this.result[1][i] = v.y;\r\n                this.result[2][i] = v.z;\r\n            });\r\n        };\r\n\r\n        linkLength(l: Link3D): number {\r\n            return l.actualLength(this.result);\r\n        }\r\n\r\n        useJaccardLinkLengths: boolean = true;\r\n\r\n        descent: Descent;\r\n        start(iterations: number = 100): Layout3D {\r\n            const n = this.nodes.length;\r\n\r\n            var linkAccessor = new LinkAccessor();\r\n\r\n            if (this.useJaccardLinkLengths)\r\n                jaccardLinkLengths(this.links, linkAccessor, 1.5);\r\n\r\n            this.links.forEach(e => e.length *= this.idealLinkLength);\r\n\r\n            // Create the distance matrix that Cola needs\r\n            const distanceMatrix = (new Calculator(n, this.links,\r\n                e=> e.source, e=> e.target, e => e.length)).DistanceMatrix();\r\n\r\n            const D = Descent.createSquareMatrix(n, (i, j) => distanceMatrix[i][j]);\r\n\r\n            // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n            // otherwise 2.\r\n            var G = Descent.createSquareMatrix(n, function () { return 2 });\r\n            this.links.forEach(({ source, target }) => G[source][target] = G[target][source] = 1);\r\n\r\n            this.descent = new Descent(this.result, D);\r\n            this.descent.threshold = 1e-3;\r\n            this.descent.G = G;\r\n            //let constraints = this.links.map(e=> <any>{\r\n            //    axis: 'y', left: e.source, right: e.target, gap: e.length*1.5\r\n            //});\r\n            if (this.constraints)\r\n                this.descent.project = new Projection(<GraphNode[]>this.nodes, null, null, this.constraints).projectFunctions();\r\n\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n\r\n            this.descent.run(iterations);\r\n            return this;\r\n        }\r\n\r\n        tick(): number {\r\n            this.descent.locks.clear();\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n            return this.descent.rungeKutta();\r\n        }\r\n    }\r\n\r\n    class LinkAccessor implements LinkLengthAccessor<any> {\r\n        getSourceIndex(e: any): number { return e.source; }\r\n        getTargetIndex(e: any): number { return e.target; }\r\n        getLength(e: any): number { return e.length; }\r\n        setLength(e: any, l: number) { e.length = l; }\r\n    }\r\n","import {Node, Link, Layout} from './layout'\r\nimport {GridRouter} from './gridrouter'\r\nimport {Point} from './geom'\r\n\r\n/**\r\n * @property nudgeGap spacing between parallel edge segments\r\n * @property margin space around nodes\r\n * @property groupMargin space around groups\r\n */\r\nexport function gridify(pgLayout, nudgeGap: number, margin: number, groupMargin: number) {\r\n    pgLayout.cola.start(0, 0, 0, 10, false);\r\n    let gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\r\n    return gridrouter.routeEdges<any>(pgLayout.powerGraph.powerEdges, nudgeGap, e=> e.source.routerNode.id, e=> e.target.routerNode.id);\r\n}\r\n\r\nfunction route(nodes, groups, margin: number, groupMargin: number) {\r\n    nodes.forEach(d => {\r\n        d.routerNode = <any>{\r\n            name: d.name,\r\n            bounds: d.bounds.inflate(-margin)\r\n        };\r\n    });\r\n    groups.forEach(d => {\r\n        d.routerNode = <any>{\r\n            bounds: d.bounds.inflate(-groupMargin),\r\n            children: (typeof d.groups !== 'undefined' ? d.groups.map(c=> nodes.length + c.id) : [])\r\n                .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(c=> c.index) : [])\r\n        };\r\n    });\r\n    let gridRouterNodes = nodes.concat(groups).map((d, i) => {\r\n        d.routerNode.id = i;\r\n        return d.routerNode;\r\n    });\r\n    return new GridRouter(gridRouterNodes, {\r\n        getChildren: (v: any) => v.children,\r\n        getBounds: v => v.bounds\r\n    }, margin - groupMargin);\r\n}\r\n\r\nexport function powerGraphGridLayout(\r\n    graph: { nodes: Node[], links: Link<Node>[] },\r\n    size: number[],\r\n    grouppadding: number)\r\n{\r\n    // compute power graph\r\n    var powerGraph;\r\n    graph.nodes.forEach((v,i) => (<any>v).index = i);\r\n    new Layout()\r\n        .avoidOverlaps(false)\r\n        .nodes(graph.nodes)\r\n        .links(graph.links)\r\n        .powerGraphGroups(function (d) {\r\n            powerGraph = d;\r\n            powerGraph.groups.forEach(v=> v.padding = grouppadding);\r\n        });\r\n\r\n    // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n    // power edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n    var n = graph.nodes.length;\r\n    var edges = [];\r\n    var vs = graph.nodes.slice(0);\r\n    vs.forEach((v, i) => (<any>v).index = i);\r\n    powerGraph.groups.forEach(g => {\r\n        var sourceInd = g.index = g.id + n;\r\n        vs.push(g);\r\n        if (typeof g.leaves !== 'undefined')\r\n            g.leaves.forEach(v => edges.push({ source: sourceInd, target: v.index }));\r\n        if (typeof g.groups !== 'undefined')\r\n            g.groups.forEach(gg => edges.push({ source: sourceInd, target: gg.id + n }));\r\n    });\r\n    powerGraph.powerEdges.forEach(e=> {\r\n        edges.push({ source: e.source.index, target: e.target.index });\r\n    });\r\n\r\n    // layout the flat graph with dummy nodes and edges\r\n    new Layout()\r\n        .size(size)\r\n        .nodes(vs)\r\n        .links(edges)\r\n        .avoidOverlaps(false)\r\n        .linkDistance(30)\r\n        .symmetricDiffLinkLengths(5)\r\n        .convergenceThreshold(1e-4)\r\n        .start(100, 0, 0, 0, false);\r\n\r\n    // final layout taking node positions from above as starting positions\r\n    // subject to group containment constraints\r\n    // and then gridifying the layout\r\n    return {\r\n        cola:\r\n            new Layout()\r\n            .convergenceThreshold(1e-3)\r\n            .size(size)\r\n            .avoidOverlaps(true)\r\n            .nodes(graph.nodes)\r\n            .links(graph.links)\r\n        //.flowLayout('y', 30)\r\n            .groupCompactness(1e-4)\r\n            .linkDistance(30)\r\n            .symmetricDiffLinkLengths(5)\r\n            .powerGraphGroups(function (d) {\r\n                powerGraph = d;\r\n                powerGraph.groups.forEach(function (v) {\r\n                    v.padding = grouppadding\r\n                });\r\n            }).start(50, 0, 100, 0, false),\r\n        powerGraph: powerGraph\r\n    };\r\n}\r\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","// https://github.com/algrx/algorithmx v1.1.2 Copyright 2019 Alex Socha\nimport { select, selectAll, event } from 'd3-selection';\nimport { transition } from 'd3-transition';\nimport * as d3 from 'd3-ease';\nimport { dispatch } from 'd3-dispatch';\nimport { timer } from 'd3-timer';\nimport { drag } from 'd3-drag';\nimport * as d3$1 from 'd3-shape';\nimport { line } from 'd3-shape';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { d3adaptor, Layout } from 'webcola';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar EnumDispatchType;\r\n(function (EnumDispatchType) {\r\n    EnumDispatchType[\"update\"] = \"update\";\r\n    EnumDispatchType[\"highlight\"] = \"highlight\";\r\n    EnumDispatchType[\"pause\"] = \"pause\";\r\n    EnumDispatchType[\"start\"] = \"start\";\r\n    EnumDispatchType[\"stop\"] = \"stop\";\r\n    EnumDispatchType[\"cancel\"] = \"cancel\";\r\n    EnumDispatchType[\"broadcast\"] = \"broadcast\";\r\n})(EnumDispatchType || (EnumDispatchType = {}));\r\nvar EnumReceiveType;\r\n(function (EnumReceiveType) {\r\n    EnumReceiveType[\"broadcast\"] = \"broadcast\";\r\n    EnumReceiveType[\"error\"] = \"error\";\r\n    EnumReceiveType[\"click\"] = \"click\";\r\n    EnumReceiveType[\"hover\"] = \"hover\";\r\n})(EnumReceiveType || (EnumReceiveType = {}));\r\nvar EnumErrorType;\r\n(function (EnumErrorType) {\r\n    EnumErrorType[\"attribute\"] = \"attribute\";\r\n    EnumErrorType[\"unknown\"] = \"unknown\";\r\n})(EnumErrorType || (EnumErrorType = {}));\n\nvar mapDict = function (dict, func) {\r\n    /* tslint:disable */\r\n    var newDict = {};\r\n    var keys = Object.keys(dict);\r\n    for (var i = 0; i < keys.length; i++) {\r\n        var k = keys[i];\r\n        newDict[k] = func(k, dict[k], i);\r\n    }\r\n    return newDict;\r\n    /* tslint:enable */\r\n};\r\nvar enumValues = function (enumeration) {\r\n    return Object.keys(enumeration).map(function (k) { return enumeration[k]; });\r\n};\r\nvar isNumStr = function (value) {\r\n    return !isNaN(value) && value !== '';\r\n};\r\nvar isDict = function (value) {\r\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\r\n};\r\nvar isDictEmpty = function (dict) { return Object.keys(dict).length === 0; };\r\nvar filterError = function (value) {\r\n    var error = Array.isArray(value) ? value.find(function (v) { return v instanceof Error; })\r\n        : typeof value === 'object' ? Object.values(value).find(function (v) { return v instanceof Error; })\r\n            : value;\r\n    return error || value;\r\n};\r\nvar filterDict = function (dict, filterFn) {\r\n    return Object.entries(dict).reduce(function (newDict, _a, i) {\r\n        var k = _a[0], v = _a[1];\r\n        var _b;\r\n        return (__assign({}, newDict, (filterFn(k, v, i) ? (_b = {}, _b[k] = v, _b) : {})));\r\n    }, {});\r\n};\r\nvar removeWhitespace = function (s) { return s.replace(/\\s/g, ''); };\r\nvar randomId = function () { return Math.random().toString(36).substr(2, 9); };\n\nfunction build(builder, context) {\r\n    var construct = function (args) { return build(builder, args); };\r\n    var instance = builder(context, function () { return instance; }, construct);\r\n    return instance;\r\n}\r\nfunction inherit(obj, parent) {\r\n    return Object.setPrototypeOf(obj, parent);\r\n}\r\nvar getAttrEntry = function (sel, arg, attr, index) {\r\n    if (typeof attr === 'function') {\r\n        var evalArg = typeof arg === 'function'\r\n            ? (arg(sel.data[index], index))\r\n            : arg;\r\n        return attr(evalArg);\r\n    }\r\n    else\r\n        return attr;\r\n};\r\nvar createParentAttr = function (sel, arg, attr) {\r\n    var _a;\r\n    if (typeof attr === 'function' && sel.data === null) {\r\n        return (function (a) {\r\n            var _a;\r\n            return (_a = {},\r\n                _a[sel.name] = sel.ids.reduce(function (result, id) {\r\n                    var _a;\r\n                    return (__assign({}, result, (_a = {}, _a[id] = attr(a), _a)));\r\n                }, {}),\r\n                _a);\r\n        });\r\n    }\r\n    else {\r\n        return _a = {},\r\n            _a[sel.name] = sel.ids.reduce(function (result, id, i) {\r\n                var _a;\r\n                return (__assign({}, result, (_a = {}, _a[id] = getAttrEntry(sel, arg, attr, i), _a)));\r\n            }, {}),\r\n            _a;\r\n    }\r\n};\r\nvar createFullAttr = function (sel, arg, attr) {\r\n    if (sel.parent === undefined)\r\n        return getAttrEntry(sel, arg, attr, 0);\r\n    else\r\n        return createFullAttr(sel.parent, arg, createParentAttr(sel, arg, attr));\r\n};\r\nvar attrEvent = function (sel, arg, attr) {\r\n    var eventData = {\r\n        attributes: createFullAttr(sel, arg, attr),\r\n        animation: sel.animation\r\n    };\r\n    if (sel.highlight)\r\n        return { type: 'highlight', queue: sel.queue, data: eventData };\r\n    else\r\n        return { type: 'update', queue: sel.queue, data: eventData };\r\n};\r\nvar queueEvent = function (sel, type, queue) {\r\n    var queues = queue === null ? null : [String(queue)];\r\n    return {\r\n        type: type,\r\n        queue: sel.queue,\r\n        data: { queues: queues }\r\n    };\r\n};\r\nvar mergeDictRec = function (a, b) {\r\n    var merged = Object.keys(a).reduce(function (res, k) {\r\n        var _a;\r\n        return (__assign({}, res, (_a = {}, _a[k] = isDict(a[k]) && isDict(b[k]) ? mergeDictRec(a[k], b[k]) : b[k] !== undefined ? b[k] : a[k], _a)));\r\n    }, {});\r\n    return __assign({}, b, merged);\r\n};\r\nvar updateAnimation = function (sel, arg, attr) {\r\n    if ((isDictEmpty(sel.animation) || Object.keys(sel.animation).length === 1 && sel.animation['**'] !== undefined)\r\n        && typeof arg !== 'function')\r\n        // optimization to minimize the amount of transmitted data\r\n        return mergeDictRec(sel.animation, { '**': attr(arg) });\r\n    else {\r\n        var animationAttr = createFullAttr(sel, arg, function (a) { return ({ '**': attr(a) }); });\r\n        return mergeDictRec(sel.animation, animationAttr);\r\n    }\r\n};\n\nvar addListener = function (listeners, id, fn) {\r\n    /* tslint:disable */\r\n    listeners[id] = fn;\r\n    /* tslint:enable */\r\n};\r\nvar triggerListener = function (listeners, id) {\r\n    if (listeners[id] !== undefined)\r\n        listeners[id]();\r\n};\r\nvar defaultContext = function () { return ({\r\n    name: '',\r\n    ids: [],\r\n    listeners: {},\r\n    queue: 'default',\r\n    animation: {},\r\n    highlight: false\r\n}); };\r\nvar builder = function (context, self, construct) { return ({\r\n    visible: function (visible) {\r\n        context.client.dispatch(attrEvent(context, visible, function (d) { return ({ visible: d }); }));\r\n        return self();\r\n    },\r\n    add: function () {\r\n        context.client.dispatch(attrEvent((__assign({}, context, { data: context.ids })), function (id, i) { return i; }, function (i) { return (__assign({ visible: true }, (context.initattr ? context.initattr[i] : {}))); }));\r\n        return self().duration(0);\r\n    },\r\n    remove: function () {\r\n        context.client.dispatch(attrEvent(context, false, function (d) { return null; }));\r\n        return self();\r\n    },\r\n    set: function (attrs) {\r\n        context.client.dispatch(attrEvent(context, attrs, function (d) { return d; }));\r\n        return self();\r\n    },\r\n    eventQ: function (queue) {\r\n        if (queue === void 0) { queue = 'default'; }\r\n        return construct(__assign({}, context, { queue: queue === null ? null : String(queue) }));\r\n    },\r\n    duration: function (seconds) { return construct(__assign({}, context, { animation: updateAnimation(context, seconds, function (d) { return ({ duration: d }); }) })); },\r\n    ease: function (ease) { return construct(__assign({}, context, { animation: updateAnimation(context, ease, function (d) { return ({ ease: d }); }) })); },\r\n    highlight: function (seconds) { return construct(__assign({}, context, { highlight: true, animation: seconds !== undefined ? updateAnimation(context, seconds, function (d) { return ({ linger: d }); }) : context.animation })); },\r\n    data: function (data) { return construct(__assign({}, context, { data: data === null ? null : context.ids.map(function (id, i) {\r\n            return typeof data === 'function' ? data(context.data === null ? null : context.data[i], i)\r\n                : Array.isArray(data) ? data[i]\r\n                    : data;\r\n        }) })); },\r\n    pause: function (seconds) {\r\n        context.client.dispatch({\r\n            type: EnumDispatchType.pause,\r\n            queue: context.queue,\r\n            data: { duration: seconds }\r\n        });\r\n        return self();\r\n    },\r\n    stop: function (queue) {\r\n        if (queue === void 0) { queue = 'default'; }\r\n        context.client.dispatch(queueEvent(context, 'stop', queue));\r\n        return self();\r\n    },\r\n    stopall: function () {\r\n        context.client.dispatch(queueEvent(context, 'stop', null));\r\n        return self();\r\n    },\r\n    start: function (queue) {\r\n        if (queue === void 0) { queue = 'default'; }\r\n        context.client.dispatch(queueEvent(context, 'start', queue));\r\n        return self();\r\n    },\r\n    startall: function () {\r\n        context.client.dispatch(queueEvent(context, 'start', null));\r\n        return self();\r\n    },\r\n    cancel: function (queue) {\r\n        if (queue === void 0) { queue = 'default'; }\r\n        context.client.dispatch(queueEvent(context, 'cancel', queue));\r\n        return self();\r\n    },\r\n    cancelall: function () {\r\n        context.client.dispatch(queueEvent(context, 'cancel', null));\r\n        return self();\r\n    },\r\n    broadcast: function (message) {\r\n        context.client.dispatch({\r\n            type: EnumDispatchType.broadcast,\r\n            queue: context.queue,\r\n            data: { message: \"broadcast-\" + message }\r\n        });\r\n        return self();\r\n    },\r\n    listen: function (message, onReceive) {\r\n        addListener(context.listeners, \"broadcast-\" + message, onReceive);\r\n        return self();\r\n    },\r\n    callback: function (onCallback) {\r\n        var message = \"callback-\" + Math.random().toString(36).substr(2, 9);\r\n        addListener(context.listeners, message, onCallback);\r\n        context.client.dispatch({\r\n            type: EnumDispatchType.broadcast,\r\n            queue: context.queue,\r\n            data: { message: message }\r\n        });\r\n        return self();\r\n    }\r\n}); };\r\nvar svgMixinAttrBuilder = function (context, self) { return ({\r\n    svgattr: function (key, value) {\r\n        context.client.dispatch(attrEvent(context, value, function (d) {\r\n            var _a;\r\n            return ({ svgattr: (_a = {}, _a[key] = d, _a) });\r\n        }));\r\n        return self();\r\n    }\r\n}); };\n\nvar builder$1 = function (context, self, construct) {\r\n    return inherit(__assign({ text: function (text) {\r\n            context.client.dispatch(attrEvent(context, text, function (d) { return ({ text: d }); }));\r\n            return self();\r\n        }, align: function (align) {\r\n            context.client.dispatch(attrEvent(context, align, function (d) { return ({ align: d }); }));\r\n            return self();\r\n        }, pos: function (pos) {\r\n            context.client.dispatch(attrEvent(context, pos, function (d) { return ({ pos: d }); }));\r\n            return self();\r\n        }, radius: function (radius) {\r\n            context.client.dispatch(attrEvent(context, radius, function (d) { return ({ radius: d }); }));\r\n            return self();\r\n        }, angle: function (angle) {\r\n            context.client.dispatch(attrEvent(context, angle, function (d) { return ({ angle: d }); }));\r\n            return self();\r\n        }, rotate: function (rotate) {\r\n            context.client.dispatch(attrEvent(context, rotate, function (d) { return ({ rotate: d }); }));\r\n            return self();\r\n        }, color: function (color) {\r\n            context.client.dispatch(attrEvent(context, color, function (d) { return ({ color: d }); }));\r\n            return self();\r\n        }, font: function (font) {\r\n            context.client.dispatch(attrEvent(context, font, function (d) { return ({ font: d }); }));\r\n            return self();\r\n        }, size: function (size) {\r\n            context.client.dispatch(attrEvent(context, size, function (d) { return ({ size: d }); }));\r\n            return self();\r\n        } }, (svgMixinAttrBuilder(context, self))), builder(context, self, construct));\r\n};\r\nvar labelSelection = function (args) {\r\n    return build(builder$1, __assign({}, args, { name: 'labels' }));\r\n};\n\nvar builder$2 = function (context, self, construct) {\r\n    return inherit(__assign({ label: function (id) {\r\n            if (id === void 0) { id = 'value'; }\r\n            return self().labels([id]);\r\n        }, labels: function (ids) {\r\n            return labelSelection(__assign({}, context, { parent: context, ids: ids.map(function (k) { return String(k); }), data: null, initattr: undefined }));\r\n        }, shape: function (shape) {\r\n            context.client.dispatch(attrEvent(context, shape, function (d) { return ({ shape: d }); }));\r\n            return self();\r\n        }, color: function (color) {\r\n            context.client.dispatch(attrEvent(context, color, function (d) { return ({ color: d }); }));\r\n            return self();\r\n        }, size: function (size) {\r\n            context.client.dispatch(attrEvent(context, size, function (d) { return ({ size: d }); }));\r\n            return self();\r\n        }, pos: function (pos) {\r\n            context.client.dispatch(attrEvent(context, pos, function (d) { return ({ pos: d }); }));\r\n            return self();\r\n        }, fixed: function (fixed) {\r\n            context.client.dispatch(attrEvent(context, fixed, function (d) { return ({ fixed: d }); }));\r\n            return self();\r\n        }, draggable: function (draggable) {\r\n            context.client.dispatch(attrEvent(context, draggable, function (d) { return ({ draggable: d }); }));\r\n            return self();\r\n        }, click: function (onClick) {\r\n            context.client.dispatch(attrEvent(context, true, function (d) { return ({ click: d }); }));\r\n            context.ids.forEach(function (id, i) {\r\n                addListener(context.listeners, \"click-node-\" + id, function () { return onClick(context.data[i], i); });\r\n            });\r\n            return self();\r\n        }, hoverin: function (onHoverin) {\r\n            context.client.dispatch(attrEvent(context, true, function (d) { return ({ hover: d }); }));\r\n            context.ids.forEach(function (id, i) {\r\n                addListener(context.listeners, \"hoverin-node-\" + id, function () { return onHoverin(context.data[i], i); });\r\n            });\r\n            return self();\r\n        }, hoverout: function (onHoverout) {\r\n            context.client.dispatch(attrEvent(context, true, function (d) { return ({ hover: d }); }));\r\n            context.ids.forEach(function (id, i) {\r\n                addListener(context.listeners, \"hoverout-node-\" + id, function () { return onHoverout(context.data[i], i); });\r\n            });\r\n            return self();\r\n        } }, (svgMixinAttrBuilder(context, self))), builder(context, self, construct));\r\n};\r\nvar nodeSelection = function (args) {\r\n    return build(builder$2, __assign({}, args, { name: 'nodes' }));\r\n};\n\nvar builder$3 = function (context, self, construct) {\r\n    return inherit(__assign({ traverse: function (source) {\r\n            if (source === void 0) { source = function (e, i) { return context.initattr[i].source; }; }\r\n            return construct(__assign({}, context, { animation: updateAnimation(context, source, function (d) {\r\n                    return ({ type: 'traverse', data: { source: String(d) } });\r\n                }) }));\r\n        }, label: function (id) {\r\n            if (id === void 0) { id = 'weight'; }\r\n            return self().labels([id]);\r\n        }, labels: function (ids) {\r\n            return labelSelection(__assign({}, context, { parent: context, ids: ids.map(function (k) { return String(k); }), data: null, initattr: undefined }));\r\n        }, directed: function (directed) {\r\n            context.client.dispatch(attrEvent(context, directed, function (d) { return ({ directed: d }); }));\r\n            return self();\r\n        }, length: function (length) {\r\n            context.client.dispatch(attrEvent(context, length, function (d) { return ({ length: d }); }));\r\n            return self();\r\n        }, thickness: function (thickness) {\r\n            context.client.dispatch(attrEvent(context, thickness, function (d) { return ({ thickness: d }); }));\r\n            return self();\r\n        }, color: function (color) {\r\n            context.client.dispatch(attrEvent(context, color, function (d) { return ({ color: d }); }));\r\n            return self();\r\n        }, flip: function (flip) {\r\n            context.client.dispatch(attrEvent(context, flip, function (d) { return ({ flip: d }); }));\r\n            return self();\r\n        }, curve: function (curve) {\r\n            context.client.dispatch(attrEvent(context, curve, function (d) { return ({ curve: d }); }));\r\n            return self();\r\n        }, path: function (path) {\r\n            context.client.dispatch(attrEvent(context, path, function (d) { return ({ path: d }); }));\r\n            return self();\r\n        } }, (svgMixinAttrBuilder(context, self))), builder(context, self, construct));\r\n};\r\nvar edgeSelection = function (args) {\r\n    return build(builder$3, __assign({}, args, { name: 'edges' }));\r\n};\n\nvar receiveHandler = function (event$$1, listeners) {\r\n    if (event$$1.type === EnumReceiveType.broadcast)\r\n        triggerListener(listeners, event$$1.data.message);\r\n    else if (event$$1.type === EnumReceiveType.click)\r\n        triggerListener(listeners, \"click-node-\" + event$$1.data.id);\r\n    else if (event$$1.type === EnumReceiveType.hover)\r\n        triggerListener(listeners, (event$$1.data.entered ? 'hoverin' : 'hoverout') + \"-node-\" + event$$1.data.id);\r\n    else if (event$$1.type === EnumReceiveType.error)\r\n        /* tslint:disable */\r\n        console.error(event$$1.data.message);\r\n    /* tslint:enable */\r\n};\r\nvar builder$4 = function (context, self, construct) {\r\n    return inherit(__assign({ node: function (id) {\r\n            return self().nodes([id]);\r\n        }, nodes: function (ids) {\r\n            return nodeSelection(__assign({}, context, { parent: context, ids: ids.map(function (k) { return String(k); }), data: ids.slice(), initattr: undefined }));\r\n        }, edge: function (edge) {\r\n            return self().edges([edge]);\r\n        }, edges: function (edges) {\r\n            var ids = edges.map(function (_a) {\r\n                var source = _a[0], target = _a[1], edgeId = _a[2];\r\n                var orderedNodes = [String(source), String(target)].sort();\r\n                return orderedNodes[0] + \"-\" + orderedNodes[1] + (edgeId !== undefined ? '-' + String(edgeId) : '');\r\n            });\r\n            var initAttr = edges.map(function (_a) {\r\n                var source = _a[0], target = _a[1];\r\n                return ({ source: String(source), target: String(target) });\r\n            });\r\n            return edgeSelection(__assign({}, context, { parent: context, ids: ids, data: edges.slice(), initattr: initAttr }));\r\n        }, label: function (id) {\r\n            if (id === void 0) { id = 'title'; }\r\n            return self().labels([id]);\r\n        }, labels: function (ids) {\r\n            return labelSelection(__assign({}, context, { parent: context, ids: ids.map(function (k) { return String(k); }), data: null, initattr: undefined }));\r\n        }, size: function (size) {\r\n            context.client.dispatch(attrEvent(context, size, function (d) { return ({ size: d }); }));\r\n            return self();\r\n        }, edgelengths: function (lengthInfo) {\r\n            context.client.dispatch(attrEvent(context, lengthInfo, function (d) { return ({ edgelengths: d }); }));\r\n            return self();\r\n        }, pan: function (location) {\r\n            context.client.dispatch(attrEvent(context, location, function (d) { return ({ pan: d }); }));\r\n            return self();\r\n        }, zoom: function (zoom$$1) {\r\n            context.client.dispatch(attrEvent(context, zoom$$1, function (d) { return ({ zoom: d }); }));\r\n            return self();\r\n        }, panlimit: function (box) {\r\n            context.client.dispatch(attrEvent(context, box, function (d) { return ({ panlimit: d }); }));\r\n            return self();\r\n        }, zoomlimit: function (limit) {\r\n            context.client.dispatch(attrEvent(context, limit, function (d) { return ({ zoomlimit: d }); }));\r\n            return self();\r\n        }, zoomkey: function (required) {\r\n            context.client.dispatch(attrEvent(context, required, function (d) { return ({ zoomkey: d }); }));\r\n            return self();\r\n        } }, (svgMixinAttrBuilder(context, self))), builder(context, self, construct));\r\n};\r\nvar canvasSelection = function (id, handler) {\r\n    var context = __assign({}, defaultContext(), { client: handler, name: 'canvas', ids: [String(id)], data: [id] });\r\n    handler.subscribe(function (event$$1) { return receiveHandler(event$$1, context.listeners); });\r\n    return build(builder$4, context);\r\n};\n\nvar initQueue = function (state) {\r\n    return {\r\n        events: [],\r\n        busy: false,\r\n        stopped: state.stopped\r\n    };\r\n};\r\nvar init = function (callback) {\r\n    return {\r\n        callback: callback,\r\n        queues: {},\r\n        stopped: false\r\n    };\r\n};\r\nvar getQueueState = function (state, queue) {\r\n    return state.queues.hasOwnProperty(queue) ? state.queues[queue] : initQueue(state);\r\n};\r\nvar updateQueue = function (state, queue, options) {\r\n    var _a;\r\n    return __assign({}, state, { queues: __assign({}, state.queues, (_a = {}, _a[queue] = __assign({}, getQueueState(state, queue), options), _a)) });\r\n};\r\nvar modifyMultipleQueues = function (state, queues, stateFn, taskFn) {\r\n    return queues.reduce(function (resultTask, q) {\r\n        var newState = stateFn(resultTask.state, q);\r\n        var task = taskFn(newState, q);\r\n        return { state: task.state, execute: function () { task.execute(); resultTask.execute(); } };\r\n    }, { state: state, execute: function () { } });\r\n};\r\nvar start = function (state, queues) {\r\n    var newState = queues === null ? __assign({}, state, { stopped: false }) : state;\r\n    var allQueues = queues === null ? Object.keys(state.queues) : queues;\r\n    return modifyMultipleQueues(newState, allQueues, function (s, q) { return updateQueue(s, q, { stopped: false }); }, function (s, q) { return executeNext(s, q); });\r\n};\r\nvar stop = function (state, queues) {\r\n    var newState = queues === null ? __assign({}, state, { stopped: true }) : state;\r\n    var allQueues = queues === null ? Object.keys(state.queues) : queues;\r\n    var finalState = allQueues.reduce(function (resultState, queue) {\r\n        return updateQueue(resultState, queue, { stopped: true });\r\n    }, newState);\r\n    return { state: finalState, execute: function () { } };\r\n};\r\nvar cancel = function (state, queues) {\r\n    var newState = queues === null ? __assign({}, state, { queues: {} }) : state;\r\n    var allQueues = queues === null ? Object.keys(state.queues) : queues;\r\n    var finalState = allQueues.reduce(function (resultState, queue) {\r\n        return updateQueue(resultState, queue, { events: [], busy: false });\r\n    }, newState);\r\n    return { state: finalState, execute: function () { } };\r\n};\r\nvar schedule = function (state, queue, event$$1) {\r\n    if (queue === null) {\r\n        // execute the event immediately if no queue is specified\r\n        return {\r\n            state: state,\r\n            execute: function () { return state.callback(event$$1, queue); }\r\n        };\r\n    }\r\n    else {\r\n        var queueState = getQueueState(state, queue);\r\n        var newState = updateQueue(state, queue, { events: queueState.events.concat([event$$1]) });\r\n        // only trigger event execution if the queue was previously empty\r\n        if (queueState.events.length === 0)\r\n            return executeNext(newState, queue);\r\n        else\r\n            return { state: newState, execute: function () { } };\r\n    }\r\n};\r\nvar executeNext = function (state, queue, force) {\r\n    if (force === void 0) { force = false; }\r\n    var queueState = getQueueState(state, queue);\r\n    if (queue === null || (!force && queueState.busy)) {\r\n        // if the queue is busy, only execute the next event when forced\r\n        return {\r\n            state: state,\r\n            execute: function () { }\r\n        };\r\n    }\r\n    else if (queueState.stopped || queueState.events.length === 0) {\r\n        // either the queue is stopped or all events have finished, and so it is no longer busy\r\n        return {\r\n            state: updateQueue(state, queue, { busy: false }),\r\n            execute: function () { }\r\n        };\r\n    }\r\n    else if (queue === null || (!force && queueState.busy)) {\r\n        // if the queue is busy, only execute the next event when forced\r\n        return {\r\n            state: state,\r\n            execute: function () { }\r\n        };\r\n    }\r\n    else {\r\n        // get the next event in the queue, delay it if it is a pause event, otherwise execute it immediately\r\n        var event_1 = queueState.events[0];\r\n        var executeFunc = function () {\r\n            if (event_1.type === EnumDispatchType.pause) {\r\n                var delay = event_1.data.duration * 1000;\r\n                setTimeout(function () { return state.callback(event_1, queue); }, delay);\r\n            }\r\n            else\r\n                state.callback(event_1, queue);\r\n        };\r\n        // pop the next event, set it as the current event, and make the queue busy\r\n        return {\r\n            state: updateQueue(state, queue, { events: queueState.events.slice(1), busy: true, current: event_1 }),\r\n            execute: executeFunc\r\n        };\r\n    }\r\n};\r\nvar isQueueUpdateEvent = function (event$$1) {\r\n    return event$$1.type === EnumDispatchType.start || event$$1.type === EnumDispatchType.stop\r\n        || event$$1.type === EnumDispatchType.cancel;\r\n};\r\nvar executeQueueUpdate = function (state, event$$1) {\r\n    if (event$$1.type === EnumDispatchType.start)\r\n        return start(state, event$$1.data.queues);\r\n    else if (event$$1.type === EnumDispatchType.stop)\r\n        return stop(state, event$$1.data.queues);\r\n    else\r\n        return cancel(state, event$$1.data.queues);\r\n};\r\nvar execute = function (state, queue, event$$1, callback) {\r\n    // check if the event is valid\r\n    if (queue === null || getQueueState(state, queue).current === event$$1) {\r\n        if (isQueueUpdateEvent(event$$1)) {\r\n            // process start, stop and cancel\r\n            var queueTask_1 = executeQueueUpdate(state, event$$1);\r\n            // force-trigger the next event\r\n            var nextTask_1 = executeNext(queueTask_1.state, queue, true);\r\n            return {\r\n                state: nextTask_1.state,\r\n                execute: function () { queueTask_1.execute(); nextTask_1.execute(); }\r\n            };\r\n        }\r\n        else {\r\n            // force-trigger the next event\r\n            var nextTask_2 = executeNext(state, queue, true);\r\n            return {\r\n                state: nextTask_2.state,\r\n                execute: function () { callback(event$$1); nextTask_2.execute(); }\r\n            };\r\n        }\r\n    }\r\n    else\r\n        return { state: state, execute: function () { } };\r\n};\n\n\n\nvar d3$2 = /*#__PURE__*/Object.freeze({\n    select: select,\n    selectAll: selectAll,\n    event: event,\n    transition: transition,\n    ease: d3,\n    dispatch: dispatch,\n    timer: timer,\n    drag: drag,\n    shape: d3$1,\n    zoom: zoom,\n    zoomIdentity: zoomIdentity\n});\n\nvar isTransition = function (sel) {\r\n    return sel.duration !== undefined;\r\n};\r\nvar COLORS = {\r\n    navy: '#00229e',\r\n    blue: '#2957c4',\r\n    aqua: '#19c3d6',\r\n    teal: '#05827d',\r\n    olive: '#006333',\r\n    green: '#05914d',\r\n    lime: '#12bc6b',\r\n    yellow: '#cc9918',\r\n    orange: '#dd7d0f',\r\n    red: '#af1c1c',\r\n    pink: '#d14db0',\r\n    fuchsia: '#bc2990',\r\n    purple: '#a31578',\r\n    maroon: '#7c0606',\r\n    white: '#ffffff',\r\n    lightgray: '#b5b5b5',\r\n    lightgrey: '#b5b5b5',\r\n    gray: '#969696',\r\n    grey: '#969696',\r\n    darkgray: '#323232',\r\n    darkgrey: '#323232',\r\n    black: '#111111'\r\n};\r\nvar parseColor = function (color) {\r\n    var parsedColor = dashToUpperCamel(color.trim()).toLowerCase();\r\n    if (Object.keys(COLORS).includes(parsedColor))\r\n        return COLORS[parsedColor];\r\n    else\r\n        return color;\r\n};\r\nvar renderId = function (id) {\r\n    /* tslint:disable */\r\n    var hash = id.split('').reduce(function (h, c) {\r\n        var newHash = ((h << 5) - h) + c.charCodeAt(0);\r\n        return newHash & newHash;\r\n    }, 0);\r\n    return (hash >>> 0).toString(16);\r\n    /* tslint:enable */\r\n};\r\nvar selectOrAdd = function (selection, selector, addFn) {\r\n    var selected = selection.select(selector);\r\n    if (selected.empty())\r\n        return addFn(selection);\r\n    else\r\n        return selected;\r\n};\r\nvar dashToUpperCamel = function (str) {\r\n    return str.split('-').map(function (s) { return s.charAt(0).toUpperCase() + s.substr(1); }).join('');\r\n};\r\nvar easeFn = function (name) {\r\n    // e.g. convert 'linear' to 'easeLinear'\r\n    return d3['ease' + dashToUpperCamel(name)];\r\n};\r\nvar isSafari = function () {\r\n    return navigator && navigator.userAgent !== undefined\r\n        && /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n};\r\nvar isInBrowser = function () {\r\n    return typeof window !== undefined;\r\n};\n\nvar selectCanvasContainer = function (canvas) {\r\n    return typeof canvas === 'string' ? select(\"#\" + canvas) : select(canvas);\r\n};\r\nvar selectCanvas = function (canvas) {\r\n    var container = selectCanvasContainer(canvas);\r\n    return selectOrAdd(container, '.algorithmx', function (s) { return s.append('svg').classed('algorithmx', true); });\r\n};\r\nvar selectCanvasInner = function (sel) {\r\n    return selectOrAdd(sel, 'g', function (s) { return s.append('g'); });\r\n};\r\nvar selectSafariFix = function (sel) {\r\n    return selectOrAdd(sel, 'rect', function (s) { return s.append('rect').classed('safari-fix', true)\r\n        .attr('width', '100%').attr('height', '100%').attr('fill', 'none'); });\r\n};\r\nvar selectNodeGroup = function (sel) {\r\n    return selectOrAdd(sel, '.nodes', function (s) { return s.append('g').classed('nodes', true); });\r\n};\r\nvar selectEdgeGroup = function (sel) {\r\n    return selectOrAdd(sel, '.edges', function (s) { return s.append('g').classed('edges', true); });\r\n};\r\nvar selectLabelGroup = function (sel) {\r\n    return selectOrAdd(sel, '.labels', function (s) { return s.append('g').classed('labels', true); });\r\n};\r\nvar selectNode = function (sel, id) {\r\n    var renderId$$1 = renderId(id);\r\n    return selectOrAdd(sel, \"#node-\" + renderId$$1, function (s) { return s.append('g').attr('id', \"node-\" + renderId$$1); });\r\n};\r\nvar selectEdge = function (sel, id) {\r\n    var renderId$$1 = renderId(id);\r\n    return selectOrAdd(sel, \"#edge-\" + renderId$$1, function (s) { return s.append('g').attr('id', \"edge-\" + renderId$$1); });\r\n};\r\nvar selectLabel = function (sel, id) {\r\n    var renderId$$1 = renderId(id);\r\n    return selectOrAdd(sel, \"#label-\" + renderId$$1, function (s) { return s.append('g').attr('id', \"label-\" + renderId$$1); });\r\n};\r\nvar getCanvasSize = function (canvas) {\r\n    var svgBase = selectCanvasContainer(canvas);\r\n    var size = [\r\n        svgBase.node().getBoundingClientRect().width,\r\n        svgBase.node().getBoundingClientRect().height\r\n    ];\r\n    if (size[0] !== 0 && size[1] !== 0)\r\n        return size;\r\n    else\r\n        return [100, 100];\r\n};\n\nvar flatten = function (renderData) {\r\n    var mapped = mapDict(renderData.attr, function (k) { return getEntry(renderData, k); });\r\n    return combine(mapped);\r\n};\r\nvar combine = function (renderDict) {\r\n    var hasHighlight = !isDictEmpty(filterDict(renderDict, function (k, v) { return v.highlight !== undefined; }));\r\n    var highlight = !hasHighlight ? undefined : mapDict(renderDict, function (k, v) {\r\n        return v.highlight !== undefined ? v.highlight : v.attr;\r\n    });\r\n    var changesDict = filterDict(mapDict(renderDict, function (k, v) { return v.changes; }), function (k, v) { return v !== undefined; });\r\n    var changes = isDictEmpty(changesDict) ? undefined : changesDict;\r\n    var animation = Object.entries(renderDict).reduce(// result = [animation, lockedIn]\r\n    function (result, _a, i) {\r\n        var k = _a[0], renderData = _a[1];\r\n        if (result[1] === false && renderData.changes !== undefined && renderData.animation !== undefined)\r\n            return [renderData.animation, true];\r\n        else if (result[0] === undefined && renderData.animation !== undefined)\r\n            return [renderData.animation, false];\r\n        else\r\n            return result;\r\n    }, [undefined, false])[0];\r\n    var attr = mapDict(renderDict, function (k, v) { return v.attr; });\r\n    return {\r\n        name: Object.keys(renderDict).reduce(function (result, k, i) { return result + (i === 0 ? '' : '-') + k; }),\r\n        attr: attr,\r\n        changes: changes,\r\n        animation: animation,\r\n        highlight: highlight\r\n    };\r\n};\r\nvar getEntry = function (renderData, key) {\r\n    return {\r\n        name: key,\r\n        attr: renderData.attr[key],\r\n        animation: (renderData.animation || {})[key],\r\n        changes: (renderData.changes || {})[key],\r\n        highlight: (renderData.highlight || {})[key]\r\n    };\r\n};\r\nvar hasChanged = function (renderAttr) {\r\n    return renderAttr.changes !== undefined || renderAttr.highlight !== undefined;\r\n};\r\nvar markForUpdate = function (renderAttr) {\r\n    return markKeysForUpdate(renderAttr, Object.keys(renderAttr.attr));\r\n};\r\nvar markKeysForUpdate = function (renderAttr, keys) {\r\n    var newChanges = keys.reduce(function (result, k) {\r\n        var _a;\r\n        return (__assign({}, result, (_a = {}, _a[k] = renderAttr.attr[k], _a)));\r\n    }, {});\r\n    return __assign({}, renderAttr, { changes: __assign({}, renderAttr.changes || {}, newChanges) });\r\n};\n\nvar canAnimate = function () {\r\n    // only browsers support animations\r\n    return isInBrowser();\r\n};\r\nvar transition$1 = function (selection, name, callback) {\r\n    if (!canAnimate())\r\n        return selection;\r\n    else\r\n        return callback(selection.transition(name));\r\n};\r\nvar newTransition = function (selection, callback) {\r\n    if (!canAnimate())\r\n        return selection;\r\n    else\r\n        return callback(selection.transition());\r\n};\r\nvar parseTime = function (time) {\r\n    return time * 1000;\r\n};\r\nvar isAnimationImmediate = function (animation) {\r\n    return animation === undefined || animation.duration === 0;\r\n};\r\nvar transAnimate = function (trans, animation) {\r\n    if (isAnimationImmediate(animation))\r\n        return trans.duration(0);\r\n    else\r\n        return trans.duration(parseTime(animation.duration)).ease(easeFn(animation.ease));\r\n};\r\nvar animate = function (selection, name, animation) {\r\n    if (isAnimationImmediate(animation)) {\r\n        selection.interrupt(name); // cancel previous transition\r\n        return selection;\r\n    }\r\n    else {\r\n        return transition$1(selection, name, function (t) { return transAnimate(t, animation); });\r\n    }\r\n};\r\nvar onChanged = function (selection, renderData, callback) {\r\n    if (hasChanged(renderData))\r\n        callback(selection, renderData);\r\n};\r\nvar render = function (selection, renderData, renderFn) {\r\n    if (renderData.highlight !== undefined)\r\n        return renderHighlight(selection, renderData, renderFn, renderFn);\r\n    else\r\n        return renderNoHighlight(selection, renderData, renderFn);\r\n};\r\nvar renderNoHighlight = function (selection, renderData, renderFn) {\r\n    if (renderData.changes !== undefined) {\r\n        return renderFn(animate(selection, renderData.name, renderData.animation), renderData.attr);\r\n    }\r\n    else\r\n        return selection;\r\n};\r\nvar renderHighlight = function (selection, renderData, renderStartFn, renderEndFn) {\r\n    var initTrans = renderStartFn(animate(selection, renderData.name, renderData.animation), renderData.highlight);\r\n    var linger = renderData.animation ? parseTime(renderData.animation.linger) : 0;\r\n    var newTrans = newTransition(initTrans, function (t) { return transAnimate(t.delay(linger), renderData.animation); });\r\n    return renderEndFn(newTrans, renderData.attr);\r\n};\r\nvar renderLookup = function (renderData, renderFn) {\r\n    Object.entries(renderData.attr).forEach(function (_a) {\r\n        var k = _a[0], v = _a[1];\r\n        var entry = getEntry(renderData, k);\r\n        if (v !== null && hasChanged(entry))\r\n            renderFn(k, entry);\r\n    });\r\n};\r\nvar renderLookupRemovals = function (renderData, renderFn) {\r\n    Object.entries(renderData.changes || {}).forEach(function (_a) {\r\n        var k = _a[0], v = _a[1];\r\n        var entry = getEntry(renderData, k);\r\n        if (v === null)\r\n            renderFn(k, entry);\r\n    });\r\n};\n\nvar MARKER_SIZE = 10;\r\nvar MARKER_ARROW = {\r\n    path: 'M 0,0 m -5,-5 L 5,0 L -5,5 Z',\r\n    viewBox: '-5 -5 10 10',\r\n    size: MARKER_SIZE\r\n};\r\nvar getFullId = function (edgeSel, markerId) {\r\n    var markerSel = edgeSel.select('defs').select(\".marker-\" + markerId);\r\n    if (!markerSel.empty()) {\r\n        return markerSel.attr('id');\r\n    }\r\n    else {\r\n        return \"marker-\" + randomId();\r\n    }\r\n};\r\nvar select$1 = function (edgeSel, markerId) {\r\n    var defsSel = selectOrAdd(edgeSel, 'defs', function (s) { return s.insert('svg:defs', ':first-child'); });\r\n    var fullId = getFullId(edgeSel, markerId);\r\n    return selectOrAdd(defsSel, \"#\" + fullId, function (s) {\r\n        var marker = s.append('svg:marker').attr('id', fullId).classed(\"marker-\" + markerId, true);\r\n        marker.append('path');\r\n        return marker;\r\n    });\r\n};\r\nvar render$1 = function (selection, renderData) {\r\n    render(selection, getEntry(renderData, 'directed'), function (sel, directed) {\r\n        if (directed) {\r\n            var marketTarget = select$1(selection, 'target');\r\n            var shape = MARKER_ARROW;\r\n            marketTarget.attr('viewBox', shape.viewBox)\r\n                .attr('markerWidth', shape.size).attr('markerHeight', shape.size)\r\n                .attr('markerUnits', 'userSpaceOnUse')\r\n                .attr('orient', 'auto').attr('refX', 0).attr('refY', 0);\r\n            marketTarget.select('path')\r\n                .attr('d', shape.path)\r\n                .attr('fill', parseColor(renderData.attr.color));\r\n            return sel;\r\n        }\r\n        else {\r\n            selection.select('defs').remove();\r\n            return sel;\r\n        }\r\n    });\r\n};\n\nvar renderVisibleLookup = function (renderData, renderFn) {\r\n    return renderLookup(renderData, function (k, data) {\r\n        if (data.attr.visible)\r\n            renderFn(k, data);\r\n    });\r\n};\r\nvar renderSvgAttr = function (selection, key, valueFn, attr) {\r\n    return render(selection, attr, function (s, a) {\r\n        return s.attr(key, valueFn(a));\r\n    });\r\n};\r\nvar renderSvgAttrMixin = function (selection, renderData) {\r\n    var precessKey = function (sel, key) { return [\r\n        key.includes('@') ? sel.selectAll(key.split('@')[1]) : sel,\r\n        key.includes('@') ? key.split('@')[0] : key\r\n    ]; };\r\n    renderLookup(getEntry(renderData, 'svgattr'), function (_, d) {\r\n        var _a = precessKey(selection, d.name), s = _a[0], k = _a[1];\r\n        renderSvgAttr(s, k, function (v) { return v; }, d);\r\n    });\r\n    renderLookupRemovals(getEntry(renderData, 'svgattr'), function (_, d) {\r\n        var _a = precessKey(selection, d.name), s = _a[0], k = _a[1];\r\n        renderSvgAttr(s, k, function (v) { return null; }, d);\r\n    });\r\n};\r\nvar animateAdd = function (selection, animation) {\r\n    selection.attr('opacity', '0');\r\n    var transition$$1 = animate(selection, 'visible-fade', animation).attr('opacity', '1');\r\n    newTransition(transition$$1, function (t) { return t; }).attr('opacity', null);\r\n};\r\nvar animateRemove = function (selection, animation) {\r\n    selection.attr('opacity', '1');\r\n    animate(selection, 'visible-fade', animation).attr('opacity', '0');\r\n};\r\nvar renderVisible = function (selection, renderData) {\r\n    onChanged(selection, renderData, function (sel, visible) {\r\n        if (!isAnimationImmediate(visible.animation)) {\r\n            if (visible.attr === true)\r\n                animateAdd(sel, visible.animation);\r\n            else\r\n                animateRemove(sel, visible.animation);\r\n        }\r\n    });\r\n};\r\nvar renderRemove = function (selection, renderData) {\r\n    onChanged(selection, renderData, function (sel, visible) {\r\n        if (visible.attr === false) {\r\n            if (isAnimationImmediate(visible.animation))\r\n                sel.remove();\r\n            else\r\n                transition$1(sel, 'remove', function (t) { return t.delay(parseTime(visible.animation.duration)); }).remove();\r\n        }\r\n    });\r\n};\r\nvar preprocess = function (renderData) {\r\n    var visibleData = getEntry(renderData, 'visible');\r\n    return hasChanged(visibleData) && visibleData.attr === true\r\n        ? markForUpdate(renderData) : renderData;\r\n};\r\nvar renderElementRemove = function (selection, renderData) {\r\n    var newVisible = { attr: { visible: false }, changes: { visible: false } };\r\n    var visibleData = getEntry(__assign({}, renderData, newVisible), 'visible');\r\n    renderVisible(selection, visibleData);\r\n    renderRemove(selection, visibleData);\r\n};\r\nvar renderElement = function (selector, renderData, renderFn) {\r\n    var renderDataFull = preprocess(renderData);\r\n    var visibleData = getEntry(renderData, 'visible');\r\n    if (hasChanged(visibleData) && visibleData.attr === true)\r\n        selector().remove();\r\n    var selection = selector();\r\n    renderFn(selection, renderDataFull);\r\n    renderVisible(selection, visibleData);\r\n    renderRemove(selection, visibleData);\r\n};\r\nvar renderElementLookup = function (selector, renderData, renderFn) {\r\n    renderLookup(renderData, function (k, data) {\r\n        return renderElement(function () { return selector(k); }, data, renderFn);\r\n    });\r\n    renderLookupRemovals(renderData, function (k, data) {\r\n        return renderElementRemove(selector(k), data);\r\n    });\r\n};\n\nvar selectOverlay = function (edgeSel, renderData) {\r\n    edgeSel.select('.edge-path-overlay').remove();\r\n    var overlay = edgeSel.append('path').classed('edge-path-overlay', true)\r\n        .attr('fill', 'none').attr('stroke-linecap', 'butt');\r\n    if (renderData.attr.directed)\r\n        overlay.attr('marker-end', \"url(#\" + getFullId(edgeSel, 'target'));\r\n    return overlay;\r\n};\r\nvar getPathLength = function (pathSel) { return pathSel.node().getTotalLength(); };\r\nvar reverseDirection = function (renderData) {\r\n    var colorData = getEntry(renderData, 'color');\r\n    if (!colorData.animation || !colorData.animation.data || !colorData.animation.data.source)\r\n        return false;\r\n    else\r\n        return renderData.attr.source !== renderData.animation.color.data.source;\r\n};\r\nvar tweenOverlay = function (overlaySel, reverse, pathLengthFn, beginTraverse) {\r\n    if (isTransition(overlaySel)) {\r\n        return overlaySel.attrTween('stroke-dashoffset', function () {\r\n            var pathLength = pathLengthFn();\r\n            if (beginTraverse)\r\n                return function (t) { return (pathLength - (reverse ? -t : t) * pathLength).toString(); };\r\n            else\r\n                return function (t) { return (pathLength * 2 - (reverse ? -t : t) * pathLength).toString(); };\r\n        });\r\n    }\r\n    else\r\n        return overlaySel.attr('stroke-dashoffset', beginTraverse ? 0 : pathLengthFn());\r\n};\r\nvar highlightTraverse = function (pathSel, overlaySel, renderData) {\r\n    var colorData = getEntry(renderData, 'color');\r\n    var reverse = reverseDirection(renderData);\r\n    overlaySel.attr('stroke', parseColor(colorData.highlight))\r\n        .attr('stroke-width', renderData.attr.thickness + 2);\r\n    var startFn = function (sel) {\r\n        var trans = sel.attr('stroke-width', renderData.attr.thickness);\r\n        return tweenOverlay(trans, reverse, function () { return getPathLength(pathSel); }, true);\r\n    };\r\n    var endFn = function (sel) {\r\n        sel.on('start', function () {\r\n            var pathLength = getPathLength(pathSel);\r\n            overlaySel.attr('stroke-dasharray', pathLength);\r\n        });\r\n        var trans = tweenOverlay(sel, reverse, function () { return getPathLength(pathSel); }, false);\r\n        return newTransition(trans, function (t) { return t.duration(0); }).remove();\r\n    };\r\n    renderHighlight(overlaySel, colorData, startFn, endFn);\r\n};\r\nvar renderTraverse = function (pathSel, renderData, overlaySelector) {\r\n    var colorData = getEntry(renderData, 'color');\r\n    var reverse = reverseDirection(renderData);\r\n    var overlaySel = overlaySelector();\r\n    var pathLengthInit = getPathLength(pathSel);\r\n    overlaySel.attr('stroke-dasharray', pathLengthInit).attr('stroke-dashoffset', pathLengthInit);\r\n    if (colorData.highlight !== undefined)\r\n        highlightTraverse(pathSel, overlaySel, renderData);\r\n    else {\r\n        overlaySel.attr('stroke', parseColor(colorData.attr))\r\n            .attr('stroke-width', renderData.attr.thickness + 2);\r\n        render(overlaySel, colorData, function (sel) {\r\n            var trans = sel.attr('stroke-width', renderData.attr.thickness);\r\n            return tweenOverlay(trans, reverse, function () { return getPathLength(pathSel); }, true);\r\n        });\r\n        var animDuration_1 = parseTime(colorData.animation.duration);\r\n        var endDuration_1 = animDuration_1 / 3;\r\n        transition$1(pathSel, colorData.name, function (t) {\r\n            return t.delay(animDuration_1).duration(endDuration_1);\r\n        })\r\n            .attr('stroke', parseColor(colorData.attr));\r\n        var removeTrans = newTransition(overlaySel.attr('opacity', 1), function (t) {\r\n            return t.delay(animDuration_1 + endDuration_1).duration(endDuration_1);\r\n        })\r\n            .attr('opacity', 0);\r\n        newTransition(removeTrans, function (t) { return t.duration(0); }).remove();\r\n    }\r\n};\r\nvar renderColor = function (pathSel, markerSelector, overlaySelector, renderData) {\r\n    var colorData = getEntry(renderData, 'color');\r\n    var doTraverse = colorData.animation && colorData.animation.type === 'traverse';\r\n    if (doTraverse)\r\n        renderTraverse(pathSel, renderData, overlaySelector);\r\n    else\r\n        renderSvgAttr(pathSel, 'stroke', function (v) { return parseColor(v); }, colorData);\r\n    if (renderData.attr.directed)\r\n        renderSvgAttr(markerSelector(), 'fill', function (v) { return parseColor(v); }, colorData);\r\n};\n\nvar AttrType;\r\n(function (AttrType) {\r\n    AttrType[\"Number\"] = \"number\";\r\n    AttrType[\"String\"] = \"string\";\r\n    AttrType[\"Boolean\"] = \"boolean\";\r\n    AttrType[\"Array\"] = \"array\";\r\n    AttrType[\"Record\"] = \"record\";\r\n    AttrType[\"Lookup\"] = \"lookup\";\r\n    AttrType[\"Any\"] = \"any\";\r\n})(AttrType || (AttrType = {}));\r\nvar extendRecordDef = function (extendDef, baseDef) {\r\n    return __assign({}, extendDef, { entries: __assign({}, baseDef.entries, extendDef.entries), keyOrder: baseDef.keyOrder.concat(extendDef.keyOrder) });\r\n};\n\nvar defaults = {\r\n    visible: true\r\n};\r\nvar definition = {\r\n    type: AttrType.Record,\r\n    entries: {\r\n        visible: { type: AttrType.Boolean }\r\n    },\r\n    keyOrder: ['visible']\r\n};\r\nvar animationDefaults = {\r\n    visible: { type: 'normal' }\r\n};\r\nvar svgMixinDefEntries = {\r\n    svgattr: { type: AttrType.Lookup, entry: { type: AttrType.String } }\r\n};\r\nvar svgMixinDefKeys = ['svgattr'];\r\nvar svgMixinDefaults = {\r\n    svgattr: {}\r\n};\n\nvar angleToRad = function (angleDeg) { return angleDeg * Math.PI / 180; };\r\nvar angleToDeg = function (angleRad) { return angleRad * 180 / Math.PI; };\r\nvar restrictAngle = function (angle) {\r\n    return (angle < 0 ? Math.PI * 2 - (-angle % (Math.PI * 2)) : angle) % (Math.PI * 2);\r\n};\r\nvar radiusAtAngleRect = function (angle, rx, ry) {\r\n    var a = restrictAngle(angle);\r\n    var cornerAngle = Math.atan2(ry, rx);\r\n    if (a >= 0 && a < cornerAngle) {\r\n        return rx / Math.cos(a);\r\n    }\r\n    else if (a >= cornerAngle && a < Math.PI - cornerAngle) {\r\n        return ry / Math.cos(a - (Math.PI / 2));\r\n    }\r\n    else if (a >= Math.PI - cornerAngle && a < Math.PI + cornerAngle) {\r\n        return rx / Math.cos(a - Math.PI);\r\n    }\r\n    else if (a >= Math.PI + cornerAngle && a < (Math.PI * 2) - cornerAngle) {\r\n        return ry / Math.cos(a - (Math.PI * 3 / 2));\r\n    }\r\n    else\r\n        return rx / Math.cos((Math.PI * 2) - a);\r\n};\r\nvar rotate = function (_a, angle) {\r\n    var x = _a[0], y = _a[1];\r\n    return [\r\n        x * Math.cos(angle) - y * Math.sin(angle),\r\n        y * Math.cos(angle) + x * Math.sin(angle)\r\n    ];\r\n};\r\nvar translate = function (_a, _b) {\r\n    var x = _a[0], y = _a[1];\r\n    var tx = _b[0], ty = _b[1];\r\n    return [x + tx, y + ty];\r\n};\n\nvar EnumAlign;\r\n(function (EnumAlign) {\r\n    EnumAlign[\"top-left\"] = \"top-left\";\r\n    EnumAlign[\"top-middle\"] = \"top-middle\";\r\n    EnumAlign[\"top-right\"] = \"top-right\";\r\n    EnumAlign[\"middle-left\"] = \"middle-left\";\r\n    EnumAlign[\"middle\"] = \"middle\";\r\n    EnumAlign[\"middle-right\"] = \"middle-right\";\r\n    EnumAlign[\"bottom-left\"] = \"bottom-left\";\r\n    EnumAlign[\"bottom-middle\"] = \"bottom-middle\";\r\n    EnumAlign[\"bottom-right\"] = \"bottom-right\";\r\n    EnumAlign[\"radial\"] = \"radial\";\r\n})(EnumAlign || (EnumAlign = {}));\r\nvar ALIGN_ANGLES = {\r\n    'top-left': Math.PI * 3 / 4,\r\n    'top-middle': Math.PI * 1 / 2,\r\n    'top-right': Math.PI * 1 / 4,\r\n    'middle-left': Math.PI,\r\n    'middle': Math.PI * 3 / 2,\r\n    'middle-right': 0,\r\n    'bottom-left': Math.PI * 5 / 4,\r\n    'bottom-middle': Math.PI * 3 / 2,\r\n    'bottom-right': Math.PI * 7 / 4,\r\n    'radial': 0\r\n};\r\nvar definition$1 = extendRecordDef({\r\n    entries: __assign({ text: { type: AttrType.String }, align: { type: AttrType.String, validValues: enumValues(EnumAlign) }, pos: { type: AttrType.Record, entries: {\r\n                x: { type: AttrType.Number },\r\n                y: { type: AttrType.Number }\r\n            }, keyOrder: ['x', 'y'] }, radius: { type: AttrType.Number }, angle: { type: AttrType.Number }, rotate: { type: AttrType.Boolean }, color: { type: AttrType.String }, font: { type: AttrType.String }, size: { type: AttrType.Number } }, svgMixinDefEntries),\r\n    type: AttrType.Record,\r\n    keyOrder: ['text', 'align', 'pos', 'radius', 'angle', 'rotate', 'align', 'color', 'font', 'size'].concat(svgMixinDefKeys)\r\n}, definition);\r\nvar defaults$1 = __assign({}, defaults, { text: '', align: 'bottom-middle', pos: { x: 0, y: 0 }, radius: 0, angle: 90, rotate: false, color: COLORS.gray, font: 'Arial, Helvetica, sans-serif', size: 12 }, svgMixinDefaults);\r\nvar animationDefaults$1 = __assign({}, animationDefaults);\r\nvar alignFromAngle = function (angle, rotate$$1) {\r\n    if (rotate$$1)\r\n        return restrictAngle(angle) < Math.PI ? 'bottom-middle' : 'top-middle';\r\n    var testAngle = restrictAngle(angle + Math.PI);\r\n    var radialAligns = Object.keys(ALIGN_ANGLES)\r\n        .filter(function (v) { return v !== 'middle' && v !== 'radial'; })\r\n        .sort(function (a, b) { return ALIGN_ANGLES[a] < ALIGN_ANGLES[b] ? -1 : 0; });\r\n    return radialAligns.find(function (align, i) {\r\n        var prevAngle = (i === 0) ? -ALIGN_ANGLES[radialAligns[1]] : ALIGN_ANGLES[radialAligns[i - 1]];\r\n        var curAngle = ALIGN_ANGLES[radialAligns[i]];\r\n        var nextAngle = (i === radialAligns.length - 1) ? Math.PI * 2 : ALIGN_ANGLES[radialAligns[i + 1]];\r\n        return testAngle > (prevAngle + curAngle) / 2 && testAngle <= (curAngle + nextAngle) / 2;\r\n    });\r\n};\r\nvar init$1 = function (name) {\r\n    return __assign({}, defaults$1, { text: name });\r\n};\n\nvar renderPos = function (selection, posData) {\r\n    var polarX = posData.radius * Math.cos(posData.angle);\r\n    var polarY = posData.radius * Math.sin(posData.angle);\r\n    var rotation = restrictAngle(-posData.angle + ALIGN_ANGLES[posData.align] + Math.PI);\r\n    var rotateStr = posData.rotate ? \"rotate(\" + angleToDeg(rotation) + \")\" : '';\r\n    return selection.attr('transform', \"translate(\" + (posData.x + polarX) + \",\" + -(posData.y + polarY) + \")\" + rotateStr);\r\n};\r\nvar isAlignTop = function (a) { return a === 'top-left' || a === 'top-middle' || a === 'top-right'; };\r\nvar isAlignBottom = function (a) { return a === 'bottom-left' || a === 'bottom-middle' || a === 'bottom-right'; };\r\nvar renderAlign = function (selection, renderData) {\r\n    renderSvgAttr(selection, 'y', function (v) {\r\n        return isAlignTop(v) ? '0.75em' : isAlignBottom(v) ? '0em' : '0.25em';\r\n    }, __assign({}, renderData, { name: renderData.name + '-y' }));\r\n    renderSvgAttr(selection, 'text-anchor', function (v) {\r\n        return v === 'top-left' || v === 'middle-left' || v === 'bottom-left' ? 'start'\r\n            : v === 'top-right' || v === 'middle-right' || v === 'bottom-right' ? 'end'\r\n                : 'middle';\r\n    }, __assign({}, renderData, { name: renderData.name + '-x' }));\r\n};\r\nvar renderText = function (textSel, text, align) {\r\n    var splitText = text.split('\\n');\r\n    textSel.selectAll('tspan').remove();\r\n    splitText.forEach(function (line$$1, i) {\r\n        var lineHeight = 1.2;\r\n        var initOffset = isAlignTop(align) ? 0\r\n            : isAlignBottom(align) ? (splitText.length - 1) * lineHeight\r\n                : ((splitText.length - 1) / 2) * lineHeight;\r\n        textSel.append('tspan').attr('x', 0).attr('dy', i === 0 ? \"-\" + initOffset + \"em\" : lineHeight + \"em\").text(line$$1);\r\n    });\r\n};\r\nvar preprocessAlign = function (labelData) {\r\n    var align = labelData.attr.align;\r\n    var changedRadialAlign = labelData.changes && (labelData.changes.align !== undefined\r\n        || labelData.changes.angle !== undefined || labelData.changes.rotate !== undefined);\r\n    return __assign({}, getEntry(labelData, 'align'), { attr: align === 'radial' ? alignFromAngle(angleToRad(labelData.attr.angle), labelData.attr.rotate)\r\n            : align, changes: align === 'radial' && changedRadialAlign ? align\r\n            : (labelData.changes ? labelData.changes.align : undefined) });\r\n};\r\nvar render$2 = function (selection, renderData) {\r\n    var alignData = preprocessAlign(renderData);\r\n    var textSel = selectOrAdd(selection, 'text', function (s) {\r\n        return s.append('text').attr('pointer-events', 'none');\r\n    });\r\n    var combinedTextAlign = combine({ text: getEntry(renderData, 'text'), align: alignData });\r\n    render(textSel, combinedTextAlign, function (sel, textData) {\r\n        renderText(textSel, textData.text, textData.align);\r\n        return sel;\r\n    });\r\n    var combinedPos = combine({\r\n        x: getEntry(getEntry(renderData, 'pos'), 'x'),\r\n        y: getEntry(getEntry(renderData, 'pos'), 'y'),\r\n        radius: getEntry(renderData, 'radius'),\r\n        angle: getEntry(renderData, 'angle'),\r\n        rotate: getEntry(renderData, 'rotate'),\r\n        align: alignData\r\n    });\r\n    render(textSel, combinedPos, function (sel, posData) {\r\n        return renderPos(sel, __assign({}, posData, { angle: angleToRad(posData.angle) }));\r\n    });\r\n    renderAlign(textSel, alignData);\r\n    renderSvgAttr(textSel, 'fill', function (v) { return parseColor(v); }, getEntry(renderData, 'color'));\r\n    renderSvgAttr(textSel, 'font-family', function (v) { return v; }, getEntry(renderData, 'font'));\r\n    renderSvgAttr(textSel, 'font-size', function (v) { return v; }, getEntry(renderData, 'size'));\r\n    renderSvgAttrMixin(textSel, renderData);\r\n};\n\nvar selectLabelGroup$1 = function (sel) {\r\n    return selectOrAdd(sel, '.edge-labels', function (s) { return s.append('g').classed('edge-labels', true); });\r\n};\r\nvar selectLabel$1 = function (sel, id) {\r\n    var renderId$$1 = renderId(id);\r\n    return selectOrAdd(sel, \"#label-\" + renderId$$1, function (s) { return s.append('g').attr('id', \"label-\" + renderId$$1); });\r\n};\r\nvar render$3 = function (selection, renderData) {\r\n    var pathSel = selectOrAdd(selection, '.edge-path', function (s) {\r\n        return s.append('path').classed('edge-path', true).attr('fill', 'none').attr('stroke-linecap', 'round');\r\n    });\r\n    var labelGroup = selectLabelGroup$1(selection);\r\n    renderElementLookup(function (k) { return selectLabel$1(labelGroup, k); }, getEntry(renderData, 'labels'), render$2);\r\n    renderSvgAttr(pathSel, 'stroke-width', function (v) { return v; }, getEntry(renderData, 'thickness'));\r\n    render$1(selection, renderData);\r\n    renderSvgAttr(pathSel, 'marker-end', function (v) {\r\n        return v ? \"url(#\" + getFullId(selection, 'target') + \")\" : null;\r\n    }, getEntry(renderData, 'directed'));\r\n    var markerSelector = function () { return select$1(selection, 'target').select('path'); };\r\n    var overlaySelector = function () { return selectOverlay(selection, renderData); };\r\n    renderColor(pathSel, markerSelector, overlaySelector, renderData);\r\n    renderSvgAttrMixin(pathSel, renderData);\r\n};\n\nvar EnumVarSymbol;\r\n(function (EnumVarSymbol) {\r\n    EnumVarSymbol[\"Width\"] = \"x\";\r\n    EnumVarSymbol[\"Height\"] = \"y\";\r\n    EnumVarSymbol[\"Radius\"] = \"r\";\r\n    EnumVarSymbol[\"Angle\"] = \"a\";\r\n    EnumVarSymbol[\"CanvasWidth\"] = \"cx\";\r\n    EnumVarSymbol[\"CanvasHeight\"] = \"cy\";\r\n})(EnumVarSymbol || (EnumVarSymbol = {}));\n\nvar getChildDef = function (def, k) {\r\n    return isDefRecord(def) ? def.entries[k]\r\n        : isDefLookup(def) || isDefArray(def) ? def.entry\r\n            : def;\r\n};\r\nvar isDefRecord = function (def) { return def.type === AttrType.Record; };\r\nvar isDefLookup = function (def) { return def.type === AttrType.Lookup; };\r\nvar isDefArray = function (def) { return def.type === AttrType.Array; };\r\nvar isDefPrimitive = function (def) {\r\n    return !isDefRecord(def) && !isDefLookup(def) && !isDefArray(def);\r\n};\r\nfunction reduce(attr, def, fn, init) {\r\n    if (isDefRecord(def) || isDefLookup(def))\r\n        return Object.entries(attr).reduce(function (result, _a) {\r\n            var k = _a[0], v = _a[1];\r\n            return fn(result, k, v, getChildDef(def, k));\r\n        }, init);\r\n    else if (isDefArray(def))\r\n        return attr.reduce(function (result, v, i) {\r\n            return fn(result, i, v, getChildDef(def, i));\r\n        }, init);\r\n    else\r\n        return init;\r\n}\r\nfunction map(attr, definition, fn) {\r\n    if (isDefRecord(definition) || isDefLookup(definition))\r\n        return mapDict(attr, function (k, v) {\r\n            return fn(k, v, getChildDef(definition, k));\r\n        });\r\n    else if (isDefArray(definition))\r\n        return attr.map(function (v, i) {\r\n            return fn(i, v, getChildDef(definition, i));\r\n        });\r\n    else\r\n        return attr;\r\n}\r\nfunction merge(prevAttr, changes, def) {\r\n    if (isAttrEmpty(changes, def))\r\n        return prevAttr;\r\n    if (isDefRecord(def) || isDefLookup(def)) {\r\n        var mergedChanges = map(changes, def, function (k, v, d) {\r\n            return prevAttr[k] === undefined ? v\r\n                : isDefLookup(def) && (v === null || prevAttr[k] === null) ? v\r\n                    : merge(prevAttr[k], v, d);\r\n        });\r\n        return __assign({}, prevAttr, mergedChanges);\r\n    }\r\n    else if (isDefArray(def)) {\r\n        return map(changes, def, function (i, v, d) {\r\n            return v === undefined ? prevAttr[i]\r\n                : prevAttr[i] === undefined ? v\r\n                    : merge(prevAttr[i], v, d);\r\n        });\r\n    }\r\n    else\r\n        return changes;\r\n}\r\nvar isAttrEmpty = function (attr, def) {\r\n    if (attr === undefined)\r\n        return true;\r\n    else if ((isDefLookup(def) || isDefRecord(def)) && isDictEmpty(attr))\r\n        return true;\r\n    else if (isDefArray(def) && attr.length === 0)\r\n        return true;\r\n    else if (!isDefPrimitive(def))\r\n        return reduce(attr, def, function (res, k, v, d) {\r\n            return res === false ? res\r\n                : isDefLookup(def) && v === null ? false\r\n                    : isAttrEmpty(v, d);\r\n        }, true);\r\n    else\r\n        return false;\r\n};\r\nvar emptyAttr = function (def) {\r\n    if (isDefLookup(def) || isDefRecord(def))\r\n        return {};\r\n    else if (isDefArray(def))\r\n        return [];\r\n    else\r\n        return undefined;\r\n};\r\nvar newLookupEntries = function (prevAttr, changes) {\r\n    return filterDict(changes || {}, function (k, v) {\r\n        return prevAttr[k] === undefined && v !== null;\r\n    });\r\n};\r\nvar reduceAttr = function (attr, def, fn) {\r\n    if (isDefLookup(def) || isDefRecord(def)) {\r\n        return reduce(attr, def, function (result, k, v, d) {\r\n            var _a;\r\n            var child = fn(k, v, d);\r\n            return isAttrEmpty(child, d) ? result : __assign({}, result, (_a = {}, _a[k] = child, _a));\r\n        }, emptyAttr(def));\r\n    }\r\n    else if (isDefArray(def)) {\r\n        var array = map(attr, def, function (k, v, d) { return fn(k, v, d); });\r\n        if (isAttrEmpty(array, def))\r\n            return emptyAttr(def);\r\n        else\r\n            return array;\r\n    }\r\n    else\r\n        return emptyAttr(def);\r\n};\r\nvar reduceChanges = function (attr, def, fn) {\r\n    return reduceAttr(attr, def, function (k, v, d) {\r\n        return isDefLookup(def) && v === null ? undefined\r\n            : fn(k, v, d);\r\n    });\r\n};\r\nvar subtractPartial = function (attr, subtract, def) {\r\n    return reduceAttr(attr, def, function (k, v, d) {\r\n        return subtract[k] === undefined ? v\r\n            : isDefLookup(def) && (v === null || subtract[k] === null) ? undefined\r\n                : subtractPartial(v, subtract[k], d);\r\n    });\r\n};\r\nvar subtractFull = function (attr, subtract, def) {\r\n    if (isDefPrimitive(def))\r\n        return attr;\r\n    else {\r\n        // only lookup entries can be subtracted to maintain a full attribute structure\r\n        var validEntries = isDefLookup(def)\r\n            ? filterDict(attr, function (k, v) { return subtract[k] !== null; })\r\n            : attr;\r\n        return map(validEntries, def, function (k, v, d) {\r\n            return subtract[k] === undefined ? v\r\n                : subtractFull(v, subtract[k], d);\r\n        });\r\n    }\r\n};\r\nvar keepIfDifferent = function (newAttr, prevAttr, def) {\r\n    if (isDefPrimitive(def))\r\n        return newAttr !== prevAttr ? newAttr : emptyAttr(def);\r\n    return reduceChanges(newAttr, def, function (k, v, d) { return keepIfDifferent(v, prevAttr[k], d); });\r\n};\r\nvar getNullEntries = function (attr, def) {\r\n    if (isDefLookup(def)) {\r\n        var nullEntries = filterDict(attr, function (k, v) { return v === null; });\r\n        var reduced = reduceChanges(attr, def, function (k, v, d) { return getNullEntries(v, d); });\r\n        return __assign({}, reduced, nullEntries);\r\n    }\r\n    else\r\n        return reduceChanges(attr, def, function (k, v, d) { return getNullEntries(v, d); });\r\n};\r\nvar fillLookupEntries = function (attr, referenceAttr, def) {\r\n    if (isDefPrimitive(def))\r\n        return attr;\r\n    else if (isDefLookup(def) && attr['*'] !== undefined) {\r\n        return map(referenceAttr, def, function (k, v, d) {\r\n            return v === null ? null\r\n                : fillLookupEntries(attr['*'], v, d);\r\n        });\r\n    }\r\n    else {\r\n        var validAttr = filterDict(referenceAttr, function (k) { return attr[k] !== undefined; });\r\n        return map(validAttr, def, function (k, v, d) {\r\n            return fillLookupEntries(attr[k], v, d);\r\n        });\r\n    }\r\n};\n\nvar parseSingleTerm = function (term) {\r\n    var reverseIndex = term.split('').findIndex(function (c, i) { return isNumStr(term.substring(0, term.length - i)); });\r\n    var varIndex = reverseIndex === -1 ? (term[0] === '-' || term[0] === '+' ? 1 : 0) : term.length - reverseIndex;\r\n    var rawNumStr = term.substring(0, varIndex);\r\n    var varStr = term.substring(varIndex);\r\n    var numStr = rawNumStr === '' && varStr === '' ? '0'\r\n        : rawNumStr === '' || rawNumStr === '+' ? '1'\r\n            : rawNumStr === '-' ? '-1' : rawNumStr;\r\n    if (!isNumStr(numStr))\r\n        return new Error();\r\n    return __assign({ num: parseFloat(numStr) }, (varStr !== '' ? { symbol: varStr } : {}));\r\n};\r\nvar parseExpr = function (value, vars) {\r\n    // e.g. parse 4.7r - 9 to { m: 4.7, x: 'r', c: -9 }\r\n    var errorText = \"invalid expression '\" + value + \"'\";\r\n    var expression = removeWhitespace(value);\r\n    var opIndex = expression.lastIndexOf('+') > 0 ? expression.lastIndexOf('+')\r\n        : expression.lastIndexOf('-') > 0 ? expression.lastIndexOf('-') : expression.length;\r\n    var term1 = parseSingleTerm(expression.substring(0, opIndex));\r\n    var term2 = parseSingleTerm(expression.substring(opIndex));\r\n    if (term1 instanceof Error)\r\n        return new Error(errorText);\r\n    else if (term2 instanceof Error)\r\n        return new Error(errorText);\r\n    else {\r\n        if (term1.symbol !== undefined && term2.symbol !== undefined)\r\n            return new Error(errorText + \": too many variables\");\r\n        var exprObject = term1.symbol !== undefined\r\n            ? { m: term1.num, x: term1.symbol, c: term2.num }\r\n            : { m: term2.num, x: term2.symbol, c: term1.num };\r\n        return parseExprObj(exprObject, vars, value);\r\n    }\r\n};\r\nvar parseExprObj = function (value, vars, formatted) {\r\n    var formattedExpr = formatted || JSON.stringify(value);\r\n    var numExpr = value;\r\n    if (numExpr.m !== undefined && typeof numExpr.m !== 'number'\r\n        || numExpr.c !== undefined && typeof numExpr.c !== 'number'\r\n        || numExpr.x === undefined)\r\n        return new Error(\"invalid expression '\" + formattedExpr + \"'\");\r\n    if (!vars.includes(numExpr.x))\r\n        return new Error(\"expression '\" + formattedExpr + \"' uses invalid variable '\" + numExpr.x + \"'\"\r\n            + (\" (valid variables are [\" + vars + \"])\"));\r\n    return {\r\n        m: numExpr.m !== undefined ? numExpr.m : 1,\r\n        x: numExpr.x,\r\n        c: numExpr.c !== undefined ? numExpr.c : 0\r\n    };\r\n};\r\nvar isExpressionNum = function (attr) { return isDict(attr); };\r\nvar isExpression = function (attr, def) {\r\n    if (def.type === AttrType.Number)\r\n        return isExpressionNum(attr);\r\n    else\r\n        return false;\r\n};\r\nvar evaluateNum = function (expression, vars) {\r\n    // e.g. expressionDict = { value: 8, units: 'x' }, units = { x: 5 } => return 16\r\n    if (!isExpressionNum(expression))\r\n        return expression;\r\n    var m = expression.m !== undefined ? expression.m : 1;\r\n    var c = expression.c !== undefined ? expression.c : 0;\r\n    if (expression.x === undefined)\r\n        return m + c;\r\n    else if (vars.hasOwnProperty(expression.x))\r\n        return m * vars[expression.x] + c;\r\n    else\r\n        return expression;\r\n};\r\nvar getExpressionVars = function (attr, def) {\r\n    if (def.type === AttrType.Number && isExpression(attr, def)) {\r\n        return [attr.x];\r\n    }\r\n    else\r\n        return [];\r\n};\r\nfunction getEvaluatedChanges(attr, vars, def) {\r\n    if (def.type === AttrType.Number && isExpressionNum(attr)) {\r\n        var varSymbols_1 = getExpressionVars(attr, def);\r\n        var shouldUpdate = Object.keys(vars).findIndex(function (k) { return varSymbols_1.includes(k); }) >= 0;\r\n        if (shouldUpdate)\r\n            return evaluateNum(attr, vars);\r\n        else\r\n            return undefined;\r\n    }\r\n    else\r\n        return reduceChanges(attr, def, function (k, v, d) { return getEvaluatedChanges(v, vars, d); });\r\n}\r\nvar getExpr = function (attr, def) {\r\n    if (isDefPrimitive(def) && isExpression(attr, def))\r\n        return attr;\r\n    else\r\n        return reduceChanges(attr, def, function (k, v, d) { return getExpr(v, d); });\r\n};\r\nvar getNonExpr = function (attr, def) {\r\n    if (isDefPrimitive(def) && !isExpression(attr, def))\r\n        return attr;\r\n    else\r\n        return reduceChanges(attr, def, function (k, v, d) { return getNonExpr(v, d); });\r\n};\r\nvar getPermanentExpr = function (attr, def) {\r\n    if (isDefPrimitive(def) && isExpression(attr, def)) {\r\n        var vars = getExpressionVars(attr, def);\r\n        var symbol = def.symbol;\r\n        return symbol !== undefined && vars.includes(symbol) ? undefined : attr;\r\n    }\r\n    else\r\n        return reduceChanges(attr, def, function (k, v, d) { return getPermanentExpr(v, d); });\r\n};\n\nvar EnumShape;\r\n(function (EnumShape) {\r\n    EnumShape[\"circle\"] = \"circle\";\r\n    EnumShape[\"rect\"] = \"rect\";\r\n    EnumShape[\"ellipse\"] = \"ellipse\";\r\n})(EnumShape || (EnumShape = {}));\r\nvar definition$2 = extendRecordDef({\r\n    entries: __assign({ labels: {\r\n            type: AttrType.Lookup,\r\n            entry: definition$1,\r\n            validVars: [EnumVarSymbol.Radius]\r\n        }, shape: { type: AttrType.String, validValues: enumValues(EnumShape) }, color: { type: AttrType.String }, size: { type: AttrType.Record, entries: {\r\n                width: { type: AttrType.Number, symbol: EnumVarSymbol.Width },\r\n                height: { type: AttrType.Number, symbol: EnumVarSymbol.Height }\r\n            }, keyOrder: ['width', 'height'] }, pos: { type: AttrType.Record, entries: {\r\n                x: { type: AttrType.Number },\r\n                y: { type: AttrType.Number }\r\n            }, keyOrder: ['x', 'y'] }, fixed: { type: AttrType.Boolean }, draggable: { type: AttrType.Boolean }, hover: { type: AttrType.Boolean }, click: { type: AttrType.Boolean } }, svgMixinDefEntries),\r\n    type: AttrType.Record,\r\n    keyOrder: ['labels', 'shape', 'color', 'size', 'pos', 'fixed', 'draggable', 'hover', 'click'].concat(svgMixinDefKeys),\r\n    validVars: [EnumVarSymbol.Width, EnumVarSymbol.Height]\r\n}, definition);\r\nvar VALUE_LABEL = 'value';\r\nvar defaults$2 = __assign({}, defaults, { labels: {}, shape: 'circle', color: COLORS.darkgray, size: {\r\n        width: 12,\r\n        height: 12\r\n    }, pos: { x: 0, y: 0 }, fixed: false, draggable: true, hover: false, click: false }, svgMixinDefaults);\r\nvar animationDefaults$2 = __assign({}, animationDefaults, { labels: { '*': animationDefaults$1 } });\r\nvar radiusAtAngle = function (angle, rx, ry, shape) {\r\n    if (shape === 'rect' || shape === 'ellipse')\r\n        return radiusAtAngleRect(angle, rx, ry);\r\n    else\r\n        return rx;\r\n};\r\nvar init$2 = function (name, index) {\r\n    var _a;\r\n    var defaultLabel = __assign({}, init$1(name), { align: 'middle', pos: { x: 0, y: -1 }, radius: 0, angle: 90, rotate: false, color: COLORS.white, size: 12 });\r\n    return __assign({}, defaults$2, { labels: (_a = {}, _a[VALUE_LABEL] = defaultLabel, _a), pos: initPos(index, defaults$2.size.width * 2) });\r\n};\r\nvar initChildren = function (prevAttr, changes) {\r\n    var newLabels = newLookupEntries(prevAttr.labels, changes.labels);\r\n    var prevRadialLabels = filterDict(prevAttr.labels, function (k) { return k !== VALUE_LABEL; });\r\n    var newRadialLabelChanges = filterDict(newLabels, function (k) { return k !== VALUE_LABEL; });\r\n    var newOtherLabelChanges = filterDict(newLabels, function (k) { return newRadialLabelChanges[k] === undefined; });\r\n    var newRadialLabels = mapDict(newRadialLabelChanges, function (k, v, i) {\r\n        var index = Object.keys(prevRadialLabels).length + i;\r\n        var defaultAngle = (Math.PI * 3 / 4) - ((Math.PI / 2) * (index % 4)) - (Math.floor(index / 4) * (Math.PI / 4));\r\n        return __assign({}, init$1(k), { radius: { m: 1, x: EnumVarSymbol.Radius, c: 3 }, angle: angleToDeg(defaultAngle), align: 'radial' });\r\n    });\r\n    var newOtherLabels = mapDict(newOtherLabelChanges, function (k) { return init$1(k); });\r\n    return {\r\n        labels: __assign({}, newRadialLabels, newOtherLabels)\r\n    };\r\n};\r\nvar evaluate$1 = function (evaluated, expr, changes) {\r\n    var evalChanges = getEvaluatedChanges(expr, getVariables(evaluated), definition$2);\r\n    var newEval = merge(evaluated, evalChanges || {}, definition$2);\r\n    var evalLabelChanges = reduceChanges(expr.labels || {}, definition$2.entries.labels, function (k, labelExpr) { return newEval.labels && newEval.labels[k]\r\n        ? getEvaluatedChanges(labelExpr, getLabelVariables(newEval, newEval.labels[k]), definition$1)\r\n        : undefined; });\r\n    var evalChildChanges = { labels: evalLabelChanges || {} };\r\n    return merge(evalChanges || {}, evalChildChanges, definition$2);\r\n};\r\nvar getVariables = function (attr) {\r\n    var _a, _b, _c;\r\n    var hasWidth = attr.size.width && attr.size.width !== undefined;\r\n    var hasHeight = attr.size && attr.size.height !== undefined;\r\n    return __assign({}, (hasWidth ? (_a = {}, _a[EnumVarSymbol.Width] = attr.size.width, _a) : {}), (attr.shape !== undefined && attr.shape === 'circle' && hasWidth ? (_b = {}, _b[EnumVarSymbol.Height] = attr.size.width, _b) : hasHeight ? (_c = {}, _c[EnumVarSymbol.Height] = attr.size.height, _c) : {}));\r\n};\r\nvar getLabelVariables = function (node, label) {\r\n    var _a;\r\n    if (node.size && node.size.width !== undefined && node.size.height !== undefined && label.angle !== undefined) {\r\n        var radius = radiusAtAngle(angleToRad(label.angle), node.size.width, node.size.height, node.shape);\r\n        return _a = {}, _a[EnumVarSymbol.Radius] = radius, _a;\r\n    }\r\n    else\r\n        return {};\r\n};\r\nvar initPos = function (index, offset) {\r\n    var sqrtOffset = Math.floor(Math.sqrt(index));\r\n    var sizeInit = Math.pow(sqrtOffset, 2) !== index ? sqrtOffset + 1 : sqrtOffset;\r\n    var size = sizeInit % 2 === 0 ? sizeInit + 1 : sizeInit;\r\n    var halfSize = Math.floor(size / 2.0);\r\n    var difference = Math.pow(size, 2) - index;\r\n    var rawPos = difference <= size ? {\r\n        x: -halfSize + (size - difference),\r\n        y: -halfSize\r\n    } : difference <= (size * 2) - 1 ? {\r\n        x: -halfSize,\r\n        y: -halfSize + (difference - size)\r\n    } : difference <= (size * 3) - 2 ? {\r\n        x: -halfSize + (difference - (size * 2)) + 1,\r\n        y: halfSize\r\n    } : {\r\n        x: halfSize,\r\n        y: -halfSize + (size - (difference - (size * 3) + 3))\r\n    };\r\n    return {\r\n        x: rawPos.x * (offset + 1),\r\n        y: rawPos.y * (offset + 1)\r\n    };\r\n};\n\nvar getLiveNodeData = function (canvasSel, layoutState, canvasAttr, nodeId) {\r\n    var nodeGroup = selectNodeGroup(canvasSel);\r\n    var nodeAttr = canvasAttr.nodes[nodeId];\r\n    var nodeLayout = layoutState.nodes[nodeId];\r\n    if (nodeAttr.visible) {\r\n        var nodeSel = selectNode(nodeGroup, nodeId);\r\n        var selWidth = nodeSel.attr('_width');\r\n        var selHeight = nodeSel.attr('_height');\r\n        var size = selWidth !== null && selHeight !== null\r\n            ? [parseFloat(selWidth), parseFloat(selHeight)]\r\n            : [nodeLayout.width / 2, nodeLayout.height / 2];\r\n        return {\r\n            shape: nodeAttr.shape,\r\n            size: size,\r\n            pos: [nodeLayout.x, nodeLayout.y]\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            shape: nodeAttr.shape,\r\n            size: [nodeLayout.width / 2, nodeLayout.height / 2],\r\n            pos: [nodeLayout.x, nodeLayout.y]\r\n        };\r\n    }\r\n};\r\nvar getPointAtNodeBoundary = function (node, angle, offset) {\r\n    if (offset === void 0) { offset = 0; }\r\n    var fullOffset = radiusAtAngle(angle, node.size[0], node.size[1], node.shape) + offset;\r\n    return [\r\n        node.pos[0] + fullOffset * Math.cos(angle),\r\n        node.pos[1] + fullOffset * Math.sin(angle)\r\n    ];\r\n};\n\nvar getLoopAngle = function (canvasSel, layoutState, canvasAttr, nodeId) {\r\n    var adjNodes = layoutState.adjacentNodes[nodeId].filter(function (n) { return n !== nodeId; });\r\n    if (adjNodes.length === 0)\r\n        return Math.PI;\r\n    var sourcePos = getLiveNodeData(canvasSel, layoutState, canvasAttr, nodeId).pos;\r\n    var anglesAbs = adjNodes.map(function (n) {\r\n        var pos = getLiveNodeData(canvasSel, layoutState, canvasAttr, n).pos;\r\n        return restrictAngle(Math.atan2(pos[1] - sourcePos[1], pos[0] - sourcePos[0]));\r\n    });\r\n    var sortedAngles = anglesAbs.sort();\r\n    var angleDiffs = sortedAngles.map(function (a, i) {\r\n        if (i === sortedAngles.length - 1)\r\n            return (Math.PI * 2 - a) + sortedAngles[0];\r\n        else\r\n            return sortedAngles[i + 1] - a;\r\n    });\r\n    var maxDifIndex = angleDiffs.reduce(function (maxIndex, a, i) { return a > angleDiffs[maxIndex] ? i : maxIndex; }, 0);\r\n    return restrictAngle((anglesAbs[maxDifIndex] + angleDiffs[maxDifIndex] / 2) - Math.PI / 2);\r\n};\r\nvar getLiveEdgeData = function (canvasSel, layoutState, canvasAttr, edgeAttr) {\r\n    var sourceData = getLiveNodeData(canvasSel, layoutState, canvasAttr, edgeAttr.source);\r\n    var targetData = getLiveNodeData(canvasSel, layoutState, canvasAttr, edgeAttr.target);\r\n    var targetOffset = edgeAttr.directed ? MARKER_SIZE / 2 : 0;\r\n    var angle = edgeAttr.source === edgeAttr.target ? getLoopAngle(canvasSel, layoutState, canvasAttr, edgeAttr.source)\r\n        : restrictAngle(Math.atan2(targetData.pos[1] - sourceData.pos[1], targetData.pos[0] - sourceData.pos[0]));\r\n    return {\r\n        angle: angle,\r\n        flip: edgeAttr.flip,\r\n        curve: edgeAttr.curve,\r\n        path: edgeAttr.path.map(function (p) { return [p.x, p.y]; }),\r\n        sourceOffset: 0,\r\n        targetOffset: targetOffset,\r\n        source: sourceData,\r\n        target: targetData,\r\n        sourceId: edgeAttr.source,\r\n        targetId: edgeAttr.target\r\n    };\r\n};\r\nvar shouldFlip = function (edge) {\r\n    return edge.flip && edge.sourceId !== edge.targetId && edge.angle > Math.PI / 2 && edge.angle <= Math.PI * 3 / 2;\r\n};\r\nvar getEdgeOrigin = function (edge) {\r\n    if (edge.sourceId === edge.targetId)\r\n        return getPointAtNodeBoundary(edge.source, edge.angle + Math.PI / 2);\r\n    else {\r\n        var sourcePoint = getPointAtNodeBoundary(edge.source, edge.angle);\r\n        var targetPoint = getPointAtNodeBoundary(edge.target, edge.angle + Math.PI);\r\n        return [\r\n            (sourcePoint[0] + targetPoint[0]) / 2,\r\n            (sourcePoint[1] + targetPoint[1]) / 2\r\n        ];\r\n    }\r\n};\r\nvar curveFn = function (name) {\r\n    // e.g. convert 'step-after' to 'curveStepAfter'\r\n    return d3$1['curve' + dashToUpperCamel(name)];\r\n};\r\nvar renderEdgePath = function (edgeSel, edge, origin) {\r\n    var edgePath = shouldFlip(edge) ? edge.path.map(function (_a) {\r\n        var x = _a[0], y = _a[1];\r\n        return [x, -y];\r\n    }) : edge.path;\r\n    var pointBeforeSource = edgePath.length === 0 ? origin\r\n        : translate(rotate(edgePath[0], edge.angle), origin);\r\n    var pointBeforeTarget = edgePath.length === 0 ? origin\r\n        : translate(rotate(edgePath[edgePath.length - 1], edge.angle), origin);\r\n    var angleAtSource = Math.atan2(pointBeforeSource[1] - edge.source.pos[1], pointBeforeSource[0] - edge.source.pos[0]);\r\n    var angleAtTarget = Math.atan2(pointBeforeTarget[1] - edge.target.pos[1], pointBeforeTarget[0] - edge.target.pos[0]);\r\n    var pointAtSource = getPointAtNodeBoundary(edge.source, angleAtSource, edge.sourceOffset);\r\n    var pointAtTarget = getPointAtNodeBoundary(edge.target, angleAtTarget, edge.targetOffset);\r\n    var pointAtSourceRel = rotate(translate(pointAtSource, [-origin[0], -origin[1]]), -edge.angle);\r\n    var pointAtTargetRel = rotate(translate(pointAtTarget, [-origin[0], -origin[1]]), -edge.angle);\r\n    var lineFunction = line().x(function (d) { return d[0]; }).y(function (d) { return -d[1]; }).curve(curveFn(edge.curve));\r\n    var line$$1 = lineFunction([pointAtSourceRel].concat(edgePath, [pointAtTargetRel]));\r\n    edgeSel.select('.edge-path').attr('d', line$$1);\r\n    var overlay = edgeSel.select('.edge-path-overlay');\r\n    if (!overlay.empty())\r\n        overlay.attr('d', line$$1);\r\n};\n\nvar updateNodes = function (canvasSel, attr, layout) {\r\n    Object.entries(layout.nodes).forEach(function (_a) {\r\n        var id = _a[0], node = _a[1];\r\n        if (attr[id].visible) {\r\n            var nodeSel = selectNode(selectNodeGroup(canvasSel), id);\r\n            nodeSel.attr('transform', \"translate(\" + node.x + \",\" + -node.y + \")\");\r\n        }\r\n    });\r\n};\r\nvar updateEdges = function (canvasSel, attr, layout) {\r\n    Object.keys(attr.edges).forEach(function (k) {\r\n        if (attr.edges[k].visible) {\r\n            var edge = getLiveEdgeData(canvasSel, layout, attr, attr.edges[k]);\r\n            var edgeSel = selectEdge(canvasSel, k);\r\n            var origin_1 = getEdgeOrigin(edge);\r\n            edgeSel.attr('transform', \"translate(\" + origin_1[0] + \",\" + -origin_1[1] + \")rotate(\" + -angleToDeg(edge.angle) + \")\");\r\n            var edgeLabels = selectLabelGroup$1(edgeSel);\r\n            edgeLabels.attr('transform', shouldFlip(edge) ? 'scale(-1, -1)' : null);\r\n            renderEdgePath(edgeSel, edge, origin_1);\r\n        }\r\n    });\r\n};\r\nvar updateCanvas = function (canvas, attr, layout) {\r\n    if (!attr.visible)\r\n        return;\r\n    var canvasSel = selectCanvasInner(selectCanvas(canvas));\r\n    updateNodes(canvasSel, attr.nodes, layout);\r\n    updateEdges(canvasSel, attr, layout);\r\n};\n\nvar didUpdateLayout = function (changes) {\r\n    return changes.size !== undefined || changes.edgelengths !== undefined;\r\n};\r\nvar updateCola = function (cola, attr) {\r\n    cola.size([attr.size.width, attr.size.height]);\r\n    if (attr.edgelengths.type === 'individual')\r\n        cola.linkDistance(function (edge) { return edge.length; });\r\n    else if (attr.edgelengths.type === 'jaccard')\r\n        cola.jaccardLinkLengths(attr.edgelengths.length, 1);\r\n    else if (attr.edgelengths.type === 'symmetric')\r\n        cola.symmetricDiffLinkLengths(attr.edgelengths.length, 0.1);\r\n};\r\nvar calcAdjacency = function (nodes, edges) {\r\n    var initMatrix = mapDict(nodes, function (n) { return []; });\r\n    return Object.values(edges).reduce(function (matrix, edge) {\r\n        var _a, _b;\r\n        var withSource = __assign({}, matrix, (_a = {}, _a[edge.target] = matrix[edge.target].concat([edge.source]), _a));\r\n        var withTarget = __assign({}, withSource, (_b = {}, _b[edge.source] = withSource[edge.source].concat([edge.target]), _b));\r\n        return withTarget;\r\n    }, initMatrix);\r\n};\n\nvar fromAttrChanges = function (attr, changes) {\r\n    var height = attr.shape === 'circle' ? attr.size.width * 2 : attr.size.height * 2;\r\n    var changedHeight = changes.size && (attr.shape === 'circle' ? changes.size.width !== undefined\r\n        : changes.size.height !== undefined);\r\n    return __assign({}, (changes.size && changes.size.width !== undefined ? { width: attr.size.width * 2 } : {}), (changedHeight ? { height: height } : {}), (changes.pos && changes.pos.x !== undefined ? { x: attr.pos.x } : {}), (changes.pos && changes.pos.y !== undefined ? { y: attr.pos.y } : {}), (changes.fixed !== undefined ? { fixed: attr.fixed ? 1 : 0 } : {}));\r\n};\r\nvar didUpdateLayout$1 = function (attr, changes) {\r\n    return !isDictEmpty(fromAttrChanges(attr, changes));\r\n};\r\nvar mergeLookup = function (nodes, attr, changes) {\r\n    // merge changes with previous nodes so as to preserve positions and references\r\n    var nodeChanges = mapDict(changes, function (k, v) {\r\n        return v === null ? null : fromAttrChanges(attr[k], v);\r\n    });\r\n    return Object.keys(nodes).concat(Object.keys(changes)).reduce(function (result, k) {\r\n        var _a, _b, _c;\r\n        return nodeChanges[k] === null ? result // remove node\r\n            : nodes[k] === undefined ? __assign({}, result, (_a = {}, _a[k] = nodeChanges[k], _a)) : nodeChanges[k] === undefined ? __assign({}, result, (_b = {}, _b[k] = nodes[k], _b)) : __assign({}, result, (_c = {}, _c[k] = __assign({}, nodes[k], nodeChanges[k]), _c));\r\n    } // changed\r\n    , {});\r\n};\r\nvar updateCola$1 = function (cola, nodes) {\r\n    var _a;\r\n    // cola doesn't work when you call .nodes() with a new array\r\n    (_a = cola.nodes()).splice.apply(_a, [0, cola.nodes().length].concat(Object.values(nodes)));\r\n};\n\nvar fromAttr = function (attr) {\r\n    return {\r\n        source: attr.source,\r\n        target: attr.target,\r\n        length: attr.length\r\n    };\r\n};\r\nvar didUpdateLayout$2 = function (changes) {\r\n    return changes.source !== undefined || changes.target !== undefined || changes.length !== undefined;\r\n};\r\nvar createLookup = function (attr) {\r\n    return mapDict(attr, function (k, v) { return fromAttr(v); });\r\n};\r\nvar updateCola$2 = function (cola, nodes, edges) {\r\n    var _a;\r\n    // cola doesn't work when you call .nodes() with a new array\r\n    var newEdges = mapDict(edges, function (k, edge) { return (__assign({}, edge, { source: nodes[edge.source], target: nodes[edge.target] })); });\r\n    (_a = cola.links()).splice.apply(_a, [0, cola.links().length].concat(Object.values(newEdges)));\r\n};\n\nvar initCola = function (tick) {\r\n    return d3adaptor(d3$2)\r\n        .nodes([]).links([])\r\n        .handleDisconnected(false)\r\n        .avoidOverlaps(true)\r\n        .on('tick', tick);\r\n};\r\nvar init$3 = function (tick) {\r\n    return {\r\n        cola: initCola(tick),\r\n        tick: tick,\r\n        nodes: {},\r\n        adjacentNodes: {}\r\n    };\r\n};\r\nvar reset = function (layoutState) {\r\n    layoutState.cola.links([]).nodes([]).stop().on('tick', function () { });\r\n    return init$3(layoutState.tick);\r\n};\r\nvar update = function (layoutState, attr, changes) {\r\n    var didUpdateNodes = changes.nodes && Object.entries(changes.nodes).findIndex(function (_a) {\r\n        var k = _a[0], v = _a[1];\r\n        return v === null || didUpdateLayout$1(attr.nodes[k], v);\r\n    }) >= 0;\r\n    var didUpdateEdges = changes.edges && Object.values(changes.edges).findIndex(function (v) {\r\n        return v === null || didUpdateLayout$2(v);\r\n    }) >= 0;\r\n    var didUpdateCanvas = didUpdateLayout(changes);\r\n    if (!didUpdateNodes && !didUpdateEdges && !didUpdateCanvas)\r\n        return layoutState;\r\n    var newNodes = didUpdateNodes ? mergeLookup(layoutState.nodes, attr.nodes, changes.nodes)\r\n        : layoutState.nodes;\r\n    if (didUpdateNodes)\r\n        updateCola$1(layoutState.cola, newNodes);\r\n    // edges need to be re-added when edge length type changes\r\n    if (didUpdateEdges || changes.edgelengths !== undefined)\r\n        updateCola$2(layoutState.cola, newNodes, createLookup(attr.edges));\r\n    if (didUpdateCanvas)\r\n        updateCola(layoutState.cola, attr);\r\n    var adjacency = didUpdateNodes === undefined && didUpdateEdges === undefined\r\n        ? layoutState.adjacentNodes : calcAdjacency(attr.nodes, attr.edges);\r\n    layoutState.cola.start();\r\n    return __assign({}, layoutState, { nodes: newNodes, adjacentNodes: adjacency });\r\n};\n\nvar EnumCurve;\r\n(function (EnumCurve) {\r\n    EnumCurve[\"basis\"] = \"basis\";\r\n    EnumCurve[\"bundle\"] = \"bundle\";\r\n    EnumCurve[\"cardinal\"] = \"cardinal\";\r\n    EnumCurve[\"catmull-rom\"] = \"catmull-rom\";\r\n    EnumCurve[\"linear\"] = \"linear\";\r\n    EnumCurve[\"monotone-x\"] = \"monotone-x\";\r\n    EnumCurve[\"monotone-y\"] = \"monotone-y\";\r\n    EnumCurve[\"natural\"] = \"natural\";\r\n    EnumCurve[\"step\"] = \"step\";\r\n    EnumCurve[\"step-before\"] = \"step-before\";\r\n    EnumCurve[\"step-after\"] = \"step-after\";\r\n})(EnumCurve || (EnumCurve = {}));\r\nvar definition$3 = extendRecordDef({\r\n    entries: __assign({ labels: { type: AttrType.Lookup, entry: definition$1 }, source: { type: AttrType.String }, target: { type: AttrType.String }, directed: { type: AttrType.Boolean }, length: { type: AttrType.Number }, thickness: { type: AttrType.Number }, color: { type: AttrType.String }, flip: { type: AttrType.Boolean }, curve: { type: AttrType.String, validValues: enumValues(EnumCurve) }, path: { type: AttrType.Array, entry: {\r\n                type: AttrType.Record, entries: {\r\n                    x: { type: AttrType.Number },\r\n                    y: { type: AttrType.Number }\r\n                }, keyOrder: ['x', 'y']\r\n            }\r\n        } }, svgMixinDefEntries),\r\n    type: AttrType.Record,\r\n    keyOrder: ['labels', 'source', 'target', 'directed', 'length', 'thickness', 'color', 'flip', 'curve', 'path'].concat(svgMixinDefKeys),\r\n    validVars: []\r\n}, definition);\r\nvar defaults$3 = __assign({}, defaults, { labels: {}, source: '', target: '', directed: false, length: 70, thickness: 2.5, color: COLORS.lightgray, flip: true, curve: 'natural', path: [] }, svgMixinDefaults);\r\nvar labelDefaults = {\r\n    align: 'radial',\r\n    rotate: true,\r\n    size: 11,\r\n    radius: 3\r\n};\r\nvar animationDefaults$3 = __assign({}, animationDefaults, { labels: { '*': animationDefaults$1 } });\r\nvar init$4 = function () {\r\n    return defaults$3;\r\n};\r\nvar initChildren$1 = function (prevAttr, changes) {\r\n    var newLabels = mapDict(newLookupEntries(prevAttr.labels, changes.labels), function (k, v, i) {\r\n        var path = changes.path ? changes.path : prevAttr.path;\r\n        var pathMidY = path.length === 0 ? 0 : path[Math.floor((path.length - 1) / 2)].y;\r\n        var pathMidYNum = typeof pathMidY === 'number' ? pathMidY : 0;\r\n        var index = Object.keys(prevAttr.labels).length + i;\r\n        var angle = (index % 2) === 0 ? Math.PI / 2 : Math.PI * 3 / 2;\r\n        return __assign({}, init$1(k), labelDefaults, { pos: { x: 0, y: pathMidYNum }, angle: angleToDeg(angle) });\r\n    });\r\n    return {\r\n        labels: newLabels\r\n    };\r\n};\r\nvar incrementMatrix = function (matrix, source, target) {\r\n    var _a, _b, _c;\r\n    var sourceAdj = matrix[source] === undefined ? {} : matrix[source];\r\n    var targetAdj = matrix[target] === undefined ? {} : matrix[target];\r\n    var sourceLookup = __assign({}, sourceAdj, (_a = {}, _a[target] = sourceAdj[target] === undefined ? 1 : sourceAdj[target] + 1, _a));\r\n    var targetLookup = __assign({}, targetAdj, (_b = {}, _b[source] = targetAdj[source] === undefined ? 1 : targetAdj[source] + 1, _b));\r\n    return __assign({}, matrix, (_c = {}, _c[source] = sourceLookup, _c[target] = targetLookup, _c));\r\n};\r\nvar createAdjMatrix = function (edges) {\r\n    return Object.values(edges).reduce(function (matrix, e) {\r\n        return incrementMatrix(matrix, e.source, e.target);\r\n    }, {});\r\n};\r\nvar initLookup = function (prevEdges, changes) {\r\n    var newEdges = newLookupEntries(prevEdges, changes);\r\n    if (isDictEmpty(newEdges))\r\n        return newEdges;\r\n    var edgeInitData = Object.entries(newEdges).reduce(function (result, _a) {\r\n        var k = _a[0], edge = _a[1];\r\n        var _b;\r\n        // edges are expected to be provided with source and target attributes initially\r\n        var source = edge.source || '';\r\n        var target = edge.target || '';\r\n        var newMatrix = incrementMatrix(result.matrix, source, target);\r\n        var index = newMatrix[source][target] - 1;\r\n        var loopingPath = function (i) { return [\r\n            { x: -(i + 1) * 8, y: 8 },\r\n            { x: -(i + 1) * 10, y: 14 + ((i + 1) * 6) },\r\n            { x: 0, y: 14 + (i + 1) * 14 },\r\n            { x: (i + 1) * 10, y: 14 + ((i + 1) * 6) },\r\n            { x: (i + 1) * 8, y: 8 }\r\n        ]; };\r\n        var path = source === target ? loopingPath(index)\r\n            : [{ x: 0, y: Math.pow(-1, index + 1) * Math.ceil(index / 2) * 16 }];\r\n        var edgeDefaults = __assign({}, init$4(), { path: path });\r\n        var initEdgeChildren = initChildren$1(edgeDefaults, edge);\r\n        var initEdge = merge(edgeDefaults, initEdgeChildren, definition$3);\r\n        return { matrix: newMatrix, edges: __assign({}, result.edges, (_b = {}, _b[k] = initEdge, _b)) };\r\n    }, { matrix: createAdjMatrix(prevEdges), edges: {} });\r\n    return edgeInitData.edges;\r\n};\n\nvar EnumEdgeLengthType;\r\n(function (EnumEdgeLengthType) {\r\n    EnumEdgeLengthType[\"individual\"] = \"individual\";\r\n    EnumEdgeLengthType[\"symmetric\"] = \"symmetric\";\r\n    EnumEdgeLengthType[\"jaccard\"] = \"jaccard\";\r\n})(EnumEdgeLengthType || (EnumEdgeLengthType = {}));\r\nvar definition$4 = extendRecordDef({\r\n    type: AttrType.Record,\r\n    entries: __assign({ nodes: { type: AttrType.Lookup, entry: definition$2 }, edges: { type: AttrType.Lookup, entry: definition$3 }, labels: { type: AttrType.Lookup, entry: definition$1 }, size: { type: AttrType.Record, entries: {\r\n                width: { type: AttrType.Number, symbol: EnumVarSymbol.CanvasWidth },\r\n                height: { type: AttrType.Number, symbol: EnumVarSymbol.CanvasHeight }\r\n            }, keyOrder: ['width', 'height'] }, edgelengths: { type: AttrType.Record, entries: {\r\n                type: { type: AttrType.String, validValues: enumValues(EnumEdgeLengthType) },\r\n                length: { type: AttrType.Number }\r\n            }, keyOrder: ['type', 'length'] }, pan: { type: AttrType.Record, entries: {\r\n                x: { type: AttrType.Number },\r\n                y: { type: AttrType.Number }\r\n            }, keyOrder: ['x', 'y'] }, zoom: { type: AttrType.Number }, panlimit: { type: AttrType.Record, entries: {\r\n                horizontal: { type: AttrType.Number },\r\n                vertical: { type: AttrType.Number }\r\n            }, keyOrder: ['horizontal', 'vertical'] }, zoomlimit: { type: AttrType.Record, entries: {\r\n                min: { type: AttrType.Number },\r\n                max: { type: AttrType.Number }\r\n            }, keyOrder: ['min', 'max'] }, zoomkey: { type: AttrType.Boolean } }, svgMixinDefEntries),\r\n    keyOrder: ['nodes', 'edges', 'labels', 'size', 'edgelengths', 'pan', 'zoom', 'panlimit', 'zoomlimit', 'zoomkey'].concat(svgMixinDefKeys),\r\n    validVars: [EnumVarSymbol.CanvasWidth, EnumVarSymbol.CanvasHeight]\r\n}, definition);\r\nvar defaults$4 = __assign({}, defaults, { nodes: {}, edges: {}, labels: {}, size: { width: 100, height: 100 }, edgelengths: {\r\n        type: 'jaccard',\r\n        length: 70\r\n    }, pan: { x: 0, y: 0 }, zoom: 1, panlimit: { horizontal: Infinity, vertical: Infinity }, zoomlimit: { min: 0.1, max: 10 }, zoomkey: false }, svgMixinDefaults);\r\nvar labelDefaults$1 = {\r\n    align: 'middle',\r\n    pos: { x: 0, y: { m: 0.5, x: EnumVarSymbol.CanvasHeight, c: 0 } },\r\n    rotate: true,\r\n    color: COLORS.gray,\r\n    size: 20\r\n};\r\nvar animationDefaults$4 = __assign({}, animationDefaults, { nodes: { '*': animationDefaults$2 }, edges: { '*': animationDefaults$3 }, labels: { '*': animationDefaults$1 }, size: {\r\n        width: { duration: 0 },\r\n        height: { duration: 0 }\r\n    } });\r\nvar init$5 = function (canvasSize) {\r\n    return __assign({}, defaults$4, { size: { width: canvasSize[0], height: canvasSize[1] } });\r\n};\r\nvar initChildren$2 = function (prevAttr, changes) {\r\n    var newNodes = mapDict(newLookupEntries(prevAttr.nodes, changes.nodes), function (k, node, i) {\r\n        var initNode = init$2(k, Object.keys(prevAttr.nodes).length + i);\r\n        var initNodeChildren = initChildren(initNode, node);\r\n        return merge(initNode, initNodeChildren, definition$2);\r\n    });\r\n    var newEdges = initLookup(prevAttr.edges, changes.edges);\r\n    var newLabels = mapDict(newLookupEntries(prevAttr.labels, changes.labels), function (k) {\r\n        return (__assign({}, init$1(k), labelDefaults$1));\r\n    });\r\n    var nodeChildrenInit = reduceChanges(changes.nodes || {}, definition$4.entries.nodes, function (k, v) { return prevAttr.nodes[k] ? initChildren(prevAttr.nodes[k], v) : {}; });\r\n    var edgeChildrenInit = reduceChanges(changes.edges || {}, definition$4.entries.edges, function (k, v) { return prevAttr.edges[k] ? initChildren$1(prevAttr.edges[k], v) : {}; });\r\n    return {\r\n        nodes: __assign({}, nodeChildrenInit, newNodes),\r\n        edges: __assign({}, edgeChildrenInit, newEdges),\r\n        labels: __assign({}, changes.labels, newLabels)\r\n    };\r\n};\r\nvar evaluate$2 = function (evaluated, expr, changes) {\r\n    var evalChanges = getEvaluatedChanges(expr, getVariables$1(evaluated), definition$4);\r\n    var newEval = merge(evaluated, evalChanges, definition$4);\r\n    var newChanges = merge(changes, evalChanges, definition$4);\r\n    var evalNodeChanges = reduceChanges(newChanges.nodes || {}, definition$4.entries.nodes, function (k, node) { return newEval.nodes && newEval.nodes[k] && expr.nodes && expr.nodes[k]\r\n        ? evaluate$1(newEval.nodes[k], expr.nodes[k], node) : undefined; });\r\n    var evalChildChanges = { nodes: evalNodeChanges || {} };\r\n    return merge(evalChanges, evalChildChanges, definition$4);\r\n};\r\nvar getVariables$1 = function (attr) {\r\n    var _a, _b;\r\n    return __assign({}, (attr.size && attr.size.width !== undefined ? (_a = {}, _a[EnumVarSymbol.CanvasWidth] = attr.size.width / 2, _a) : {}), (attr.size && attr.size.height !== undefined ? (_b = {}, _b[EnumVarSymbol.CanvasHeight] = attr.size.height / 2, _b) : {}));\r\n};\r\nvar removeInvalidEdges = function (prevAttr, changes) {\r\n    // remove edges connecting non-existent nodes\r\n    var prevEdges = prevAttr ? prevAttr.edges : {};\r\n    var newEdges = newLookupEntries(prevEdges, changes.edges || {});\r\n    var prevNodes = prevAttr ? prevAttr.nodes : {};\r\n    var changedNodes = changes.nodes || {};\r\n    var invalidEdges = Object.entries(prevEdges).concat(Object.entries(newEdges)).reduce(function (result, _a) {\r\n        var k = _a[0], edge = _a[1];\r\n        var _b, _c;\r\n        if (changedNodes[edge.source] === null || (!prevNodes[edge.source] && !changedNodes[edge.source]))\r\n            return __assign({}, result, (_b = {}, _b[k] = null, _b));\r\n        else if (changedNodes[edge.target] === null || (!prevNodes[edge.target] && !changedNodes[edge.target]))\r\n            return __assign({}, result, (_c = {}, _c[k] = null, _c));\r\n        else\r\n            return result;\r\n    }, {});\r\n    return { edges: invalidEdges };\r\n};\n\nvar initialize = function (canvas, prevState, changes) {\r\n    var prevStateNew = prevState || init$5(getCanvasSize(canvas));\r\n    var initChildren = initChildren$2(prevStateNew, changes);\r\n    var changesNew = prevState === undefined ? merge(prevStateNew, changes, definition$4) : changes;\r\n    return merge(initChildren, changesNew, definition$4);\r\n};\r\nvar evaluate$3 = function (prevState, prevExpr, changes) {\r\n    // find non-expressions attributes\r\n    var changedNonExpr = getNonExpr(changes, definition$4);\r\n    var fullNonExprInit = merge(prevState || {}, changedNonExpr, definition$4);\r\n    // evaluate changed expressions\r\n    var changedExpr = getExpr(changes, definition$4);\r\n    var changedExprEval = evaluate$2(fullNonExprInit, changedExpr, changes);\r\n    // evaluate permanent expressions\r\n    var fullNonExpr = merge(fullNonExprInit, changedExprEval, definition$4);\r\n    var permanentExprEval = evaluate$2(fullNonExpr, prevExpr || {}, changes);\r\n    var permanentExprChanges = keepIfDifferent(permanentExprEval, prevState || {}, definition$4);\r\n    // combine all changes\r\n    var changesEval = merge(changes, changedExprEval, definition$4);\r\n    var allChangesEval = merge(permanentExprChanges, changesEval, definition$4);\r\n    return allChangesEval;\r\n};\n\nvar EnumAnimationType;\r\n(function (EnumAnimationType) {\r\n    EnumAnimationType[\"normal\"] = \"normal\";\r\n    EnumAnimationType[\"traverse\"] = \"traverse\";\r\n})(EnumAnimationType || (EnumAnimationType = {}));\r\nvar EnumAnimationEase;\r\n(function (EnumAnimationEase) {\r\n    EnumAnimationEase[\"linear\"] = \"linear\";\r\n    EnumAnimationEase[\"poly\"] = \"poly\";\r\n    EnumAnimationEase[\"poly-in\"] = \"poly-in\";\r\n    EnumAnimationEase[\"poly-out\"] = \"poly-out\";\r\n    EnumAnimationEase[\"poly-in-out\"] = \"poly-in-out\";\r\n    EnumAnimationEase[\"quad\"] = \"quad\";\r\n    EnumAnimationEase[\"quad-in\"] = \"quad-in\";\r\n    EnumAnimationEase[\"quad-out\"] = \"quad-out\";\r\n    EnumAnimationEase[\"quad-in-out\"] = \"quad-in-out\";\r\n    EnumAnimationEase[\"cubic\"] = \"cubic\";\r\n    EnumAnimationEase[\"cubic-in\"] = \"cubic-in\";\r\n    EnumAnimationEase[\"cubic-out\"] = \"cubic-out\";\r\n    EnumAnimationEase[\"cubic-in-out\"] = \"cubic-in-out\";\r\n    EnumAnimationEase[\"sin\"] = \"sin\";\r\n    EnumAnimationEase[\"sin-in\"] = \"sin-in\";\r\n    EnumAnimationEase[\"sin-out\"] = \"sin-out\";\r\n    EnumAnimationEase[\"sin-in-out\"] = \"sin-in-out\";\r\n    EnumAnimationEase[\"exp\"] = \"exp\";\r\n    EnumAnimationEase[\"exp-in\"] = \"exp-in\";\r\n    EnumAnimationEase[\"exp-out\"] = \"exp-out\";\r\n    EnumAnimationEase[\"exp-in-out\"] = \"exp-in-out\";\r\n    EnumAnimationEase[\"circle\"] = \"circle\";\r\n    EnumAnimationEase[\"circle-in\"] = \"Circle-out\";\r\n    EnumAnimationEase[\"circle-out\"] = \"circle-out\";\r\n    EnumAnimationEase[\"circle-in-out\"] = \"circle-in-out\";\r\n    EnumAnimationEase[\"elastic\"] = \"elastic\";\r\n    EnumAnimationEase[\"elastic-in\"] = \"elastic-in\";\r\n    EnumAnimationEase[\"elastic-out\"] = \"elastic-out\";\r\n    EnumAnimationEase[\"elastic-in-out\"] = \"elastic-in-out\";\r\n    EnumAnimationEase[\"back\"] = \"back\";\r\n    EnumAnimationEase[\"back-in\"] = \"back-in\";\r\n    EnumAnimationEase[\"back-out\"] = \"back-out\";\r\n    EnumAnimationEase[\"back-in-out\"] = \"back-in-out\";\r\n    EnumAnimationEase[\"bounce\"] = \"bounce\";\r\n    EnumAnimationEase[\"bounce-in\"] = \"bounce-in\";\r\n    EnumAnimationEase[\"bounce-out\"] = \"bounce-out\";\r\n    EnumAnimationEase[\"bounce-in-out\"] = \"bounce-in-out\";\r\n})(EnumAnimationEase || (EnumAnimationEase = {}));\r\nvar definition$5 = {\r\n    type: AttrType.Record,\r\n    entries: {\r\n        type: { type: AttrType.String, validValues: enumValues(EnumAnimationType) },\r\n        duration: { type: AttrType.Number },\r\n        ease: { type: AttrType.String, validValues: enumValues(EnumAnimationEase) },\r\n        linger: { type: AttrType.Number },\r\n        data: { type: AttrType.Record, entries: {\r\n                source: { type: AttrType.String }\r\n            }, keyOrder: ['source'] }\r\n    },\r\n    keyOrder: ['type', 'duration', 'ease', 'linger']\r\n};\r\nvar defaults$5 = {\r\n    type: 'normal',\r\n    duration: 0.5,\r\n    ease: 'poly',\r\n    linger: 0.5,\r\n    data: {}\r\n};\r\nvar createFullDef = function (bodyDef, endDef) {\r\n    if (isDefLookup(bodyDef)) {\r\n        var defLookup = {\r\n            type: AttrType.Lookup,\r\n            entry: createFullDef(bodyDef.entry, endDef)\r\n        };\r\n        return defLookup;\r\n    }\r\n    else if (isDefArray(bodyDef)) {\r\n        var defArray = {\r\n            type: AttrType.Array,\r\n            entry: createFullDef(bodyDef.entry, endDef)\r\n        };\r\n        return defArray;\r\n    }\r\n    else if (isDefRecord(bodyDef)) {\r\n        var entries = bodyDef.entries;\r\n        var defRecord = {\r\n            type: AttrType.Record,\r\n            entries: mapDict(entries, function (k, v) {\r\n                return createFullDef(v, endDef);\r\n            }),\r\n            keyOrder: Object.keys(entries)\r\n        };\r\n        return defRecord;\r\n    }\r\n    else\r\n        return endDef;\r\n};\n\nvar definition$6 = createFullDef(definition$4, definition$5);\r\nvar addEndpoints = function (anim, attr, def, curAnim) {\r\n    if (curAnim === void 0) { curAnim = {}; }\r\n    if (isDefPrimitive(def))\r\n        return (anim !== null ? anim : curAnim);\r\n    else {\r\n        return reduceChanges(attr, def, function (k, v, d) {\r\n            var newAnim = anim !== null && anim[k] !== undefined ? anim[k] : null;\r\n            var newCurAnim = anim !== null && anim['**'] !== undefined\r\n                ? merge(curAnim, anim['**'], definition$5) : curAnim;\r\n            return addEndpoints(newAnim, v, d, newCurAnim);\r\n        });\r\n    }\r\n};\r\nvar getRelevantChanges = function (prevAttr, changes, def) {\r\n    if (isDefPrimitive(def))\r\n        return changes;\r\n    else {\r\n        return reduceAttr(changes, def, function (k, v, d) {\r\n            var prevChild = prevAttr ? prevAttr[k] : undefined;\r\n            if (prevChild === undefined)\r\n                return undefined;\r\n            else if (isDefLookup(def) && v === null)\r\n                return prevChild;\r\n            else\r\n                return getRelevantChanges(prevChild, v, d);\r\n        });\r\n    }\r\n};\r\nvar process = function (animation, prevState, changes, changesForced) {\r\n    var changesMain = getRelevantChanges(prevState, changes, definition$4);\r\n    var changesFull = merge(changesForced, changesMain, definition$4);\r\n    var animChanges = addEndpoints(animation, changesFull, definition$4);\r\n    var animDefaultsRegular = addEndpoints({ '**': defaults$5 }, changesFull, definition$4);\r\n    var animDefaultsExtra = fillLookupEntries(animationDefaults$4, animDefaultsRegular, definition$6);\r\n    var animDefaultsFull = merge(animDefaultsRegular, animDefaultsExtra, definition$6);\r\n    return merge(animDefaultsFull, animChanges, definition$6);\r\n};\n\nvar initInfo = function () { return ({\r\n    variables: [],\r\n    path: [['canvas', AttrType.Record]]\r\n}); };\r\nvar formatPath = function (path) {\r\n    return path.reduce(function (result, _a, i) {\r\n        var name = _a[0], type = _a[1];\r\n        if (i > 0) {\r\n            var prevType = path[i - 1][1];\r\n            return result + (prevType === AttrType.Array ? \"\" + [name] : \".\" + name);\r\n        }\r\n        else\r\n            return name;\r\n    }, '');\r\n};\r\nvar preprocess$1 = function (attr, definition, info) {\r\n    var newInfo = info || initInfo();\r\n    var fullInfo = __assign({}, newInfo, { variables: newInfo.variables.concat(definition.validVars || []) });\r\n    if (isDefPrimitive(definition))\r\n        return preprocessPrimitive(attr, definition, fullInfo);\r\n    else if (isDefRecord(definition))\r\n        return preprocessRecord(attr, definition, fullInfo);\r\n    else if (isDefLookup(definition))\r\n        return preprocessLookup(attr, definition, fullInfo);\r\n    else if (isDefArray(definition))\r\n        return preprocessArray(attr, definition, fullInfo);\r\n    else\r\n        return new Error();\r\n};\r\nvar preprocessPrimitive = function (attr, def, info) {\r\n    if (def.validValues && !def.validValues.includes(attr)) {\r\n        return new Error(\"attribute '\" + formatPath(info.path) + \"' has invalid value '\" + attr + \"'\"\r\n            + (\" (valid values are [\" + def.validValues + \"])\"));\r\n    }\r\n    else {\r\n        switch (def.type) {\r\n            case AttrType.Number:\r\n                if (typeof attr === 'number')\r\n                    return attr;\r\n                else if (typeof attr === 'string')\r\n                    return parseExpr(attr, info.variables);\r\n                else if (isDict(attr))\r\n                    return parseExprObj(attr, info.variables);\r\n                else\r\n                    return new Error(\"attribute '\" + formatPath(info.path) + \"' must be a number\");\r\n            case AttrType.String:\r\n                if (typeof attr === 'string')\r\n                    return attr;\r\n                else if (typeof attr === 'number')\r\n                    return String(attr);\r\n                else\r\n                    return new Error(\"attribute '\" + formatPath(info.path) + \"' must be a string\");\r\n            case AttrType.Boolean:\r\n                if (typeof attr === 'boolean')\r\n                    return attr;\r\n                else\r\n                    return new Error(\"attribute '\" + formatPath(info.path) + \"' must be a boolean\");\r\n            default:\r\n                return new Error();\r\n        }\r\n    }\r\n};\r\nvar preprocessRecord = function (attr, definition, info) {\r\n    // allow arrays and single values instead of dictionaries\r\n    if (Array.isArray(attr) && attr.length > definition.keyOrder.length)\r\n        return new Error(\"attribute '\" + formatPath(info.path) + \"' has too many entries to match [\" + definition.keyOrder + \"]\");\r\n    var record = valueOrArrayOrDict(attr, definition.keyOrder);\r\n    var invalidEntries = Object.keys(record).filter(function (k) { return !definition.entries.hasOwnProperty(k); });\r\n    if (invalidEntries.length > 0)\r\n        return new Error(\"attribute '\" + formatPath(info.path) + \"' has unknown entry '\" + invalidEntries[0] + \"'\");\r\n    return filterError(definition.keyOrder.reduce(function (result, k) {\r\n        var _a;\r\n        var def = definition.entries[k];\r\n        if (!record.hasOwnProperty(k))\r\n            return result;\r\n        else {\r\n            var newInfo = __assign({}, info, { path: info.path.concat([[k, def.type]]) });\r\n            return __assign({}, result, (_a = {}, _a[k] = preprocess$1(record[k], def, newInfo), _a));\r\n        }\r\n    }, {}));\r\n};\r\nvar valueOrArrayOrDict = function (attr, keys) {\r\n    var _a;\r\n    if (Array.isArray(attr))\r\n        return attr.reduce(function (result, v, i) {\r\n            var _a;\r\n            return (__assign({}, result, (_a = {}, _a[keys[i]] = v, _a)));\r\n        }, {});\r\n    else if (isDict(attr))\r\n        return attr;\r\n    else\r\n        return _a = {}, _a[keys[0]] = attr, _a;\r\n};\r\nvar preprocessLookup = function (attr, definition, info) {\r\n    if (isDict(attr)) {\r\n        return filterError(map(attr, definition, function (k, v, def) {\r\n            var newInfo = __assign({}, info, { path: info.path.concat([[k, def.type]]) });\r\n            return v === null ? v : preprocess$1(v, def, newInfo);\r\n        }));\r\n    }\r\n    else\r\n        return new Error(\"attribute '\" + formatPath(info.path) + \"' must be a dictionary\");\r\n};\r\nvar preprocessArray = function (attr, definition, info) {\r\n    if (Array.isArray(attr)) {\r\n        return filterError(map(attr, definition, function (k, v, def) {\r\n            var newInfo = __assign({}, info, { path: info.path.concat([[String(k), def.type]]) });\r\n            return preprocess$1(v, def, newInfo);\r\n        }));\r\n    }\r\n    else\r\n        return new Error(\"attribute '\" + formatPath(info.path) + \"' must be an array\");\r\n};\n\nvar processUpdate = function (canvas, prevAttr, prevExpr, attrData) {\r\n    var preAttr = preprocess$1(attrData.attributes, definition$4);\r\n    if (preAttr instanceof Error)\r\n        return preAttr;\r\n    var changesForced = preAttr;\r\n    var changesInit = initialize(canvas, prevAttr, changesForced);\r\n    var changesEval = evaluate$3(prevAttr, prevExpr, changesInit);\r\n    var changes = merge(changesEval, removeInvalidEdges(prevAttr, changesEval), definition$4);\r\n    var attrMerged = (prevAttr === undefined ? changes : merge(prevAttr, changes, definition$4));\r\n    var attrRemoved = getNullEntries(changes, definition$4);\r\n    var attributes = subtractFull(attrMerged, attrRemoved, definition$4);\r\n    var exprChanged = getPermanentExpr(changesInit, definition$4);\r\n    var prevExprCleared = subtractPartial(prevExpr || {}, changesInit, definition$4);\r\n    var expressions = merge(prevExprCleared, exprChanged, definition$4);\r\n    var animation = process(attrData.animation, prevAttr, changes, changesForced);\r\n    var validateAnim = preprocess$1(animation, definition$6);\r\n    if (validateAnim instanceof Error)\r\n        return validateAnim;\r\n    return {\r\n        attributes: attributes,\r\n        changes: changes,\r\n        expressions: expressions,\r\n        animation: animation\r\n    };\r\n};\r\nvar processHighlight = function (prevState, prevExpr, attrData) {\r\n    var preAttr = preprocess$1(attrData.attributes, definition$4);\r\n    if (preAttr instanceof Error)\r\n        return preAttr;\r\n    var changes = evaluate$3(prevState, prevExpr, preAttr);\r\n    var animation = process(attrData.animation || {}, prevState, changes, changes);\r\n    var validateAnim = preprocess$1(animation, definition$6);\r\n    if (validateAnim instanceof Error)\r\n        return validateAnim;\r\n    return {\r\n        animation: animation,\r\n        changes: changes\r\n    };\r\n};\r\nvar processReset = function (prevAttr, attrData) {\r\n    var changes = { visible: false };\r\n    var animation = process(attrData.animation, prevAttr, changes, changes);\r\n    var validateAnim = preprocess$1(animation, definition$6);\r\n    if (validateAnim instanceof Error)\r\n        return validateAnim;\r\n    return {\r\n        attributes: __assign({}, prevAttr, changes),\r\n        changes: changes,\r\n        expressions: {},\r\n        animation: animation\r\n    };\r\n};\r\nvar getRenderData = function (processed) {\r\n    return {\r\n        name: 'canvas',\r\n        attr: processed.attributes,\r\n        animation: processed.animation,\r\n        changes: processed.changes\r\n    };\r\n};\n\nvar selectLabelGroup$2 = function (sel) {\r\n    return selectOrAdd(sel, '.node-labels', function (s) { return s.append('g').classed('node-labels', true); });\r\n};\r\nvar selectLabel$2 = function (sel, id) {\r\n    var renderId$$1 = renderId(id);\r\n    return selectOrAdd(sel, \"#label-\" + renderId$$1, function (s) { return s.append('g').attr('id', \"label-\" + renderId$$1); });\r\n};\r\nvar renderShape = function (selection, shape) {\r\n    selection.select('.shape').remove();\r\n    var shapeSel = selection.insert(shape, ':first-child').classed('shape', true);\r\n    if (shape === 'rect')\r\n        shapeSel.attr('rx', 4).attr('ry', 4);\r\n    return shapeSel;\r\n};\r\nvar renderSize = function (selection, sizeData, shape) {\r\n    var width = getEntry(sizeData, 'width');\r\n    var height = getEntry(sizeData, 'height');\r\n    switch (shape) {\r\n        case 'circle':\r\n            renderSvgAttr(selection, 'r', function (v) { return v; }, width);\r\n            break;\r\n        case 'rect':\r\n            renderSvgAttr(selection, 'width', function (v) { return v * 2; }, width);\r\n            renderSvgAttr(selection, 'height', function (v) { return v * 2; }, height);\r\n            renderSvgAttr(selection, 'x', function (v) { return -v; }, __assign({}, width, { name: width.name + '-pos' }));\r\n            renderSvgAttr(selection, 'y', function (v) { return -v; }, __assign({}, height, { name: height.name + '-pos' }));\r\n            break;\r\n        case 'ellipse':\r\n            renderSvgAttr(selection, 'rx', function (v) { return v; }, width);\r\n            renderSvgAttr(selection, 'ry', function (v) { return v; }, height);\r\n            break;\r\n    }\r\n};\r\nvar preprocess$2 = function (renderData) {\r\n    var shapeUpdateKeys = definition$2.keyOrder.filter(function (k) { return k !== 'pos' && k !== 'visible' && k !== 'labels'; });\r\n    return hasChanged(getEntry(renderData, 'shape'))\r\n        ? markKeysForUpdate(renderData, shapeUpdateKeys) : renderData;\r\n};\r\nvar render$4 = function (selection, renderDataInit) {\r\n    var renderData = preprocess$2(renderDataInit);\r\n    render(selection, getEntry(renderData, 'shape'), function (s, shape) { return renderShape(selection, shape); });\r\n    var shapeSelection = selection.select('.shape');\r\n    var labelGroup = selectLabelGroup$2(selection);\r\n    renderElementLookup(function (k) { return selectLabel$2(labelGroup, k); }, getEntry(renderData, 'labels'), render$2);\r\n    renderSvgAttr(shapeSelection, 'fill', function (v) { return parseColor(v); }, getEntry(renderData, 'color'));\r\n    renderSize(shapeSelection, getEntry(renderData, 'size'), getEntry(renderData, 'shape').attr);\r\n    renderSvgAttrMixin(shapeSelection, renderData);\r\n};\n\nvar render$5 = function (selection, renderData) {\r\n    renderSvgAttr(selection, 'width', function (v) { return v; }, getEntry(getEntry(renderData, 'size'), 'width'));\r\n    renderSvgAttr(selection, 'height', function (v) { return v; }, getEntry(getEntry(renderData, 'size'), 'height'));\r\n    // add an invisible rectangle to fix zooming in Safari\r\n    if (isSafari())\r\n        selectSafariFix(selection);\r\n    var canvasInner = selectCanvasInner(selection);\r\n    var labelGroup = selectLabelGroup(canvasInner);\r\n    var edgeGroup = selectEdgeGroup(canvasInner);\r\n    var nodeGroup = selectNodeGroup(canvasInner);\r\n    renderElementLookup(function (k) { return selectNode(nodeGroup, k); }, getEntry(renderData, 'nodes'), render$4);\r\n    renderElementLookup(function (k) { return selectEdge(edgeGroup, k); }, getEntry(renderData, 'edges'), render$3);\r\n    renderElementLookup(function (k) { return selectLabel(labelGroup, k); }, getEntry(renderData, 'labels'), render$2);\r\n    // re-render svg attributes when size changes\r\n    var updatedRenderData = hasChanged(getEntry(renderData, 'size'))\r\n        ? markKeysForUpdate(renderData, ['svgattr']) : renderData;\r\n    renderSvgAttrMixin(selection, updatedRenderData);\r\n};\r\nfunction renderCanvas(canvas, renderData) {\r\n    renderElement(function () { return selectCanvas(canvas); }, renderData, render$5);\r\n}\n\nvar updatePanZoomLimit = function (selection, renderData, behavior) {\r\n    if (hasChanged(getEntry(renderData, 'zoomlimit'))\r\n        || hasChanged(getEntry(renderData, 'panlimit'))\r\n        || hasChanged(getEntry(renderData, 'zoomkey'))\r\n        || behavior === undefined) {\r\n        var onZoom = function () {\r\n            selectCanvasInner(selection)\r\n                .attr('transform', event ? event.transform : '');\r\n        };\r\n        var zoomFilter_1 = function (requiresKey) {\r\n            if (event && event.type === 'wheel' && requiresKey) {\r\n                return event.ctrlKey || event.metaKey;\r\n            }\r\n            else\r\n                return true;\r\n        };\r\n        var panH = renderData.attr.panlimit.horizontal;\r\n        var panV = renderData.attr.panlimit.vertical;\r\n        var zoomKey_1 = renderData.attr.zoomkey;\r\n        var newBehavior = zoom()\r\n            .translateExtent([[-panH, -panV], [panH, panV]])\r\n            .scaleExtent([renderData.attr.zoomlimit.min, renderData.attr.zoomlimit.max])\r\n            .on('zoom', onZoom)\r\n            .filter(function () { return zoomFilter_1(zoomKey_1); });\r\n        selection.call(newBehavior);\r\n        return newBehavior;\r\n    }\r\n    else\r\n        return behavior;\r\n};\r\nvar updatePanZoom = function (selection, renderData, behavior) {\r\n    var zoomBehavior = updatePanZoomLimit(selection, renderData, behavior ? behavior.zoom : undefined);\r\n    return __assign({}, behavior, { zoom: zoomBehavior });\r\n};\r\nvar renderPanZoom = function (selection, renderData, behavior) {\r\n    var panZoomData = combine({\r\n        pos: flatten(getEntry(renderData, 'pan')),\r\n        scale: getEntry(renderData, 'zoom'),\r\n        size: flatten(getEntry(renderData, 'size'))\r\n    });\r\n    render(selection, panZoomData, function (sel, panZoom) {\r\n        var panCenter = [\r\n            panZoom.size.width / 2 - panZoom.pos.x * panZoom.scale,\r\n            panZoom.size.height / 2 + panZoom.pos.y * panZoom.scale\r\n        ];\r\n        var transform = zoomIdentity.translate(panCenter[0], panCenter[1]).scale(panZoom.scale);\r\n        return sel.call(behavior.zoom.transform, transform);\r\n    });\r\n};\r\nvar update$1 = function (canvas, renderData, behavior) {\r\n    return updatePanZoom(selectCanvas(canvas), renderData, behavior);\r\n};\r\nvar render$6 = function (canvas, renderData, behavior) {\r\n    renderPanZoom(selectCanvas(canvas), renderData, behavior);\r\n};\n\n/* tslint:disable */\r\nvar _dragging = false;\r\nvar _mouseover = false;\r\n/* tslint:enable */\r\nvar enableHover = function (canvasSel, selection, onHover) {\r\n    selection.on('mouseover', function () {\r\n        _mouseover = true;\r\n        if (!_dragging) {\r\n            canvasSel.style('cursor', 'pointer');\r\n            onHover(true);\r\n        }\r\n    });\r\n    selection.on('mouseout', function () {\r\n        _mouseover = false;\r\n        if (!_dragging) {\r\n            canvasSel.style('cursor', null);\r\n            onHover(false);\r\n        }\r\n    });\r\n};\r\nvar enableDrag = function (canvasSel, nodeSel, colaLayout, nodeLayout) {\r\n    nodeSel.call(drag().subject(function () {\r\n        var origin = Layout.dragOrigin(nodeLayout);\r\n        return __assign({}, origin, { y: -origin.y });\r\n    }).on('start', function () {\r\n        _dragging = true;\r\n        canvasSel.style('cursor', 'pointer');\r\n        Layout.dragStart(nodeLayout);\r\n    }).on('drag', function () {\r\n        Layout.drag(nodeLayout, { x: event.x, y: -event.y });\r\n        colaLayout.resume();\r\n    }).on('end', function () {\r\n        _dragging = false;\r\n        if (!_mouseover)\r\n            canvasSel.style('cursor', null);\r\n        Layout.dragEnd(nodeLayout);\r\n    }));\r\n};\r\nvar disableDrag = function (selection) {\r\n    selection.on('.drag', undefined);\r\n};\r\nvar enableClick = function (selection, onClick) {\r\n    selection.on('click', function () {\r\n        if (event.defaultPrevented)\r\n            return;\r\n        onClick();\r\n    });\r\n};\n\nvar registerNodeHover = function (canvas, renderData, onHover) {\r\n    var canvasSel = selectCanvas(canvas);\r\n    var nodeGroup = selectNodeGroup(selectCanvasInner(canvasSel));\r\n    renderVisibleLookup(getEntry(renderData, 'nodes'), function (k, nodeDataInit) {\r\n        var sel = selectNode(nodeGroup, k);\r\n        var nodeData = preprocess$2(preprocess(nodeDataInit));\r\n        onChanged(sel, getEntry(nodeData, 'hover'), function (s, nodeHover) {\r\n            var hoverFn = nodeHover.attr\r\n                ? function (entered) { return onHover(k, entered); }\r\n                : function () { };\r\n            enableHover(canvasSel, s, hoverFn);\r\n        });\r\n    });\r\n};\r\nvar registerNodeClick = function (canvas, renderData, onClick) {\r\n    var nodeGroup = selectNodeGroup(selectCanvasInner(selectCanvas(canvas)));\r\n    renderVisibleLookup(getEntry(renderData, 'nodes'), function (k, nodeDataInit) {\r\n        var sel = selectNode(nodeGroup, k);\r\n        var nodeData = preprocess$2(preprocess(nodeDataInit));\r\n        onChanged(sel, getEntry(nodeData, 'click'), function (s, nodeClick) {\r\n            var clickFn = nodeClick.attr\r\n                ? function () { return onClick(k); }\r\n                : function () { };\r\n            enableClick(s, clickFn);\r\n        });\r\n    });\r\n};\n\nvar renderWithLayout = function (canvas, renderData, layoutState) {\r\n    var canvasSel = selectCanvas(canvas);\r\n    var nodeGroup = selectNodeGroup(selectCanvasInner(canvasSel));\r\n    renderVisibleLookup(getEntry(renderData, 'nodes'), function (k, nodeData) {\r\n        var selection = selectNode(nodeGroup, k);\r\n        var draggable = getEntry(nodeData, 'draggable').attr;\r\n        if (draggable)\r\n            enableDrag(canvasSel, selection, layoutState.cola, layoutState.nodes[k]);\r\n        else\r\n            disableDrag(selection);\r\n    });\r\n};\r\nvar renderWithTick = function (canvas, renderData, tick) {\r\n    // changing node size requires the live layout function to be called continuously,\r\n    // so that connected edges are animated as well\r\n    var canvasSel = selectCanvas(canvas);\r\n    var nodeGroup = selectNodeGroup(selectCanvasInner(canvasSel));\r\n    renderVisibleLookup(getEntry(renderData, 'nodes'), function (k, nodeDataInit) {\r\n        var nodeData = preprocess$2(preprocess(nodeDataInit));\r\n        var selection = selectNode(nodeGroup, k);\r\n        var width = getEntry(getEntry(nodeData, 'size'), 'width');\r\n        var shape = getEntry(nodeData, 'shape');\r\n        var height = shape.attr === 'circle' ? __assign({}, width, { name: 'height' }) : getEntry(getEntry(nodeData, 'size'), 'height');\r\n        render(selection, width, function (liveSel, w) {\r\n            if (isTransition(liveSel))\r\n                return liveSel.attr('_width', w).tween(name, function () { return function () { tick(); }; });\r\n            else\r\n                return liveSel.attr('_width', w);\r\n        });\r\n        render(selection, height, function (liveSel, h) {\r\n            if (isTransition(liveSel))\r\n                return liveSel.attr('_height', h).tween(name, function () { return function () { tick(); }; });\r\n            else\r\n                return liveSel.attr('_height', h);\r\n        });\r\n    });\r\n};\n\nvar dispatchError = function (message, type) {\r\n    return ({ type: EnumReceiveType.error, data: { message: message, type: type } });\r\n};\r\nvar dispatchClick = function (nodeId) {\r\n    return ({ type: EnumReceiveType.click, data: { id: nodeId } });\r\n};\r\nvar dispatchHover = function (nodeId, entered) {\r\n    return ({ type: EnumReceiveType.hover, data: { id: nodeId, entered: entered } });\r\n};\r\nvar executeReset = function (context, event$$1) {\r\n    var state = context.state;\r\n    if (state.attributes === undefined)\r\n        return state;\r\n    var processed = processReset(state.attributes, event$$1.data);\r\n    if (processed instanceof Error) {\r\n        context.listener(dispatchError(processed.message, EnumErrorType.attribute));\r\n        return state;\r\n    }\r\n    var renderData = getRenderData(processed);\r\n    renderCanvas(state.canvas, renderData);\r\n    return __assign({}, state, { expressions: undefined, attributes: undefined, layout: reset(state.layout), renderBehavior: undefined });\r\n};\r\nvar render$7 = function (canvas, renderData, tick, layoutState) {\r\n    renderCanvas(canvas, renderData);\r\n    if (renderData.attr.visible === false)\r\n        return;\r\n    renderWithLayout(canvas, renderData, layoutState);\r\n    renderWithTick(canvas, renderData, tick);\r\n    updateCanvas(canvas, renderData.attr, layoutState);\r\n};\r\nvar renderBehavior = function (canvas, renderData, behavior) {\r\n    if (renderData.attr.visible === false)\r\n        return behavior;\r\n    var newBehavior = update$1(canvas, renderData, behavior);\r\n    render$6(canvas, renderData, newBehavior);\r\n    return newBehavior;\r\n};\r\nvar executeUpdate = function (context, event$$1) {\r\n    var state = context.state;\r\n    if (event$$1.data.attributes === null)\r\n        return executeReset(context, event$$1);\r\n    var processed = processUpdate(state.canvas, state.attributes, state.expressions, event$$1.data);\r\n    if (processed instanceof Error) {\r\n        context.listener(dispatchError(processed.message, EnumErrorType.attribute));\r\n        return state;\r\n    }\r\n    var renderData = preprocess(getRenderData(processed));\r\n    var layoutState = update(state.layout, processed.attributes, processed.changes);\r\n    render$7(state.canvas, renderData, context.tick, layoutState);\r\n    var newBehavior = renderBehavior(state.canvas, renderData, state.renderBehavior);\r\n    if (processed.attributes.visible) {\r\n        var clickFn = function (n) { return context.listener(dispatchClick(n)); };\r\n        var hoverFn = function (n, h) { return context.listener(dispatchHover(n, h)); };\r\n        registerNodeClick(state.canvas, renderData, clickFn);\r\n        registerNodeHover(state.canvas, renderData, hoverFn);\r\n    }\r\n    return __assign({}, state, { expressions: processed.expressions, attributes: processed.attributes, layout: layoutState, renderBehavior: newBehavior });\r\n};\r\nvar executeHighlight = function (context, event$$1) {\r\n    var state = context.state;\r\n    var processed = processHighlight(state.attributes, state.expressions, event$$1.data);\r\n    if (processed instanceof Error) {\r\n        context.listener(dispatchError(processed.message, EnumErrorType.attribute));\r\n        return;\r\n    }\r\n    var renderDataInit = {\r\n        name: 'canvas',\r\n        attr: state.attributes,\r\n        animation: processed.animation,\r\n        highlight: processed.changes\r\n    };\r\n    var renderData = preprocess(renderDataInit);\r\n    render$7(state.canvas, renderData, context.tick, state.layout);\r\n    renderBehavior(state.canvas, renderData, state.renderBehavior);\r\n};\r\nvar executeEvent = function (context, event$$1) {\r\n    if (event$$1.type === EnumDispatchType.broadcast) {\r\n        context.listener({\r\n            type: EnumReceiveType.broadcast,\r\n            data: { message: event$$1.data.message }\r\n        });\r\n        return context.state;\r\n    }\r\n    else if (event$$1.type === EnumDispatchType.update) {\r\n        return executeUpdate(context, event$$1);\r\n    }\r\n    else if (event$$1.type === EnumDispatchType.highlight) {\r\n        executeHighlight(context, event$$1);\r\n        return context.state;\r\n    }\r\n    else\r\n        return context.state;\r\n};\n\nvar init$6 = function (canvas, receiveEvent, tick) {\r\n    return {\r\n        canvas: canvas,\r\n        scheduler: init(receiveEvent),\r\n        expressions: undefined,\r\n        attributes: undefined,\r\n        layout: init$3(tick),\r\n        renderBehavior: undefined\r\n    };\r\n};\r\nvar client = function (canvas) {\r\n    var buildClient = function (self) { return ({\r\n        state: undefined,\r\n        listener: undefined,\r\n        setState: function (state) {\r\n            /* tslint:disable */\r\n            self().state = state;\r\n            /* tslint:enable */\r\n        },\r\n        onReceive: function (fn) {\r\n            /* tslint:disable */\r\n            self().listener = fn;\r\n            /* tslint:enable */\r\n        },\r\n        dispatch: function (event$$1) {\r\n            var task = schedule(self().state.scheduler, event$$1.queue, event$$1);\r\n            self().setState(__assign({}, self().state, { scheduler: task.state }));\r\n            task.execute();\r\n        },\r\n        receiveEvent: function (event$$1, queue) {\r\n            var schedulerState = self().state.scheduler;\r\n            var task = execute(schedulerState, queue, event$$1, self().executeEvent);\r\n            self().setState(__assign({}, self().state, { scheduler: task.state }));\r\n            task.execute();\r\n        },\r\n        executeEvent: function (event$$1) {\r\n            var executeContext = {\r\n                state: self().state,\r\n                listener: self().listener,\r\n                tick: self().tick\r\n            };\r\n            var state = executeEvent(executeContext, event$$1);\r\n            self().setState(state);\r\n            self().tick();\r\n        },\r\n        tick: function () {\r\n            var state = self().state;\r\n            if (state !== undefined && state.attributes !== undefined)\r\n                updateCanvas(canvas, state.attributes, state.layout);\r\n        }\r\n    }); };\r\n    var newClient = buildClient(function () { return newClient; });\r\n    newClient.setState(init$6(canvas, newClient.receiveEvent, newClient.tick));\r\n    return newClient;\r\n};\n\nvar builder$5 = function (context, self) { return ({\r\n    dispatch: function (event$$1) {\r\n        context.realClient.dispatch(event$$1);\r\n    },\r\n    subscribe: function (listener) {\r\n        context.subscriptions.push(listener);\r\n        context.realClient.onReceive(function (event$$1) {\r\n            context.subscriptions.forEach(function (fn) { return fn(event$$1); });\r\n        });\r\n    },\r\n    canvas: function () {\r\n        return canvasSelection(context.realCanvas, self());\r\n    }\r\n}); };\r\nvar client$1 = function (canvas) {\r\n    var context = {\r\n        realClient: client(canvas),\r\n        realCanvas: canvas,\r\n        subscriptions: []\r\n    };\r\n    return build(builder$5, context);\r\n};\n\n/**\r\n * Creates a new [[Client]], responsible for rendering the network, storing application state, and dispatching and receiving\r\n * events. The network can be rendered in any HTML element on the page (preferably a `div`), or an `Element` object.\r\n * A client should only be used directly if complete control over event handling is required.\r\n *\r\n * @param output - The `id` attribute of an element in which to render the network, or an `Element` object.\r\n *\r\n * @return A new [[Client]].\r\n */\r\nvar client$2 = function (output) {\r\n    return client$1(output);\r\n};\r\n/**\r\n * Creates a new [[CanvasSelection]], providing an interface to the network's graphics. The network can be rendered in\r\n * any HTML element on the page (preferably a `div`), or an `Element` object. This will automatically initialize a\r\n * [[Client]] and return its corresponding interface.\r\n *\r\n * @param output - The `id` attribute of an element on the HTML page to use as the canvas, or an `Element` object.\r\n *\r\n * @return A new [[CanvasSelection]].\r\n */\r\nvar canvas = function (output) {\r\n    return client$2(output).canvas();\r\n};\n\nexport { client$2 as client, canvas, canvasSelection };\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n"],"sourceRoot":""}